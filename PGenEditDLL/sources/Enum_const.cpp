#include "pch.h"
#include "main.h"
#include "Enum_const.h"
#include "Utility.h"
#include "PlayerStructAccessor.h"

extern const int INVALID_ID;
extern int MMVER;

int MAX_PLAYERS = 0;

bool IS_ELEMENTAL_MOD = false;
bool IS_MERGE = false;

int CURRENT_PARTY_SIZE = 0;

Mastery MAX_MASTERY = Mastery::MASTERY_GM; // 3 in mm6, 4 in mm7+
SkillCombineMode SKILL_COMBINE_MODE = BIT_PER_MASTERY;
int SKILL_BITS = 6;
std::array<int, 5> MASTERY_BITS = {-1, -1, 6, 7, 8};

const double MINIMUM_AFFINITY = 0.0;
const double MAXIMUM_AFFINITY = 1.0;

int NUM_CLASSES = 30;

const std::unordered_map<std::string, int> plTypeEnumStringToId = { {"caster", PLAYER_CASTER}, {"melee", PLAYER_MELEE}, {"defensive", PLAYER_DEFENSIVE}
	, {"utility", PLAYER_UTILITY}, {"ranged", PLAYER_RANGED} };
const std::unordered_map<std::string, int> alignmentStringToId = { {"neutral", ALIGNMENT_NEUTRAL}, {"light", ALIGNMENT_LIGHT}, {"dark", ALIGNMENT_DARK}, {"any", ALIGNMENT_ANY} };


const std::unordered_map<int, std::string> plTypeEnumIdToString = invertMap(plTypeEnumStringToId);
const std::unordered_map<int, std::string> alignmentIdToString = invertMap(alignmentStringToId);

// GAME ENUMS

int nextFreeCustomId()
{
	static int id = 100;
	return id++;
}

void checkStatValidity(int stat)
{
    wxASSERT_MSG(existsInVector(STATS_ALL, stat), wxString::Format("Stat %d doesn't exist in game version %d", stat, MMVER));
}

void checkDamageTypeValidity(int dmgType)
{
    wxASSERT_MSG(existsInVector(ALL_DAMAGE, (int64_t)dmgType), wxString::Format("Damage type %d doesn't exist in game version %d", dmgType, MMVER));
}

int
STAT_MIGHT = INVALID_ID,
STAT_INTELLECT = INVALID_ID,
STAT_PERSONALITY = INVALID_ID,
STAT_ENDURANCE = INVALID_ID,
STAT_ACCURACY = INVALID_ID,
STAT_SPEED = INVALID_ID,
STAT_LUCK = INVALID_ID,
STAT_HIT_POINTS = INVALID_ID,
STAT_SPELL_POINTS = INVALID_ID,
STAT_ARMOR_CLASS = INVALID_ID,
STAT_FIRE_RESISTANCE = INVALID_ID,
STAT_ELEC_RESISTANCE = INVALID_ID,
STAT_COLD_RESISTANCE = INVALID_ID,
STAT_POISON_RESISTANCE = INVALID_ID,
STAT_LEVEL = INVALID_ID,
STAT_MELEE_ATTACK = INVALID_ID,
STAT_MELEE_DAMAGE_BASE = INVALID_ID,
STAT_MELEE_DAMAGE_MIN = INVALID_ID,
STAT_MELEE_DAMAGE_MAX = INVALID_ID,
STAT_RANGED_ATTACK = INVALID_ID,
STAT_RANGED_DAMAGE_BASE = INVALID_ID,
STAT_RANGED_DAMAGE_MIN = INVALID_ID,
STAT_RANGED_DAMAGE_MAX = INVALID_ID,
STAT_MAGIC_RESISTANCE = INVALID_ID,
STAT_AIR_RESISTANCE = INVALID_ID,
STAT_WATER_RESISTANCE = INVALID_ID,
STAT_EARTH_RESISTANCE = INVALID_ID,
STAT_MIND_RESISTANCE = INVALID_ID,
STAT_BODY_RESISTANCE = INVALID_ID,
STAT_ALCHEMY = INVALID_ID,
STAT_STEALING = INVALID_ID,
STAT_DISARM_TRAPS = INVALID_ID,
STAT_IDENTIFY_ITEM = INVALID_ID,
STAT_IDENTIFY_MONSTER = INVALID_ID,
STAT_ARMSMASTER = INVALID_ID,
STAT_DODGING = INVALID_ID,
STAT_UNARMED = INVALID_ID,
STAT_SPIRIT_RESISTANCE = INVALID_ID,
STAT_FIRE_MAGIC = INVALID_ID,
STAT_AIR_MAGIC = INVALID_ID,
STAT_WATER_MAGIC = INVALID_ID,
STAT_EARTH_MAGIC = INVALID_ID,
STAT_SPIRIT_MAGIC = INVALID_ID,
STAT_MIND_MAGIC = INVALID_ID,
STAT_BODY_MAGIC = INVALID_ID,
STAT_LIGHT_MAGIC = INVALID_ID,
STAT_DARK_MAGIC = INVALID_ID,
STAT_MEDITATION = INVALID_ID,
STAT_BOW = INVALID_ID,
STAT_SHIELD = INVALID_ID,
STAT_LEARNING = INVALID_ID,
STAT_DARK_ELF = INVALID_ID,
STAT_VAMPIRE = INVALID_ID,
STAT_DRAGON = INVALID_ID;

int
STAT_LIGHT_RESISTANCE = INVALID_ID,
STAT_DARK_RESISTANCE = INVALID_ID,
STAT_RANGED_ATTACK_BONUS = INVALID_ID,
STAT_RANGED_DAMAGE_BONUS = INVALID_ID,
STAT_MELEE_ATTACK_BONUS = INVALID_ID,
STAT_MELEE_DAMAGE_BONUS = INVALID_ID,
STAT_HIT_POINTS_BONUS = INVALID_ID,
STAT_SPELL_POINTS_BONUS = INVALID_ID,
STAT_AGE = INVALID_ID;

void makeEnumStats_6()
{
	STAT_MIGHT = 0;
	STAT_INTELLECT = 1;
	STAT_PERSONALITY = 2;
	STAT_ENDURANCE = 3;
	STAT_ACCURACY = 4;
	STAT_SPEED = 5;
	STAT_LUCK = 6;
	STAT_HIT_POINTS = 7;
	STAT_SPELL_POINTS = 8;
	STAT_ARMOR_CLASS = 9;
	STAT_FIRE_RESISTANCE = 10;
	STAT_ELEC_RESISTANCE = 11;
	STAT_COLD_RESISTANCE = 12;
	STAT_POISON_RESISTANCE = 13;
	STAT_LEVEL = 14;
	STAT_MELEE_ATTACK = 15;
	STAT_MELEE_DAMAGE_BASE = 16;
	STAT_MELEE_DAMAGE_MIN = 17;
	STAT_MELEE_DAMAGE_MAX = 18;
	STAT_RANGED_ATTACK = 19;
	STAT_RANGED_DAMAGE_BASE = 20;
	STAT_RANGED_DAMAGE_MIN = 21;
	STAT_RANGED_DAMAGE_MAX = 22;
	STAT_MAGIC_RESISTANCE = 23;

	STAT_RANGED_ATTACK_BONUS = nextFreeCustomId();
	STAT_RANGED_DAMAGE_BONUS = nextFreeCustomId();
	STAT_MELEE_ATTACK_BONUS = nextFreeCustomId();
	STAT_MELEE_DAMAGE_BONUS = nextFreeCustomId();
	STAT_HIT_POINTS_BONUS = nextFreeCustomId();
	STAT_SPELL_POINTS_BONUS = nextFreeCustomId();
	STAT_AGE = nextFreeCustomId();
}

void makeEnumStats_7()
{
	STAT_MIGHT = 0;
	STAT_INTELLECT = 1;
	STAT_PERSONALITY = 2;
	STAT_ENDURANCE = 3;
	STAT_ACCURACY = 4;
	STAT_SPEED = 5;
	STAT_LUCK = 6;
	STAT_HIT_POINTS = 7;
	STAT_SPELL_POINTS = 8;
	STAT_ARMOR_CLASS = 9;
	STAT_FIRE_RESISTANCE = 10;
	STAT_AIR_RESISTANCE = 11;
	STAT_WATER_RESISTANCE = 12;
	STAT_EARTH_RESISTANCE = 13;
	STAT_MIND_RESISTANCE = 14;
	STAT_BODY_RESISTANCE = 15;
	STAT_ALCHEMY = 16;
	STAT_STEALING = 17;
	STAT_DISARM_TRAPS = 18;
	STAT_IDENTIFY_ITEM = 19;
	STAT_IDENTIFY_MONSTER = 20;
	STAT_ARMSMASTER = 21;
	STAT_DODGING = 22;
	STAT_UNARMED = 23;
	STAT_LEVEL = 24;
	STAT_MELEE_ATTACK = 25;
	STAT_MELEE_DAMAGE_BASE = 26;
	STAT_MELEE_DAMAGE_MIN = 27;
	STAT_MELEE_DAMAGE_MAX = 28;
	STAT_RANGED_ATTACK = 29;
	STAT_RANGED_DAMAGE_BASE = 30;
	STAT_RANGED_DAMAGE_MIN = 31;
	STAT_RANGED_DAMAGE_MAX = 32;
	STAT_SPIRIT_RESISTANCE = 33;
	STAT_FIRE_MAGIC = 34;
	STAT_AIR_MAGIC = 35;
	STAT_WATER_MAGIC = 36;
	STAT_EARTH_MAGIC = 37;
	STAT_SPIRIT_MAGIC = 38;
	STAT_MIND_MAGIC = 39;
	STAT_BODY_MAGIC = 40;
	STAT_LIGHT_MAGIC = 41;
	STAT_DARK_MAGIC = 42;
	STAT_MEDITATION = 43;
	STAT_BOW = 44;
	STAT_SHIELD = 45;
	STAT_LEARNING = 46;

	STAT_LIGHT_RESISTANCE = nextFreeCustomId();
	STAT_DARK_RESISTANCE = nextFreeCustomId();
	STAT_RANGED_ATTACK_BONUS = nextFreeCustomId();
	STAT_RANGED_DAMAGE_BONUS = nextFreeCustomId();
	STAT_MELEE_ATTACK_BONUS = nextFreeCustomId();
	STAT_MELEE_DAMAGE_BONUS = nextFreeCustomId();
	STAT_HIT_POINTS_BONUS = nextFreeCustomId();
	STAT_SPELL_POINTS_BONUS = nextFreeCustomId();
	STAT_AGE = nextFreeCustomId();
}

void makeEnumStats_8()
{
	STAT_MIGHT = 0;
	STAT_INTELLECT = 1;
	STAT_PERSONALITY = 2;
	STAT_ENDURANCE = 3;
	STAT_ACCURACY = 4;
	STAT_SPEED = 5;
	STAT_LUCK = 6;
	STAT_HIT_POINTS = 7;
	STAT_SPELL_POINTS = 8;
	STAT_ARMOR_CLASS = 9;
	STAT_FIRE_RESISTANCE = 10;
	STAT_AIR_RESISTANCE = 11;
	STAT_WATER_RESISTANCE = 12;
	STAT_EARTH_RESISTANCE = 13;
	STAT_MIND_RESISTANCE = 14;
	STAT_BODY_RESISTANCE = 15;
	STAT_ALCHEMY = 16;
	STAT_STEALING = 17;
	STAT_DISARM_TRAPS = 18;
	STAT_IDENTIFY_ITEM = 19;
	STAT_IDENTIFY_MONSTER = 20;
	STAT_ARMSMASTER = 21;
	STAT_DODGING = 22;
	STAT_UNARMED = 23;
	STAT_LEVEL = 24;
	STAT_MELEE_ATTACK = 25;
	STAT_MELEE_DAMAGE_BASE = 26;
	STAT_MELEE_DAMAGE_MIN = 27;
	STAT_MELEE_DAMAGE_MAX = 28;
	STAT_RANGED_ATTACK = 29;
	STAT_RANGED_DAMAGE_BASE = 30;
	STAT_RANGED_DAMAGE_MIN = 31;
	STAT_RANGED_DAMAGE_MAX = 32;
	STAT_SPIRIT_RESISTANCE = 33;
	STAT_FIRE_MAGIC = 34;
	STAT_AIR_MAGIC = 35;
	STAT_WATER_MAGIC = 36;
	STAT_EARTH_MAGIC = 37;
	STAT_SPIRIT_MAGIC = 38;
	STAT_MIND_MAGIC = 39;
	STAT_BODY_MAGIC = 40;
	STAT_LIGHT_MAGIC = 41;
	STAT_DARK_MAGIC = 42;
	STAT_MEDITATION = 43;
	STAT_BOW = 44;
	STAT_SHIELD = 45;
	STAT_LEARNING = 46;
	STAT_DARK_ELF = 47;
	STAT_VAMPIRE = 48;
	STAT_DRAGON = 49;

	STAT_LIGHT_RESISTANCE = nextFreeCustomId();
	STAT_DARK_RESISTANCE = nextFreeCustomId();
	STAT_AGE = nextFreeCustomId();
}

std::vector<int> STATS_PRIMARY;
std::vector<int> STATS_RESISTANCES;
std::vector<int> STATS_MELEE_RANGED;
std::vector<int> STATS_SKILLS;
std::vector<int> STATS_MM67_BONUSES;
std::vector<int> STATS_OTHER;
std::vector<int> STATS_ALL;

void makeEnums()
{
    typedef void(*Func)();
    Func stats = mmv(makeEnumStats_6, makeEnumStats_7, makeEnumStats_8), damage = mmv(makeEnumDamage_6, makeEnumDamage_7, makeEnumDamage_8),
        itemSlot = mmv(makeEnumItemSlot_6, makeEnumItemSlot_7, makeEnumItemSlot_8), partyBuff = mmv(makeEnumPartyBuff_6, makeEnumPartyBuff_7, makeEnumPartyBuff_8),
        monsterBits = mmv(makeEnumMonsterBits_6, makeEnumMonsterBits_7, makeEnumMonsterBits_8), monsterBuff = mmv(makeEnumMonsterBuff_6, makeEnumMonsterBuff_7, makeEnumMonsterBuff_8),
        monsterBonus = mmv(makeEnumMonsterBonus_6, makeEnumMonsterBonus_7, makeEnumMonsterBonus_8), monsterKind = mmv(makeEnumMonsterKind_6, makeEnumMonsterKind_7, makeEnumMonsterKind_8),
        itemType = mmv(makeEnumItemType_6, makeEnumItemType_7, makeEnumItemType_8), houseType = mmv(makeEnumHouseType_6, makeEnumHouseType_7, makeEnumHouseType_8),
        houseScreens = mmv(makeEnumHouseScreens_6, makeEnumHouseScreens_7, makeEnumHouseScreens_8), facetBits = mmv(makeEnumFacetBits_6, makeEnumFacetBits_7, makeEnumFacetBits_8),
        faceAnimation = mmv(makeEnumFaceAnimation_6, makeEnumFaceAnimation_7, makeEnumFaceAnimation_8), condition = mmv(makeEnumCondition_6, makeEnumCondition_7, makeEnumCondition_8),
        chestBits = mmv(makeEnumChestBits_6, makeEnumChestBits_7, makeEnumChestBits_8), aistate = mmv(makeEnumAIState_6, makeEnumAIState_7, makeEnumAIState_8),
        spells = mmv(makeEnumSpells_6, makeEnumSpells_7, makeEnumSpells_8);

    stats();
    damage();
    itemSlot();
    partyBuff();
    monsterBits();
    monsterBuff();
    monsterBonus();
    monsterKind();
    itemType();
    houseType();
    houseScreens();
    facetBits();
    faceAnimation();
    condition();
    chestBits();
    aistate();
    spells();

	if (MMVER == 6)
	{
		STATS_RESISTANCES.insert(STATS_RESISTANCES.end(), {STAT_FIRE_RESISTANCE, STAT_COLD_RESISTANCE, STAT_ELEC_RESISTANCE, STAT_POISON_RESISTANCE, STAT_MAGIC_RESISTANCE});
	}
	else if (MMVER == 7)
	{

	}
	else if (MMVER == 8)
	{
		STATS_SKILLS.insert(STATS_SKILLS.end(), { STAT_DRAGON, STAT_DARK_ELF, STAT_VAMPIRE });
	}
	else
	{
		wxLogFatalError("Unknown MM version (%d)!", MMVER);
	}

	// STATS
	{
		if (MMVER < 8)
		{
			STATS_MM67_BONUSES.insert(STATS_MM67_BONUSES.begin(), { STAT_MELEE_ATTACK_BONUS, STAT_MELEE_DAMAGE_BONUS, STAT_RANGED_ATTACK_BONUS,
				STAT_RANGED_DAMAGE_BONUS, STAT_HIT_POINTS_BONUS, STAT_SPELL_POINTS_BONUS });
		}
		if (MMVER > 6)
		{
			STATS_RESISTANCES.insert(STATS_RESISTANCES.end(), { STAT_FIRE_RESISTANCE, STAT_WATER_RESISTANCE, STAT_AIR_RESISTANCE, STAT_EARTH_RESISTANCE, STAT_BODY_RESISTANCE,
				STAT_SPIRIT_RESISTANCE, STAT_MIND_RESISTANCE, STAT_LIGHT_RESISTANCE, STAT_DARK_RESISTANCE });

			STATS_SKILLS.insert(STATS_SKILLS.end(), { STAT_FIRE_MAGIC, STAT_AIR_MAGIC, STAT_EARTH_MAGIC, STAT_WATER_MAGIC, STAT_BODY_MAGIC, STAT_SPIRIT_MAGIC,
				STAT_MIND_MAGIC, STAT_LIGHT_MAGIC, STAT_DARK_MAGIC, STAT_BOW, STAT_MEDITATION, STAT_SHIELD, STAT_LEARNING, STAT_ARMSMASTER, STAT_ALCHEMY, STAT_DODGING,
				STAT_UNARMED, STAT_IDENTIFY_ITEM, STAT_IDENTIFY_MONSTER, STAT_STEALING });
		}
		STATS_PRIMARY.insert(STATS_PRIMARY.end(), { STAT_MIGHT, STAT_INTELLECT, STAT_PERSONALITY, STAT_ENDURANCE, STAT_ACCURACY, STAT_SPEED, STAT_LUCK });

		STATS_MELEE_RANGED.insert(STATS_MELEE_RANGED.end(), { STAT_MELEE_ATTACK, STAT_MELEE_DAMAGE_BASE, STAT_MELEE_DAMAGE_MAX, STAT_MELEE_DAMAGE_MIN,
			STAT_RANGED_ATTACK, STAT_RANGED_DAMAGE_BASE, STAT_RANGED_DAMAGE_MAX, STAT_RANGED_DAMAGE_MIN });

		STATS_OTHER.insert(STATS_OTHER.end(), { STAT_HIT_POINTS, STAT_SPELL_POINTS, STAT_ARMOR_CLASS, STAT_LEVEL, STAT_AGE });

		// all
		STATS_ALL.insert(STATS_ALL.end(), STATS_PRIMARY.begin(), STATS_PRIMARY.end());
		STATS_ALL.insert(STATS_ALL.end(), STATS_MELEE_RANGED.begin(), STATS_MELEE_RANGED.end());
		STATS_ALL.insert(STATS_ALL.end(), STATS_RESISTANCES.begin(), STATS_RESISTANCES.end());
		STATS_ALL.insert(STATS_ALL.end(), STATS_SKILLS.begin(), STATS_SKILLS.end());
		STATS_ALL.insert(STATS_ALL.end(), STATS_OTHER.begin(), STATS_OTHER.end());
		STATS_ALL.insert(STATS_ALL.end(), STATS_MM67_BONUSES.begin(), STATS_MM67_BONUSES.end());
	}
}

int64_t
DMG_PHYS = INVALID_ID,
DMG_MAGIC = INVALID_ID,
DMG_FIRE = INVALID_ID,
DMG_ELEC = INVALID_ID,
DMG_COLD = INVALID_ID,
DMG_POISON = INVALID_ID,
DMG_ENERGY = INVALID_ID,
DMG_AIR = INVALID_ID,
DMG_WATER = INVALID_ID,
DMG_EARTH = INVALID_ID,
DMG_SPIRIT = INVALID_ID,
DMG_MIND = INVALID_ID,
DMG_BODY = INVALID_ID,
DMG_LIGHT = INVALID_ID,
DMG_DARK = INVALID_ID,
DMG_DRAGON = INVALID_ID;

std::vector<int64_t> ALL_DAMAGE;
std::map<int64_t, std::string> ENUM_TO_STRING_DAMAGE;

void makeEnumDamage_6()
{
    DMG_PHYS = 0;
    DMG_MAGIC = 1;
    DMG_FIRE = 2;
    DMG_ELEC = 3;
    DMG_COLD = 4;
    DMG_POISON = 5;
    DMG_ENERGY = 6;

    ALL_DAMAGE = { DMG_PHYS, DMG_MAGIC, DMG_FIRE, DMG_ELEC, DMG_COLD, DMG_POISON, DMG_ENERGY };

    ENUM_TO_STRING_DAMAGE = { {DMG_PHYS, "Phys"}, {DMG_MAGIC, "Magic"}, {DMG_FIRE, "Fire"}, {DMG_ELEC, "Elec"}, {DMG_COLD, "Cold"}, {DMG_POISON, "Poison"}, {DMG_ENERGY, "Energy"} };
}

void makeEnumDamage_7()
{
    DMG_FIRE = 0;
    DMG_AIR = 1;
    DMG_WATER = 2;
    DMG_EARTH = 3;
    DMG_PHYS = 4;
    DMG_MAGIC = 5;
    DMG_SPIRIT = 6;
    DMG_MIND = 7;
    DMG_BODY = 8;
    DMG_LIGHT = 9;
    DMG_DARK = 10;
    DMG_ENERGY = 12;

    ALL_DAMAGE = { DMG_FIRE, DMG_AIR, DMG_WATER, DMG_EARTH, DMG_PHYS, DMG_MAGIC, DMG_SPIRIT, DMG_MIND, DMG_BODY, DMG_LIGHT, DMG_DARK, DMG_ENERGY };

    ENUM_TO_STRING_DAMAGE = { {DMG_FIRE, "Fire"}, {DMG_AIR, "Air"}, {DMG_WATER, "Water"}, {DMG_EARTH, "Earth"}, {DMG_PHYS, "Phys"}, {DMG_MAGIC, "Magic"}, {DMG_SPIRIT, "Spirit"}, {DMG_MIND, "Mind"}, {DMG_BODY, "Body"}, {DMG_LIGHT, "Light"}, {DMG_DARK, "Dark"}, {DMG_ENERGY, "Energy"} };
}

void makeEnumDamage_8()
{
    DMG_FIRE = 0;
    DMG_AIR = 1;
    DMG_WATER = 2;
    DMG_EARTH = 3;
    DMG_PHYS = 4;
    DMG_MAGIC = 5;
    DMG_SPIRIT = 6;
    DMG_MIND = 7;
    DMG_BODY = 8;
    DMG_LIGHT = 9;
    DMG_DARK = 10;
    DMG_ENERGY = 12;
    DMG_DRAGON = 50;

    ALL_DAMAGE = { DMG_FIRE, DMG_AIR, DMG_WATER, DMG_EARTH, DMG_PHYS, DMG_MAGIC, DMG_SPIRIT, DMG_MIND, DMG_BODY, DMG_LIGHT, DMG_DARK, DMG_ENERGY, DMG_DRAGON };

    ENUM_TO_STRING_DAMAGE = { {DMG_FIRE, "Fire"}, {DMG_AIR, "Air"}, {DMG_WATER, "Water"}, {DMG_EARTH, "Earth"}, {DMG_PHYS, "Phys"}, {DMG_MAGIC, "Magic"}, {DMG_SPIRIT, "Spirit"}, {DMG_MIND, "Mind"}, {DMG_BODY, "Body"}, {DMG_LIGHT, "Light"}, {DMG_DARK, "Dark"}, {DMG_ENERGY, "Energy"}, {DMG_DRAGON, "Dragon"} };
}


int64_t
ITEM_TYPE_ANY = INVALID_ID,
ITEM_TYPE_WEAPON = INVALID_ID,
ITEM_TYPE_WEAPON_2H = INVALID_ID,
ITEM_TYPE_MISSILE = INVALID_ID,
ITEM_TYPE_ARMOR = INVALID_ID,
ITEM_TYPE_SHIELD = INVALID_ID,
ITEM_TYPE_HELM = INVALID_ID,
ITEM_TYPE_BELT = INVALID_ID,
ITEM_TYPE_CLOAK = INVALID_ID,
ITEM_TYPE_GAUNTLETS = INVALID_ID,
ITEM_TYPE_BOOTS = INVALID_ID,
ITEM_TYPE_RING = INVALID_ID,
ITEM_TYPE_AMULET = INVALID_ID,
ITEM_TYPE_WAND = INVALID_ID,
ITEM_TYPE_REAGENT = INVALID_ID,
ITEM_TYPE_POTION = INVALID_ID,
ITEM_TYPE_SCROLL = INVALID_ID,
ITEM_TYPE_BOOK = INVALID_ID,
ITEM_TYPE_MSCROLL = INVALID_ID,
ITEM_TYPE_GOLD = INVALID_ID,
ITEM_TYPE_WEAPON_ = INVALID_ID,
ITEM_TYPE_ARMOR_ = INVALID_ID,
ITEM_TYPE_MISC = INVALID_ID,
ITEM_TYPE_SWORD = INVALID_ID,
ITEM_TYPE_DAGGER = INVALID_ID,
ITEM_TYPE_AXE = INVALID_ID,
ITEM_TYPE_SPEAR = INVALID_ID,
ITEM_TYPE_BOW = INVALID_ID,
ITEM_TYPE_MACE = INVALID_ID,
ITEM_TYPE_CLUB = INVALID_ID,
ITEM_TYPE_STAFF = INVALID_ID,
ITEM_TYPE_LEATHER = INVALID_ID,
ITEM_TYPE_CHAIN = INVALID_ID,
ITEM_TYPE_PLATE = INVALID_ID,
ITEM_TYPE_SHIELD_ = INVALID_ID,
ITEM_TYPE_HELM_ = INVALID_ID,
ITEM_TYPE_BELT_ = INVALID_ID,
ITEM_TYPE_CLOAK_ = INVALID_ID,
ITEM_TYPE_GAUNTLETS_ = INVALID_ID,
ITEM_TYPE_BOOTS_ = INVALID_ID,
ITEM_TYPE_RING_ = INVALID_ID,
ITEM_TYPE_AMULET_ = INVALID_ID,
ITEM_TYPE_WAND_ = INVALID_ID,
ITEM_TYPE_SCROLL_ = INVALID_ID,
ITEM_TYPE_POTION_ = INVALID_ID,
ITEM_TYPE_REAGENT_ = INVALID_ID,
ITEM_TYPE_GEMS = INVALID_ID,
ITEM_TYPE_GEMS_2 = INVALID_ID,
ITEM_TYPE_GOLD_ = INVALID_ID;

std::vector<int64_t> ALL_ITEM_TYPE;
std::map<int64_t, std::string> ENUM_TO_STRING_ITEM_TYPE;

void makeEnumItemType_6()
{
    ITEM_TYPE_ANY = 0;
    ITEM_TYPE_WEAPON = 1;
    ITEM_TYPE_WEAPON_2H = 2;
    ITEM_TYPE_MISSILE = 3;
    ITEM_TYPE_ARMOR = 4;
    ITEM_TYPE_SHIELD = 5;
    ITEM_TYPE_HELM = 6;
    ITEM_TYPE_BELT = 7;
    ITEM_TYPE_CLOAK = 8;
    ITEM_TYPE_GAUNTLETS = 9;
    ITEM_TYPE_BOOTS = 10;
    ITEM_TYPE_RING = 11;
    ITEM_TYPE_AMULET = 12;
    ITEM_TYPE_WAND = 13;
    ITEM_TYPE_REAGENT = 14;
    ITEM_TYPE_POTION = 15;
    ITEM_TYPE_SCROLL = 16;
    ITEM_TYPE_BOOK = 17;
    ITEM_TYPE_MSCROLL = 18;
    ITEM_TYPE_GOLD = 19;
    ITEM_TYPE_WEAPON_ = 20;
    ITEM_TYPE_ARMOR_ = 21;
    ITEM_TYPE_MISC = 22;
    ITEM_TYPE_SWORD = 23;
    ITEM_TYPE_DAGGER = 24;
    ITEM_TYPE_AXE = 25;
    ITEM_TYPE_SPEAR = 26;
    ITEM_TYPE_BOW = 27;
    ITEM_TYPE_MACE = 28;
    ITEM_TYPE_CLUB = 29;
    ITEM_TYPE_STAFF = 30;
    ITEM_TYPE_LEATHER = 31;
    ITEM_TYPE_CHAIN = 32;
    ITEM_TYPE_PLATE = 33;
    ITEM_TYPE_SHIELD_ = 34;
    ITEM_TYPE_HELM_ = 35;
    ITEM_TYPE_BELT_ = 36;
    ITEM_TYPE_CLOAK_ = 37;
    ITEM_TYPE_GAUNTLETS_ = 38;
    ITEM_TYPE_BOOTS_ = 39;
    ITEM_TYPE_RING_ = 40;
    ITEM_TYPE_AMULET_ = 41;
    ITEM_TYPE_WAND_ = 42;
    ITEM_TYPE_SCROLL_ = 43;
    ITEM_TYPE_POTION_ = 44;
    ITEM_TYPE_REAGENT_ = 45;
    ITEM_TYPE_GEMS = 46;
    ITEM_TYPE_GEMS_2 = 47;
    ITEM_TYPE_GOLD_ = 50;

    ALL_ITEM_TYPE = { ITEM_TYPE_ANY, ITEM_TYPE_WEAPON, ITEM_TYPE_WEAPON_2H, ITEM_TYPE_MISSILE, ITEM_TYPE_ARMOR, ITEM_TYPE_SHIELD, ITEM_TYPE_HELM, ITEM_TYPE_BELT, ITEM_TYPE_CLOAK, ITEM_TYPE_GAUNTLETS, ITEM_TYPE_BOOTS, ITEM_TYPE_RING, ITEM_TYPE_AMULET, ITEM_TYPE_WAND, ITEM_TYPE_REAGENT, ITEM_TYPE_POTION, ITEM_TYPE_SCROLL, ITEM_TYPE_BOOK, ITEM_TYPE_MSCROLL, ITEM_TYPE_GOLD, ITEM_TYPE_WEAPON_, ITEM_TYPE_ARMOR_, ITEM_TYPE_MISC, ITEM_TYPE_SWORD, ITEM_TYPE_DAGGER, ITEM_TYPE_AXE, ITEM_TYPE_SPEAR, ITEM_TYPE_BOW, ITEM_TYPE_MACE, ITEM_TYPE_CLUB, ITEM_TYPE_STAFF, ITEM_TYPE_LEATHER, ITEM_TYPE_CHAIN, ITEM_TYPE_PLATE, ITEM_TYPE_SHIELD_, ITEM_TYPE_HELM_, ITEM_TYPE_BELT_, ITEM_TYPE_CLOAK_, ITEM_TYPE_GAUNTLETS_, ITEM_TYPE_BOOTS_, ITEM_TYPE_RING_, ITEM_TYPE_AMULET_, ITEM_TYPE_WAND_, ITEM_TYPE_SCROLL_, ITEM_TYPE_POTION_, ITEM_TYPE_REAGENT_, ITEM_TYPE_GEMS, ITEM_TYPE_GEMS_2, ITEM_TYPE_GOLD_ };

    ENUM_TO_STRING_ITEM_TYPE = { {ITEM_TYPE_ANY, "Any"}, {ITEM_TYPE_WEAPON, "Weapon"}, {ITEM_TYPE_WEAPON_2H, "Weapon2H"}, {ITEM_TYPE_MISSILE, "Missile"}, {ITEM_TYPE_ARMOR, "Armor"}, {ITEM_TYPE_SHIELD, "Shield"}, {ITEM_TYPE_HELM, "Helm"}, {ITEM_TYPE_BELT, "Belt"}, {ITEM_TYPE_CLOAK, "Cloak"}, {ITEM_TYPE_GAUNTLETS, "Gauntlets"}, {ITEM_TYPE_BOOTS, "Boots"}, {ITEM_TYPE_RING, "Ring"}, {ITEM_TYPE_AMULET, "Amulet"}, {ITEM_TYPE_WAND, "Wand"}, {ITEM_TYPE_REAGENT, "Reagent"}, {ITEM_TYPE_POTION, "Potion"}, {ITEM_TYPE_SCROLL, "Scroll"}, {ITEM_TYPE_BOOK, "Book"}, {ITEM_TYPE_MSCROLL, "MScroll"}, {ITEM_TYPE_GOLD, "Gold"}, {ITEM_TYPE_WEAPON_, "Weapon_"}, {ITEM_TYPE_ARMOR_, "Armor_"}, {ITEM_TYPE_MISC, "Misc"}, {ITEM_TYPE_SWORD, "Sword"}, {ITEM_TYPE_DAGGER, "Dagger"}, {ITEM_TYPE_AXE, "Axe"}, {ITEM_TYPE_SPEAR, "Spear"}, {ITEM_TYPE_BOW, "Bow"}, {ITEM_TYPE_MACE, "Mace"}, {ITEM_TYPE_CLUB, "Club"}, {ITEM_TYPE_STAFF, "Staff"}, {ITEM_TYPE_LEATHER, "Leather"}, {ITEM_TYPE_CHAIN, "Chain"}, {ITEM_TYPE_PLATE, "Plate"}, {ITEM_TYPE_SHIELD_, "Shield_"}, {ITEM_TYPE_HELM_, "Helm_"}, {ITEM_TYPE_BELT_, "Belt_"}, {ITEM_TYPE_CLOAK_, "Cloak_"}, {ITEM_TYPE_GAUNTLETS_, "Gauntlets_"}, {ITEM_TYPE_BOOTS_, "Boots_"}, {ITEM_TYPE_RING_, "Ring_"}, {ITEM_TYPE_AMULET_, "Amulet_"}, {ITEM_TYPE_WAND_, "Wand_"}, {ITEM_TYPE_SCROLL_, "Scroll_"}, {ITEM_TYPE_POTION_, "Potion_"}, {ITEM_TYPE_REAGENT_, "Reagent_"}, {ITEM_TYPE_GEMS, "Gems"}, {ITEM_TYPE_GEMS_2, "Gems2"}, {ITEM_TYPE_GOLD_, "Gold_"} };
}

void makeEnumItemType_7()
{
    ITEM_TYPE_ANY = 0;
    ITEM_TYPE_WEAPON = 1;
    ITEM_TYPE_WEAPON_2H = 2;
    ITEM_TYPE_MISSILE = 3;
    ITEM_TYPE_ARMOR = 4;
    ITEM_TYPE_SHIELD = 5;
    ITEM_TYPE_HELM = 6;
    ITEM_TYPE_BELT = 7;
    ITEM_TYPE_CLOAK = 8;
    ITEM_TYPE_GAUNTLETS = 9;
    ITEM_TYPE_BOOTS = 10;
    ITEM_TYPE_RING = 11;
    ITEM_TYPE_AMULET = 12;
    ITEM_TYPE_WAND = 13;
    ITEM_TYPE_REAGENT = 14;
    ITEM_TYPE_POTION = 15;
    ITEM_TYPE_SCROLL = 16;
    ITEM_TYPE_BOOK = 17;
    ITEM_TYPE_MSCROLL = 18;
    ITEM_TYPE_GOLD = 19;
    ITEM_TYPE_WEAPON_ = 20;
    ITEM_TYPE_ARMOR_ = 21;
    ITEM_TYPE_MISC = 22;
    ITEM_TYPE_SWORD = 23;
    ITEM_TYPE_DAGGER = 24;
    ITEM_TYPE_AXE = 25;
    ITEM_TYPE_SPEAR = 26;
    ITEM_TYPE_BOW = 27;
    ITEM_TYPE_MACE = 28;
    ITEM_TYPE_CLUB = 29;
    ITEM_TYPE_STAFF = 30;
    ITEM_TYPE_LEATHER = 31;
    ITEM_TYPE_CHAIN = 32;
    ITEM_TYPE_PLATE = 33;
    ITEM_TYPE_SHIELD_ = 34;
    ITEM_TYPE_HELM_ = 35;
    ITEM_TYPE_BELT_ = 36;
    ITEM_TYPE_CLOAK_ = 37;
    ITEM_TYPE_GAUNTLETS_ = 38;
    ITEM_TYPE_BOOTS_ = 39;
    ITEM_TYPE_RING_ = 40;
    ITEM_TYPE_AMULET_ = 41;
    ITEM_TYPE_WAND_ = 42;
    ITEM_TYPE_SCROLL_ = 43;
    ITEM_TYPE_POTION_ = 44;
    ITEM_TYPE_REAGENT_ = 45;
    ITEM_TYPE_GEMS = 46;
    ITEM_TYPE_GEMS_2 = 47;
    ITEM_TYPE_GOLD_ = 50;

    ALL_ITEM_TYPE = { ITEM_TYPE_ANY, ITEM_TYPE_WEAPON, ITEM_TYPE_WEAPON_2H, ITEM_TYPE_MISSILE, ITEM_TYPE_ARMOR, ITEM_TYPE_SHIELD, ITEM_TYPE_HELM, ITEM_TYPE_BELT, ITEM_TYPE_CLOAK, ITEM_TYPE_GAUNTLETS, ITEM_TYPE_BOOTS, ITEM_TYPE_RING, ITEM_TYPE_AMULET, ITEM_TYPE_WAND, ITEM_TYPE_REAGENT, ITEM_TYPE_POTION, ITEM_TYPE_SCROLL, ITEM_TYPE_BOOK, ITEM_TYPE_MSCROLL, ITEM_TYPE_GOLD, ITEM_TYPE_WEAPON_, ITEM_TYPE_ARMOR_, ITEM_TYPE_MISC, ITEM_TYPE_SWORD, ITEM_TYPE_DAGGER, ITEM_TYPE_AXE, ITEM_TYPE_SPEAR, ITEM_TYPE_BOW, ITEM_TYPE_MACE, ITEM_TYPE_CLUB, ITEM_TYPE_STAFF, ITEM_TYPE_LEATHER, ITEM_TYPE_CHAIN, ITEM_TYPE_PLATE, ITEM_TYPE_SHIELD_, ITEM_TYPE_HELM_, ITEM_TYPE_BELT_, ITEM_TYPE_CLOAK_, ITEM_TYPE_GAUNTLETS_, ITEM_TYPE_BOOTS_, ITEM_TYPE_RING_, ITEM_TYPE_AMULET_, ITEM_TYPE_WAND_, ITEM_TYPE_SCROLL_, ITEM_TYPE_POTION_, ITEM_TYPE_REAGENT_, ITEM_TYPE_GEMS, ITEM_TYPE_GEMS_2, ITEM_TYPE_GOLD_ };

    ENUM_TO_STRING_ITEM_TYPE = { {ITEM_TYPE_ANY, "Any"}, {ITEM_TYPE_WEAPON, "Weapon"}, {ITEM_TYPE_WEAPON_2H, "Weapon2H"}, {ITEM_TYPE_MISSILE, "Missile"}, {ITEM_TYPE_ARMOR, "Armor"}, {ITEM_TYPE_SHIELD, "Shield"}, {ITEM_TYPE_HELM, "Helm"}, {ITEM_TYPE_BELT, "Belt"}, {ITEM_TYPE_CLOAK, "Cloak"}, {ITEM_TYPE_GAUNTLETS, "Gauntlets"}, {ITEM_TYPE_BOOTS, "Boots"}, {ITEM_TYPE_RING, "Ring"}, {ITEM_TYPE_AMULET, "Amulet"}, {ITEM_TYPE_WAND, "Wand"}, {ITEM_TYPE_REAGENT, "Reagent"}, {ITEM_TYPE_POTION, "Potion"}, {ITEM_TYPE_SCROLL, "Scroll"}, {ITEM_TYPE_BOOK, "Book"}, {ITEM_TYPE_MSCROLL, "MScroll"}, {ITEM_TYPE_GOLD, "Gold"}, {ITEM_TYPE_WEAPON_, "Weapon_"}, {ITEM_TYPE_ARMOR_, "Armor_"}, {ITEM_TYPE_MISC, "Misc"}, {ITEM_TYPE_SWORD, "Sword"}, {ITEM_TYPE_DAGGER, "Dagger"}, {ITEM_TYPE_AXE, "Axe"}, {ITEM_TYPE_SPEAR, "Spear"}, {ITEM_TYPE_BOW, "Bow"}, {ITEM_TYPE_MACE, "Mace"}, {ITEM_TYPE_CLUB, "Club"}, {ITEM_TYPE_STAFF, "Staff"}, {ITEM_TYPE_LEATHER, "Leather"}, {ITEM_TYPE_CHAIN, "Chain"}, {ITEM_TYPE_PLATE, "Plate"}, {ITEM_TYPE_SHIELD_, "Shield_"}, {ITEM_TYPE_HELM_, "Helm_"}, {ITEM_TYPE_BELT_, "Belt_"}, {ITEM_TYPE_CLOAK_, "Cloak_"}, {ITEM_TYPE_GAUNTLETS_, "Gauntlets_"}, {ITEM_TYPE_BOOTS_, "Boots_"}, {ITEM_TYPE_RING_, "Ring_"}, {ITEM_TYPE_AMULET_, "Amulet_"}, {ITEM_TYPE_WAND_, "Wand_"}, {ITEM_TYPE_SCROLL_, "Scroll_"}, {ITEM_TYPE_POTION_, "Potion_"}, {ITEM_TYPE_REAGENT_, "Reagent_"}, {ITEM_TYPE_GEMS, "Gems"}, {ITEM_TYPE_GEMS_2, "Gems2"}, {ITEM_TYPE_GOLD_, "Gold_"} };
}

void makeEnumItemType_8()
{
    ITEM_TYPE_ANY = 0;
    ITEM_TYPE_WEAPON = 1;
    ITEM_TYPE_WEAPON_2H = 2;
    ITEM_TYPE_MISSILE = 3;
    ITEM_TYPE_ARMOR = 4;
    ITEM_TYPE_SHIELD = 5;
    ITEM_TYPE_HELM = 6;
    ITEM_TYPE_BELT = 7;
    ITEM_TYPE_CLOAK = 8;
    ITEM_TYPE_GAUNTLETS = 9;
    ITEM_TYPE_BOOTS = 10;
    ITEM_TYPE_RING = 11;
    ITEM_TYPE_AMULET = 12;
    ITEM_TYPE_WAND = 13;
    ITEM_TYPE_REAGENT = 14;
    ITEM_TYPE_POTION = 15;
    ITEM_TYPE_SCROLL = 16;
    ITEM_TYPE_BOOK = 17;
    ITEM_TYPE_MSCROLL = 18;
    ITEM_TYPE_GOLD = 19;
    ITEM_TYPE_WEAPON_ = 20;
    ITEM_TYPE_ARMOR_ = 21;
    ITEM_TYPE_MISC = 22;
    ITEM_TYPE_SWORD = 23;
    ITEM_TYPE_DAGGER = 24;
    ITEM_TYPE_AXE = 25;
    ITEM_TYPE_SPEAR = 26;
    ITEM_TYPE_BOW = 27;
    ITEM_TYPE_MACE = 28;
    ITEM_TYPE_CLUB = 29;
    ITEM_TYPE_STAFF = 30;
    ITEM_TYPE_LEATHER = 31;
    ITEM_TYPE_CHAIN = 32;
    ITEM_TYPE_PLATE = 33;
    ITEM_TYPE_SHIELD_ = 34;
    ITEM_TYPE_HELM_ = 35;
    ITEM_TYPE_BELT_ = 36;
    ITEM_TYPE_CLOAK_ = 37;
    ITEM_TYPE_GAUNTLETS_ = 38;
    ITEM_TYPE_BOOTS_ = 39;
    ITEM_TYPE_RING_ = 40;
    ITEM_TYPE_AMULET_ = 41;
    ITEM_TYPE_WAND_ = 42;
    ITEM_TYPE_SCROLL_ = 43;
    ITEM_TYPE_POTION_ = 44;
    ITEM_TYPE_REAGENT_ = 45;
    ITEM_TYPE_GEMS = 46;
    ITEM_TYPE_GEMS_2 = 47;
    ITEM_TYPE_GOLD_ = 50;

    ALL_ITEM_TYPE = { ITEM_TYPE_ANY, ITEM_TYPE_WEAPON, ITEM_TYPE_WEAPON_2H, ITEM_TYPE_MISSILE, ITEM_TYPE_ARMOR, ITEM_TYPE_SHIELD, ITEM_TYPE_HELM, ITEM_TYPE_BELT, ITEM_TYPE_CLOAK, ITEM_TYPE_GAUNTLETS, ITEM_TYPE_BOOTS, ITEM_TYPE_RING, ITEM_TYPE_AMULET, ITEM_TYPE_WAND, ITEM_TYPE_REAGENT, ITEM_TYPE_POTION, ITEM_TYPE_SCROLL, ITEM_TYPE_BOOK, ITEM_TYPE_MSCROLL, ITEM_TYPE_GOLD, ITEM_TYPE_WEAPON_, ITEM_TYPE_ARMOR_, ITEM_TYPE_MISC, ITEM_TYPE_SWORD, ITEM_TYPE_DAGGER, ITEM_TYPE_AXE, ITEM_TYPE_SPEAR, ITEM_TYPE_BOW, ITEM_TYPE_MACE, ITEM_TYPE_CLUB, ITEM_TYPE_STAFF, ITEM_TYPE_LEATHER, ITEM_TYPE_CHAIN, ITEM_TYPE_PLATE, ITEM_TYPE_SHIELD_, ITEM_TYPE_HELM_, ITEM_TYPE_BELT_, ITEM_TYPE_CLOAK_, ITEM_TYPE_GAUNTLETS_, ITEM_TYPE_BOOTS_, ITEM_TYPE_RING_, ITEM_TYPE_AMULET_, ITEM_TYPE_WAND_, ITEM_TYPE_SCROLL_, ITEM_TYPE_POTION_, ITEM_TYPE_REAGENT_, ITEM_TYPE_GEMS, ITEM_TYPE_GEMS_2, ITEM_TYPE_GOLD_ };

    ENUM_TO_STRING_ITEM_TYPE = { {ITEM_TYPE_ANY, "Any"}, {ITEM_TYPE_WEAPON, "Weapon"}, {ITEM_TYPE_WEAPON_2H, "Weapon2H"}, {ITEM_TYPE_MISSILE, "Missile"}, {ITEM_TYPE_ARMOR, "Armor"}, {ITEM_TYPE_SHIELD, "Shield"}, {ITEM_TYPE_HELM, "Helm"}, {ITEM_TYPE_BELT, "Belt"}, {ITEM_TYPE_CLOAK, "Cloak"}, {ITEM_TYPE_GAUNTLETS, "Gauntlets"}, {ITEM_TYPE_BOOTS, "Boots"}, {ITEM_TYPE_RING, "Ring"}, {ITEM_TYPE_AMULET, "Amulet"}, {ITEM_TYPE_WAND, "Wand"}, {ITEM_TYPE_REAGENT, "Reagent"}, {ITEM_TYPE_POTION, "Potion"}, {ITEM_TYPE_SCROLL, "Scroll"}, {ITEM_TYPE_BOOK, "Book"}, {ITEM_TYPE_MSCROLL, "MScroll"}, {ITEM_TYPE_GOLD, "Gold"}, {ITEM_TYPE_WEAPON_, "Weapon_"}, {ITEM_TYPE_ARMOR_, "Armor_"}, {ITEM_TYPE_MISC, "Misc"}, {ITEM_TYPE_SWORD, "Sword"}, {ITEM_TYPE_DAGGER, "Dagger"}, {ITEM_TYPE_AXE, "Axe"}, {ITEM_TYPE_SPEAR, "Spear"}, {ITEM_TYPE_BOW, "Bow"}, {ITEM_TYPE_MACE, "Mace"}, {ITEM_TYPE_CLUB, "Club"}, {ITEM_TYPE_STAFF, "Staff"}, {ITEM_TYPE_LEATHER, "Leather"}, {ITEM_TYPE_CHAIN, "Chain"}, {ITEM_TYPE_PLATE, "Plate"}, {ITEM_TYPE_SHIELD_, "Shield_"}, {ITEM_TYPE_HELM_, "Helm_"}, {ITEM_TYPE_BELT_, "Belt_"}, {ITEM_TYPE_CLOAK_, "Cloak_"}, {ITEM_TYPE_GAUNTLETS_, "Gauntlets_"}, {ITEM_TYPE_BOOTS_, "Boots_"}, {ITEM_TYPE_RING_, "Ring_"}, {ITEM_TYPE_AMULET_, "Amulet_"}, {ITEM_TYPE_WAND_, "Wand_"}, {ITEM_TYPE_SCROLL_, "Scroll_"}, {ITEM_TYPE_POTION_, "Potion_"}, {ITEM_TYPE_REAGENT_, "Reagent_"}, {ITEM_TYPE_GEMS, "Gems"}, {ITEM_TYPE_GEMS_2, "Gems2"}, {ITEM_TYPE_GOLD_, "Gold_"} };
}


int64_t
ITEM_SLOT_EXTRA_HAND = INVALID_ID,
ITEM_SLOT_MAIN_HAND = INVALID_ID,
ITEM_SLOT_BOW = INVALID_ID,
ITEM_SLOT_ARMOR = INVALID_ID,
ITEM_SLOT_HELM = INVALID_ID,
ITEM_SLOT_BELT = INVALID_ID,
ITEM_SLOT_CLOAK = INVALID_ID,
ITEM_SLOT_GAUNTLETS = INVALID_ID,
ITEM_SLOT_BOOTS = INVALID_ID,
ITEM_SLOT_AMULET = INVALID_ID,
ITEM_SLOT_RING_1 = INVALID_ID,
ITEM_SLOT_RING_2 = INVALID_ID,
ITEM_SLOT_RING_3 = INVALID_ID,
ITEM_SLOT_RING_4 = INVALID_ID,
ITEM_SLOT_RING_5 = INVALID_ID,
ITEM_SLOT_RING_6 = INVALID_ID;

std::vector<int64_t> ALL_ITEM_SLOT;
std::map<int64_t, std::string> ENUM_TO_STRING_ITEM_SLOT;

void makeEnumItemSlot_6()
{
    ITEM_SLOT_EXTRA_HAND = 0;
    ITEM_SLOT_MAIN_HAND = 1;
    ITEM_SLOT_BOW = 2;
    ITEM_SLOT_ARMOR = 3;
    ITEM_SLOT_HELM = 4;
    ITEM_SLOT_BELT = 5;
    ITEM_SLOT_CLOAK = 6;
    ITEM_SLOT_GAUNTLETS = 7;
    ITEM_SLOT_BOOTS = 8;
    ITEM_SLOT_AMULET = 9;
    ITEM_SLOT_RING_1 = 10;
    ITEM_SLOT_RING_2 = 11;
    ITEM_SLOT_RING_3 = 12;
    ITEM_SLOT_RING_4 = 13;
    ITEM_SLOT_RING_5 = 14;
    ITEM_SLOT_RING_6 = 15;

    ALL_ITEM_SLOT = { ITEM_SLOT_EXTRA_HAND, ITEM_SLOT_MAIN_HAND, ITEM_SLOT_BOW, ITEM_SLOT_ARMOR, ITEM_SLOT_HELM, ITEM_SLOT_BELT, ITEM_SLOT_CLOAK, ITEM_SLOT_GAUNTLETS, ITEM_SLOT_BOOTS, ITEM_SLOT_AMULET, ITEM_SLOT_RING_1, ITEM_SLOT_RING_2, ITEM_SLOT_RING_3, ITEM_SLOT_RING_4, ITEM_SLOT_RING_5, ITEM_SLOT_RING_6 };

    ENUM_TO_STRING_ITEM_SLOT = { {ITEM_SLOT_EXTRA_HAND, "ExtraHand"}, {ITEM_SLOT_MAIN_HAND, "MainHand"}, {ITEM_SLOT_BOW, "Bow"}, {ITEM_SLOT_ARMOR, "Armor"}, {ITEM_SLOT_HELM, "Helm"}, {ITEM_SLOT_BELT, "Belt"}, {ITEM_SLOT_CLOAK, "Cloak"}, {ITEM_SLOT_GAUNTLETS, "Gauntlets"}, {ITEM_SLOT_BOOTS, "Boots"}, {ITEM_SLOT_AMULET, "Amulet"}, {ITEM_SLOT_RING_1, "Ring1"}, {ITEM_SLOT_RING_2, "Ring2"}, {ITEM_SLOT_RING_3, "Ring3"}, {ITEM_SLOT_RING_4, "Ring4"}, {ITEM_SLOT_RING_5, "Ring5"}, {ITEM_SLOT_RING_6, "Ring6"} };
}

void makeEnumItemSlot_7()
{
    ITEM_SLOT_EXTRA_HAND = 0;
    ITEM_SLOT_MAIN_HAND = 1;
    ITEM_SLOT_BOW = 2;
    ITEM_SLOT_ARMOR = 3;
    ITEM_SLOT_HELM = 4;
    ITEM_SLOT_BELT = 5;
    ITEM_SLOT_CLOAK = 6;
    ITEM_SLOT_GAUNTLETS = 7;
    ITEM_SLOT_BOOTS = 8;
    ITEM_SLOT_AMULET = 9;
    ITEM_SLOT_RING_1 = 10;
    ITEM_SLOT_RING_2 = 11;
    ITEM_SLOT_RING_3 = 12;
    ITEM_SLOT_RING_4 = 13;
    ITEM_SLOT_RING_5 = 14;
    ITEM_SLOT_RING_6 = 15;

    ALL_ITEM_SLOT = { ITEM_SLOT_EXTRA_HAND, ITEM_SLOT_MAIN_HAND, ITEM_SLOT_BOW, ITEM_SLOT_ARMOR, ITEM_SLOT_HELM, ITEM_SLOT_BELT, ITEM_SLOT_CLOAK, ITEM_SLOT_GAUNTLETS, ITEM_SLOT_BOOTS, ITEM_SLOT_AMULET, ITEM_SLOT_RING_1, ITEM_SLOT_RING_2, ITEM_SLOT_RING_3, ITEM_SLOT_RING_4, ITEM_SLOT_RING_5, ITEM_SLOT_RING_6 };

    ENUM_TO_STRING_ITEM_SLOT = { {ITEM_SLOT_EXTRA_HAND, "ExtraHand"}, {ITEM_SLOT_MAIN_HAND, "MainHand"}, {ITEM_SLOT_BOW, "Bow"}, {ITEM_SLOT_ARMOR, "Armor"}, {ITEM_SLOT_HELM, "Helm"}, {ITEM_SLOT_BELT, "Belt"}, {ITEM_SLOT_CLOAK, "Cloak"}, {ITEM_SLOT_GAUNTLETS, "Gauntlets"}, {ITEM_SLOT_BOOTS, "Boots"}, {ITEM_SLOT_AMULET, "Amulet"}, {ITEM_SLOT_RING_1, "Ring1"}, {ITEM_SLOT_RING_2, "Ring2"}, {ITEM_SLOT_RING_3, "Ring3"}, {ITEM_SLOT_RING_4, "Ring4"}, {ITEM_SLOT_RING_5, "Ring5"}, {ITEM_SLOT_RING_6, "Ring6"} };
}

void makeEnumItemSlot_8()
{
    ITEM_SLOT_EXTRA_HAND = 0;
    ITEM_SLOT_MAIN_HAND = 1;
    ITEM_SLOT_BOW = 2;
    ITEM_SLOT_ARMOR = 3;
    ITEM_SLOT_HELM = 4;
    ITEM_SLOT_BELT = 5;
    ITEM_SLOT_CLOAK = 6;
    ITEM_SLOT_GAUNTLETS = 7;
    ITEM_SLOT_BOOTS = 8;
    ITEM_SLOT_AMULET = 9;
    ITEM_SLOT_RING_1 = 10;
    ITEM_SLOT_RING_2 = 11;
    ITEM_SLOT_RING_3 = 12;
    ITEM_SLOT_RING_4 = 13;
    ITEM_SLOT_RING_5 = 14;
    ITEM_SLOT_RING_6 = 15;

    ALL_ITEM_SLOT = { ITEM_SLOT_EXTRA_HAND, ITEM_SLOT_MAIN_HAND, ITEM_SLOT_BOW, ITEM_SLOT_ARMOR, ITEM_SLOT_HELM, ITEM_SLOT_BELT, ITEM_SLOT_CLOAK, ITEM_SLOT_GAUNTLETS, ITEM_SLOT_BOOTS, ITEM_SLOT_AMULET, ITEM_SLOT_RING_1, ITEM_SLOT_RING_2, ITEM_SLOT_RING_3, ITEM_SLOT_RING_4, ITEM_SLOT_RING_5, ITEM_SLOT_RING_6 };

    ENUM_TO_STRING_ITEM_SLOT = { {ITEM_SLOT_EXTRA_HAND, "ExtraHand"}, {ITEM_SLOT_MAIN_HAND, "MainHand"}, {ITEM_SLOT_BOW, "Bow"}, {ITEM_SLOT_ARMOR, "Armor"}, {ITEM_SLOT_HELM, "Helm"}, {ITEM_SLOT_BELT, "Belt"}, {ITEM_SLOT_CLOAK, "Cloak"}, {ITEM_SLOT_GAUNTLETS, "Gauntlets"}, {ITEM_SLOT_BOOTS, "Boots"}, {ITEM_SLOT_AMULET, "Amulet"}, {ITEM_SLOT_RING_1, "Ring1"}, {ITEM_SLOT_RING_2, "Ring2"}, {ITEM_SLOT_RING_3, "Ring3"}, {ITEM_SLOT_RING_4, "Ring4"}, {ITEM_SLOT_RING_5, "Ring5"}, {ITEM_SLOT_RING_6, "Ring6"} };
}


int64_t
PLAYER_BUFF_BLESS = INVALID_ID,
PLAYER_BUFF_HEROISM = INVALID_ID,
PLAYER_BUFF_HASTE = INVALID_ID,
PLAYER_BUFF_SHIELD = INVALID_ID,
PLAYER_BUFF_STONESKIN = INVALID_ID,
PLAYER_BUFF_TEMP_LUCK = INVALID_ID,
PLAYER_BUFF_TEMP_INTELLECT = INVALID_ID,
PLAYER_BUFF_TEMP_PERSONALITY = INVALID_ID,
PLAYER_BUFF_TEMP_ACCURACY = INVALID_ID,
PLAYER_BUFF_TEMP_SPEED = INVALID_ID,
PLAYER_BUFF_TEMP_MIGHT = INVALID_ID,
PLAYER_BUFF_TEMP_ENDURANCY = INVALID_ID,
PLAYER_BUFF_AIR_RESISTANCE = INVALID_ID,
PLAYER_BUFF_BODY_RESISTANCE = INVALID_ID,
PLAYER_BUFF_EARTH_RESISTANCE = INVALID_ID,
PLAYER_BUFF_FATE = INVALID_ID,
PLAYER_BUFF_FIRE_RESISTANCE = INVALID_ID,
PLAYER_BUFF_HAMMERHANDS = INVALID_ID,
PLAYER_BUFF_MIND_RESISTANCE = INVALID_ID,
PLAYER_BUFF_PAIN_REFLECTION = INVALID_ID,
PLAYER_BUFF_PRESERVATION = INVALID_ID,
PLAYER_BUFF_REGENERATION = INVALID_ID,
PLAYER_BUFF_TEMP_ENDURANCE = INVALID_ID,
PLAYER_BUFF_WATER_RESISTANCE = INVALID_ID,
PLAYER_BUFF_WATER_BREATHING = INVALID_ID,
PLAYER_BUFF_GLAMOUR = INVALID_ID,
PLAYER_BUFF_LEVITATE = INVALID_ID,
PLAYER_BUFF_MISFORM = INVALID_ID;

std::vector<int64_t> ALL_PLAYER_BUFF;
std::map<int64_t, std::string> ENUM_TO_STRING_PLAYER_BUFF;

void makeEnumPlayerBuff_6()
{
    PLAYER_BUFF_BLESS = 0;
    PLAYER_BUFF_HEROISM = 1;
    PLAYER_BUFF_HASTE = 2;
    PLAYER_BUFF_SHIELD = 3;
    PLAYER_BUFF_STONESKIN = 4;
    PLAYER_BUFF_TEMP_LUCK = 5;
    PLAYER_BUFF_TEMP_INTELLECT = 6;
    PLAYER_BUFF_TEMP_PERSONALITY = 7;
    PLAYER_BUFF_TEMP_ACCURACY = 8;
    PLAYER_BUFF_TEMP_SPEED = 9;
    PLAYER_BUFF_TEMP_MIGHT = 10;
    PLAYER_BUFF_TEMP_ENDURANCY = 11;

    ALL_PLAYER_BUFF = { PLAYER_BUFF_BLESS, PLAYER_BUFF_HEROISM, PLAYER_BUFF_HASTE, PLAYER_BUFF_SHIELD, PLAYER_BUFF_STONESKIN, PLAYER_BUFF_TEMP_LUCK, PLAYER_BUFF_TEMP_INTELLECT, PLAYER_BUFF_TEMP_PERSONALITY, PLAYER_BUFF_TEMP_ACCURACY, PLAYER_BUFF_TEMP_SPEED, PLAYER_BUFF_TEMP_MIGHT, PLAYER_BUFF_TEMP_ENDURANCY };

    ENUM_TO_STRING_PLAYER_BUFF = { {PLAYER_BUFF_BLESS, "Bless"}, {PLAYER_BUFF_HEROISM, "Heroism"}, {PLAYER_BUFF_HASTE, "Haste"}, {PLAYER_BUFF_SHIELD, "Shield"}, {PLAYER_BUFF_STONESKIN, "Stoneskin"}, {PLAYER_BUFF_TEMP_LUCK, "TempLuck"}, {PLAYER_BUFF_TEMP_INTELLECT, "TempIntellect"}, {PLAYER_BUFF_TEMP_PERSONALITY, "TempPersonality"}, {PLAYER_BUFF_TEMP_ACCURACY, "TempAccuracy"}, {PLAYER_BUFF_TEMP_SPEED, "TempSpeed"}, {PLAYER_BUFF_TEMP_MIGHT, "TempMight"}, {PLAYER_BUFF_TEMP_ENDURANCY, "TempEndurancy"} };
}

void makeEnumPlayerBuff_7()
{
    PLAYER_BUFF_AIR_RESISTANCE = 0;
    PLAYER_BUFF_BLESS = 1;
    PLAYER_BUFF_BODY_RESISTANCE = 2;
    PLAYER_BUFF_EARTH_RESISTANCE = 3;
    PLAYER_BUFF_FATE = 4;
    PLAYER_BUFF_FIRE_RESISTANCE = 5;
    PLAYER_BUFF_HAMMERHANDS = 6;
    PLAYER_BUFF_HASTE = 7;
    PLAYER_BUFF_HEROISM = 8;
    PLAYER_BUFF_MIND_RESISTANCE = 9;
    PLAYER_BUFF_PAIN_REFLECTION = 10;
    PLAYER_BUFF_PRESERVATION = 11;
    PLAYER_BUFF_REGENERATION = 12;
    PLAYER_BUFF_SHIELD = 13;
    PLAYER_BUFF_STONESKIN = 14;
    PLAYER_BUFF_TEMP_ACCURACY = 15;
    PLAYER_BUFF_TEMP_ENDURANCE = 16;
    PLAYER_BUFF_TEMP_INTELLECT = 17;
    PLAYER_BUFF_TEMP_LUCK = 18;
    PLAYER_BUFF_TEMP_MIGHT = 19;
    PLAYER_BUFF_TEMP_PERSONALITY = 20;
    PLAYER_BUFF_TEMP_SPEED = 21;
    PLAYER_BUFF_WATER_RESISTANCE = 22;
    PLAYER_BUFF_WATER_BREATHING = 23;

    ALL_PLAYER_BUFF = { PLAYER_BUFF_AIR_RESISTANCE, PLAYER_BUFF_BLESS, PLAYER_BUFF_BODY_RESISTANCE, PLAYER_BUFF_EARTH_RESISTANCE, PLAYER_BUFF_FATE, PLAYER_BUFF_FIRE_RESISTANCE, PLAYER_BUFF_HAMMERHANDS, PLAYER_BUFF_HASTE, PLAYER_BUFF_HEROISM, PLAYER_BUFF_MIND_RESISTANCE, PLAYER_BUFF_PAIN_REFLECTION, PLAYER_BUFF_PRESERVATION, PLAYER_BUFF_REGENERATION, PLAYER_BUFF_SHIELD, PLAYER_BUFF_STONESKIN, PLAYER_BUFF_TEMP_ACCURACY, PLAYER_BUFF_TEMP_ENDURANCE, PLAYER_BUFF_TEMP_INTELLECT, PLAYER_BUFF_TEMP_LUCK, PLAYER_BUFF_TEMP_MIGHT, PLAYER_BUFF_TEMP_PERSONALITY, PLAYER_BUFF_TEMP_SPEED, PLAYER_BUFF_WATER_RESISTANCE, PLAYER_BUFF_WATER_BREATHING };

    ENUM_TO_STRING_PLAYER_BUFF = { {PLAYER_BUFF_AIR_RESISTANCE, "AirResistance"}, {PLAYER_BUFF_BLESS, "Bless"}, {PLAYER_BUFF_BODY_RESISTANCE, "BodyResistance"}, {PLAYER_BUFF_EARTH_RESISTANCE, "EarthResistance"}, {PLAYER_BUFF_FATE, "Fate"}, {PLAYER_BUFF_FIRE_RESISTANCE, "FireResistance"}, {PLAYER_BUFF_HAMMERHANDS, "Hammerhands"}, {PLAYER_BUFF_HASTE, "Haste"}, {PLAYER_BUFF_HEROISM, "Heroism"}, {PLAYER_BUFF_MIND_RESISTANCE, "MindResistance"}, {PLAYER_BUFF_PAIN_REFLECTION, "PainReflection"}, {PLAYER_BUFF_PRESERVATION, "Preservation"}, {PLAYER_BUFF_REGENERATION, "Regeneration"}, {PLAYER_BUFF_SHIELD, "Shield"}, {PLAYER_BUFF_STONESKIN, "Stoneskin"}, {PLAYER_BUFF_TEMP_ACCURACY, "TempAccuracy"}, {PLAYER_BUFF_TEMP_ENDURANCE, "TempEndurance"}, {PLAYER_BUFF_TEMP_INTELLECT, "TempIntellect"}, {PLAYER_BUFF_TEMP_LUCK, "TempLuck"}, {PLAYER_BUFF_TEMP_MIGHT, "TempMight"}, {PLAYER_BUFF_TEMP_PERSONALITY, "TempPersonality"}, {PLAYER_BUFF_TEMP_SPEED, "TempSpeed"}, {PLAYER_BUFF_WATER_RESISTANCE, "WaterResistance"}, {PLAYER_BUFF_WATER_BREATHING, "WaterBreathing"} };
}

void makeEnumPlayerBuff_8()
{
    PLAYER_BUFF_AIR_RESISTANCE = 0;
    PLAYER_BUFF_BLESS = 1;
    PLAYER_BUFF_BODY_RESISTANCE = 2;
    PLAYER_BUFF_EARTH_RESISTANCE = 3;
    PLAYER_BUFF_FATE = 4;
    PLAYER_BUFF_FIRE_RESISTANCE = 5;
    PLAYER_BUFF_HAMMERHANDS = 6;
    PLAYER_BUFF_HASTE = 7;
    PLAYER_BUFF_HEROISM = 8;
    PLAYER_BUFF_MIND_RESISTANCE = 9;
    PLAYER_BUFF_PAIN_REFLECTION = 10;
    PLAYER_BUFF_PRESERVATION = 11;
    PLAYER_BUFF_REGENERATION = 12;
    PLAYER_BUFF_SHIELD = 13;
    PLAYER_BUFF_STONESKIN = 14;
    PLAYER_BUFF_TEMP_ACCURACY = 15;
    PLAYER_BUFF_TEMP_ENDURANCE = 16;
    PLAYER_BUFF_TEMP_INTELLECT = 17;
    PLAYER_BUFF_TEMP_LUCK = 18;
    PLAYER_BUFF_TEMP_MIGHT = 19;
    PLAYER_BUFF_TEMP_PERSONALITY = 20;
    PLAYER_BUFF_TEMP_SPEED = 21;
    PLAYER_BUFF_WATER_RESISTANCE = 22;
    PLAYER_BUFF_WATER_BREATHING = 23;
    PLAYER_BUFF_GLAMOUR = 24;
    PLAYER_BUFF_LEVITATE = 25;
    PLAYER_BUFF_MISFORM = 26;

    ALL_PLAYER_BUFF = { PLAYER_BUFF_AIR_RESISTANCE, PLAYER_BUFF_BLESS, PLAYER_BUFF_BODY_RESISTANCE, PLAYER_BUFF_EARTH_RESISTANCE, PLAYER_BUFF_FATE, PLAYER_BUFF_FIRE_RESISTANCE, PLAYER_BUFF_HAMMERHANDS, PLAYER_BUFF_HASTE, PLAYER_BUFF_HEROISM, PLAYER_BUFF_MIND_RESISTANCE, PLAYER_BUFF_PAIN_REFLECTION, PLAYER_BUFF_PRESERVATION, PLAYER_BUFF_REGENERATION, PLAYER_BUFF_SHIELD, PLAYER_BUFF_STONESKIN, PLAYER_BUFF_TEMP_ACCURACY, PLAYER_BUFF_TEMP_ENDURANCE, PLAYER_BUFF_TEMP_INTELLECT, PLAYER_BUFF_TEMP_LUCK, PLAYER_BUFF_TEMP_MIGHT, PLAYER_BUFF_TEMP_PERSONALITY, PLAYER_BUFF_TEMP_SPEED, PLAYER_BUFF_WATER_RESISTANCE, PLAYER_BUFF_WATER_BREATHING, PLAYER_BUFF_GLAMOUR, PLAYER_BUFF_LEVITATE, PLAYER_BUFF_MISFORM };

    ENUM_TO_STRING_PLAYER_BUFF = { {PLAYER_BUFF_AIR_RESISTANCE, "AirResistance"}, {PLAYER_BUFF_BLESS, "Bless"}, {PLAYER_BUFF_BODY_RESISTANCE, "BodyResistance"}, {PLAYER_BUFF_EARTH_RESISTANCE, "EarthResistance"}, {PLAYER_BUFF_FATE, "Fate"}, {PLAYER_BUFF_FIRE_RESISTANCE, "FireResistance"}, {PLAYER_BUFF_HAMMERHANDS, "Hammerhands"}, {PLAYER_BUFF_HASTE, "Haste"}, {PLAYER_BUFF_HEROISM, "Heroism"}, {PLAYER_BUFF_MIND_RESISTANCE, "MindResistance"}, {PLAYER_BUFF_PAIN_REFLECTION, "PainReflection"}, {PLAYER_BUFF_PRESERVATION, "Preservation"}, {PLAYER_BUFF_REGENERATION, "Regeneration"}, {PLAYER_BUFF_SHIELD, "Shield"}, {PLAYER_BUFF_STONESKIN, "Stoneskin"}, {PLAYER_BUFF_TEMP_ACCURACY, "TempAccuracy"}, {PLAYER_BUFF_TEMP_ENDURANCE, "TempEndurance"}, {PLAYER_BUFF_TEMP_INTELLECT, "TempIntellect"}, {PLAYER_BUFF_TEMP_LUCK, "TempLuck"}, {PLAYER_BUFF_TEMP_MIGHT, "TempMight"}, {PLAYER_BUFF_TEMP_PERSONALITY, "TempPersonality"}, {PLAYER_BUFF_TEMP_SPEED, "TempSpeed"}, {PLAYER_BUFF_WATER_RESISTANCE, "WaterResistance"}, {PLAYER_BUFF_WATER_BREATHING, "WaterBreathing"}, {PLAYER_BUFF_GLAMOUR, "Glamour"}, {PLAYER_BUFF_LEVITATE, "Levitate"}, {PLAYER_BUFF_MISFORM, "Misform"} };
}


int64_t
PARTY_BUFF_FIRE_RESISTANCE = INVALID_ID,
PARTY_BUFF_COLD_RESISTANCE = INVALID_ID,
PARTY_BUFF_ELEC_RESISTANCE = INVALID_ID,
PARTY_BUFF_MAGIC_RESISTANCE = INVALID_ID,
PARTY_BUFF_POISON_RESISTANCE = INVALID_ID,
PARTY_BUFF_FEATHER_FALL = INVALID_ID,
PARTY_BUFF_WATER_WALK = INVALID_ID,
PARTY_BUFF_FLY = INVALID_ID,
PARTY_BUFF_GUARDIAN_ANGEL = INVALID_ID,
PARTY_BUFF_WIZARD_EYE = INVALID_ID,
PARTY_BUFF_TORCH_LIGHT = INVALID_ID,
PARTY_BUFF_AIR_RESISTANCE = INVALID_ID,
PARTY_BUFF_BODY_RESISTANCE = INVALID_ID,
PARTY_BUFF_DAY_OF_GODS = INVALID_ID,
PARTY_BUFF_DETECT_LIFE = INVALID_ID,
PARTY_BUFF_EARTH_RESISTANCE = INVALID_ID,
PARTY_BUFF_HASTE = INVALID_ID,
PARTY_BUFF_HEROISM = INVALID_ID,
PARTY_BUFF_IMMOLATION = INVALID_ID,
PARTY_BUFF_INVISIBILITY = INVALID_ID,
PARTY_BUFF_MIND_RESISTANCE = INVALID_ID,
PARTY_BUFF_PROTECTION_FROM_MAGIC = INVALID_ID,
PARTY_BUFF_SHIELD = INVALID_ID,
PARTY_BUFF_STONESKIN = INVALID_ID,
PARTY_BUFF_WATER_RESISTANCE = INVALID_ID;

std::vector<int64_t> ALL_PARTY_BUFF;
std::map<int64_t, std::string> ENUM_TO_STRING_PARTY_BUFF;

void makeEnumPartyBuff_6()
{
    PARTY_BUFF_FIRE_RESISTANCE = 0;
    PARTY_BUFF_COLD_RESISTANCE = 1;
    PARTY_BUFF_ELEC_RESISTANCE = 2;
    PARTY_BUFF_MAGIC_RESISTANCE = 3;
    PARTY_BUFF_POISON_RESISTANCE = 4;
    PARTY_BUFF_FEATHER_FALL = 5;
    PARTY_BUFF_WATER_WALK = 6;
    PARTY_BUFF_FLY = 7;
    PARTY_BUFF_GUARDIAN_ANGEL = 8;
    PARTY_BUFF_WIZARD_EYE = 10;
    PARTY_BUFF_TORCH_LIGHT = 11;

    ALL_PARTY_BUFF = { PARTY_BUFF_FIRE_RESISTANCE, PARTY_BUFF_COLD_RESISTANCE, PARTY_BUFF_ELEC_RESISTANCE, PARTY_BUFF_MAGIC_RESISTANCE, PARTY_BUFF_POISON_RESISTANCE, PARTY_BUFF_FEATHER_FALL, PARTY_BUFF_WATER_WALK, PARTY_BUFF_FLY, PARTY_BUFF_GUARDIAN_ANGEL, PARTY_BUFF_WIZARD_EYE, PARTY_BUFF_TORCH_LIGHT };

    ENUM_TO_STRING_PARTY_BUFF = { {PARTY_BUFF_FIRE_RESISTANCE, "FireResistance"}, {PARTY_BUFF_COLD_RESISTANCE, "ColdResistance"}, {PARTY_BUFF_ELEC_RESISTANCE, "ElecResistance"}, {PARTY_BUFF_MAGIC_RESISTANCE, "MagicResistance"}, {PARTY_BUFF_POISON_RESISTANCE, "PoisonResistance"}, {PARTY_BUFF_FEATHER_FALL, "FeatherFall"}, {PARTY_BUFF_WATER_WALK, "WaterWalk"}, {PARTY_BUFF_FLY, "Fly"}, {PARTY_BUFF_GUARDIAN_ANGEL, "GuardianAngel"}, {PARTY_BUFF_WIZARD_EYE, "WizardEye"}, {PARTY_BUFF_TORCH_LIGHT, "TorchLight"} };
}

void makeEnumPartyBuff_7()
{
    PARTY_BUFF_AIR_RESISTANCE = 0;
    PARTY_BUFF_BODY_RESISTANCE = 1;
    PARTY_BUFF_DAY_OF_GODS = 2;
    PARTY_BUFF_DETECT_LIFE = 3;
    PARTY_BUFF_EARTH_RESISTANCE = 4;
    PARTY_BUFF_FEATHER_FALL = 5;
    PARTY_BUFF_FIRE_RESISTANCE = 6;
    PARTY_BUFF_FLY = 7;
    PARTY_BUFF_HASTE = 8;
    PARTY_BUFF_HEROISM = 9;
    PARTY_BUFF_IMMOLATION = 10;
    PARTY_BUFF_INVISIBILITY = 11;
    PARTY_BUFF_MIND_RESISTANCE = 12;
    PARTY_BUFF_PROTECTION_FROM_MAGIC = 13;
    PARTY_BUFF_SHIELD = 14;
    PARTY_BUFF_STONESKIN = 15;
    PARTY_BUFF_TORCH_LIGHT = 16;
    PARTY_BUFF_WATER_RESISTANCE = 17;
    PARTY_BUFF_WATER_WALK = 18;
    PARTY_BUFF_WIZARD_EYE = 19;

    ALL_PARTY_BUFF = { PARTY_BUFF_AIR_RESISTANCE, PARTY_BUFF_BODY_RESISTANCE, PARTY_BUFF_DAY_OF_GODS, PARTY_BUFF_DETECT_LIFE, PARTY_BUFF_EARTH_RESISTANCE, PARTY_BUFF_FEATHER_FALL, PARTY_BUFF_FIRE_RESISTANCE, PARTY_BUFF_FLY, PARTY_BUFF_HASTE, PARTY_BUFF_HEROISM, PARTY_BUFF_IMMOLATION, PARTY_BUFF_INVISIBILITY, PARTY_BUFF_MIND_RESISTANCE, PARTY_BUFF_PROTECTION_FROM_MAGIC, PARTY_BUFF_SHIELD, PARTY_BUFF_STONESKIN, PARTY_BUFF_TORCH_LIGHT, PARTY_BUFF_WATER_RESISTANCE, PARTY_BUFF_WATER_WALK, PARTY_BUFF_WIZARD_EYE };

    ENUM_TO_STRING_PARTY_BUFF = { {PARTY_BUFF_AIR_RESISTANCE, "AirResistance"}, {PARTY_BUFF_BODY_RESISTANCE, "BodyResistance"}, {PARTY_BUFF_DAY_OF_GODS, "DayOfGods"}, {PARTY_BUFF_DETECT_LIFE, "DetectLife"}, {PARTY_BUFF_EARTH_RESISTANCE, "EarthResistance"}, {PARTY_BUFF_FEATHER_FALL, "FeatherFall"}, {PARTY_BUFF_FIRE_RESISTANCE, "FireResistance"}, {PARTY_BUFF_FLY, "Fly"}, {PARTY_BUFF_HASTE, "Haste"}, {PARTY_BUFF_HEROISM, "Heroism"}, {PARTY_BUFF_IMMOLATION, "Immolation"}, {PARTY_BUFF_INVISIBILITY, "Invisibility"}, {PARTY_BUFF_MIND_RESISTANCE, "MindResistance"}, {PARTY_BUFF_PROTECTION_FROM_MAGIC, "ProtectionFromMagic"}, {PARTY_BUFF_SHIELD, "Shield"}, {PARTY_BUFF_STONESKIN, "Stoneskin"}, {PARTY_BUFF_TORCH_LIGHT, "TorchLight"}, {PARTY_BUFF_WATER_RESISTANCE, "WaterResistance"}, {PARTY_BUFF_WATER_WALK, "WaterWalk"}, {PARTY_BUFF_WIZARD_EYE, "WizardEye"} };
}

void makeEnumPartyBuff_8()
{
    PARTY_BUFF_AIR_RESISTANCE = 0;
    PARTY_BUFF_BODY_RESISTANCE = 1;
    PARTY_BUFF_DAY_OF_GODS = 2;
    PARTY_BUFF_DETECT_LIFE = 3;
    PARTY_BUFF_EARTH_RESISTANCE = 4;
    PARTY_BUFF_FEATHER_FALL = 5;
    PARTY_BUFF_FIRE_RESISTANCE = 6;
    PARTY_BUFF_FLY = 7;
    PARTY_BUFF_HASTE = 8;
    PARTY_BUFF_HEROISM = 9;
    PARTY_BUFF_IMMOLATION = 10;
    PARTY_BUFF_INVISIBILITY = 11;
    PARTY_BUFF_MIND_RESISTANCE = 12;
    PARTY_BUFF_PROTECTION_FROM_MAGIC = 13;
    PARTY_BUFF_SHIELD = 14;
    PARTY_BUFF_STONESKIN = 15;
    PARTY_BUFF_TORCH_LIGHT = 16;
    PARTY_BUFF_WATER_RESISTANCE = 17;
    PARTY_BUFF_WATER_WALK = 18;
    PARTY_BUFF_WIZARD_EYE = 19;

    ALL_PARTY_BUFF = { PARTY_BUFF_AIR_RESISTANCE, PARTY_BUFF_BODY_RESISTANCE, PARTY_BUFF_DAY_OF_GODS, PARTY_BUFF_DETECT_LIFE, PARTY_BUFF_EARTH_RESISTANCE, PARTY_BUFF_FEATHER_FALL, PARTY_BUFF_FIRE_RESISTANCE, PARTY_BUFF_FLY, PARTY_BUFF_HASTE, PARTY_BUFF_HEROISM, PARTY_BUFF_IMMOLATION, PARTY_BUFF_INVISIBILITY, PARTY_BUFF_MIND_RESISTANCE, PARTY_BUFF_PROTECTION_FROM_MAGIC, PARTY_BUFF_SHIELD, PARTY_BUFF_STONESKIN, PARTY_BUFF_TORCH_LIGHT, PARTY_BUFF_WATER_RESISTANCE, PARTY_BUFF_WATER_WALK, PARTY_BUFF_WIZARD_EYE };

    ENUM_TO_STRING_PARTY_BUFF = { {PARTY_BUFF_AIR_RESISTANCE, "AirResistance"}, {PARTY_BUFF_BODY_RESISTANCE, "BodyResistance"}, {PARTY_BUFF_DAY_OF_GODS, "DayOfGods"}, {PARTY_BUFF_DETECT_LIFE, "DetectLife"}, {PARTY_BUFF_EARTH_RESISTANCE, "EarthResistance"}, {PARTY_BUFF_FEATHER_FALL, "FeatherFall"}, {PARTY_BUFF_FIRE_RESISTANCE, "FireResistance"}, {PARTY_BUFF_FLY, "Fly"}, {PARTY_BUFF_HASTE, "Haste"}, {PARTY_BUFF_HEROISM, "Heroism"}, {PARTY_BUFF_IMMOLATION, "Immolation"}, {PARTY_BUFF_INVISIBILITY, "Invisibility"}, {PARTY_BUFF_MIND_RESISTANCE, "MindResistance"}, {PARTY_BUFF_PROTECTION_FROM_MAGIC, "ProtectionFromMagic"}, {PARTY_BUFF_SHIELD, "Shield"}, {PARTY_BUFF_STONESKIN, "Stoneskin"}, {PARTY_BUFF_TORCH_LIGHT, "TorchLight"}, {PARTY_BUFF_WATER_RESISTANCE, "WaterResistance"}, {PARTY_BUFF_WATER_WALK, "WaterWalk"}, {PARTY_BUFF_WIZARD_EYE, "WizardEye"} };
}


int64_t
MON_BIT_ACTIVE = INVALID_ID,
MON_BIT_SHOW_ON_MAP = INVALID_ID,
MON_BIT_INVISIBLE = INVALID_ID,
MON_BIT_NO_FLEE = INVALID_ID,
MON_BIT_HOSTILE = INVALID_ID,
MON_BIT_ON_ALERT_MAP = INVALID_ID,
MON_BIT_TREASURE_GENERATED = INVALID_ID,
MON_BIT_SHOW_AS_HOSTILE = INVALID_ID,
MON_BIT_IS_OBELISK_CHEST = INVALID_ID;

std::vector<int64_t> ALL_MONSTER_BITS;
std::map<int64_t, std::string> ENUM_TO_STRING_MONSTER_BITS;

void makeEnumMonsterBits_6()
{
    MON_BIT_ACTIVE = 1024;
    MON_BIT_SHOW_ON_MAP = 32768;
    MON_BIT_INVISIBLE = 65536;
    MON_BIT_NO_FLEE = 131072;
    MON_BIT_HOSTILE = 524288;
    MON_BIT_ON_ALERT_MAP = 1048576;
    MON_BIT_TREASURE_GENERATED = 8388608;
    MON_BIT_SHOW_AS_HOSTILE = 16777216;

    ALL_MONSTER_BITS = { MON_BIT_ACTIVE, MON_BIT_SHOW_ON_MAP, MON_BIT_INVISIBLE, MON_BIT_NO_FLEE, MON_BIT_HOSTILE, MON_BIT_ON_ALERT_MAP, MON_BIT_TREASURE_GENERATED, MON_BIT_SHOW_AS_HOSTILE };

    ENUM_TO_STRING_MONSTER_BITS = { {MON_BIT_ACTIVE, "Active"}, {MON_BIT_SHOW_ON_MAP, "ShowOnMap"}, {MON_BIT_INVISIBLE, "Invisible"}, {MON_BIT_NO_FLEE, "NoFlee"}, {MON_BIT_HOSTILE, "Hostile"}, {MON_BIT_ON_ALERT_MAP, "OnAlertMap"}, {MON_BIT_TREASURE_GENERATED, "TreasureGenerated"}, {MON_BIT_SHOW_AS_HOSTILE, "ShowAsHostile"} };
}

void makeEnumMonsterBits_7()
{
    MON_BIT_ACTIVE = 1024;
    MON_BIT_SHOW_ON_MAP = 32768;
    MON_BIT_INVISIBLE = 65536;
    MON_BIT_NO_FLEE = 131072;
    MON_BIT_HOSTILE = 524288;
    MON_BIT_ON_ALERT_MAP = 1048576;
    MON_BIT_TREASURE_GENERATED = 8388608;
    MON_BIT_SHOW_AS_HOSTILE = 16777216;

    ALL_MONSTER_BITS = { MON_BIT_ACTIVE, MON_BIT_SHOW_ON_MAP, MON_BIT_INVISIBLE, MON_BIT_NO_FLEE, MON_BIT_HOSTILE, MON_BIT_ON_ALERT_MAP, MON_BIT_TREASURE_GENERATED, MON_BIT_SHOW_AS_HOSTILE };

    ENUM_TO_STRING_MONSTER_BITS = { {MON_BIT_ACTIVE, "Active"}, {MON_BIT_SHOW_ON_MAP, "ShowOnMap"}, {MON_BIT_INVISIBLE, "Invisible"}, {MON_BIT_NO_FLEE, "NoFlee"}, {MON_BIT_HOSTILE, "Hostile"}, {MON_BIT_ON_ALERT_MAP, "OnAlertMap"}, {MON_BIT_TREASURE_GENERATED, "TreasureGenerated"}, {MON_BIT_SHOW_AS_HOSTILE, "ShowAsHostile"} };
}

void makeEnumMonsterBits_8()
{
    MON_BIT_ACTIVE = 1024;
    MON_BIT_SHOW_ON_MAP = 32768;
    MON_BIT_INVISIBLE = 65536;
    MON_BIT_NO_FLEE = 131072;
    MON_BIT_HOSTILE = 524288;
    MON_BIT_ON_ALERT_MAP = 1048576;
    MON_BIT_TREASURE_GENERATED = 8388608;
    MON_BIT_SHOW_AS_HOSTILE = 16777216;
    MON_BIT_IS_OBELISK_CHEST = 33554432;

    ALL_MONSTER_BITS = { MON_BIT_ACTIVE, MON_BIT_SHOW_ON_MAP, MON_BIT_INVISIBLE, MON_BIT_NO_FLEE, MON_BIT_HOSTILE, MON_BIT_ON_ALERT_MAP, MON_BIT_TREASURE_GENERATED, MON_BIT_SHOW_AS_HOSTILE, MON_BIT_IS_OBELISK_CHEST };

    ENUM_TO_STRING_MONSTER_BITS = { {MON_BIT_ACTIVE, "Active"}, {MON_BIT_SHOW_ON_MAP, "ShowOnMap"}, {MON_BIT_INVISIBLE, "Invisible"}, {MON_BIT_NO_FLEE, "NoFlee"}, {MON_BIT_HOSTILE, "Hostile"}, {MON_BIT_ON_ALERT_MAP, "OnAlertMap"}, {MON_BIT_TREASURE_GENERATED, "TreasureGenerated"}, {MON_BIT_SHOW_AS_HOSTILE, "ShowAsHostile"}, {MON_BIT_IS_OBELISK_CHEST, "IsObeliskChest"} };
}


int64_t
MON_BUFF_NULL = INVALID_ID,
MON_BUFF_CHARM = INVALID_ID,
MON_BUFF_CURSE = INVALID_ID,
MON_BUFF_SHRINKING_RAY = INVALID_ID,
MON_BUFF_FEAR = INVALID_ID,
MON_BUFF_STONED = INVALID_ID,
MON_BUFF_PARALYZE = INVALID_ID,
MON_BUFF_SLOW = INVALID_ID,
MON_BUFF_FEEBLEMIND = INVALID_ID,
MON_BUFF_SUMMONED = INVALID_ID,
MON_BUFF_ARMOR_HALVED = INVALID_ID,
MON_BUFF_BERSERK = INVALID_ID,
MON_BUFF_MASS_DISTORTION = INVALID_ID,
MON_BUFF_FATE = INVALID_ID,
MON_BUFF_ENSLAVE = INVALID_ID,
MON_BUFF_DAY_OF_PROTECTION = INVALID_ID,
MON_BUFF_HOUR_OF_POWER = INVALID_ID,
MON_BUFF_SHIELD = INVALID_ID,
MON_BUFF_STONE_SKIN = INVALID_ID,
MON_BUFF_BLESS = INVALID_ID,
MON_BUFF_HEROISM = INVALID_ID,
MON_BUFF_HASTE = INVALID_ID,
MON_BUFF_PAIN_REFLECTION = INVALID_ID,
MON_BUFF_HAMMERHANDS = INVALID_ID,
MON_BUFF_MELEE_ONLY = INVALID_ID,
MON_BUFF_DAMAGE_HALVED = INVALID_ID,
MON_BUFF_WANDER = INVALID_ID,
MON_BUFF_MISTFORM = INVALID_ID;

std::vector<int64_t> ALL_MONSTER_BUFF;
std::map<int64_t, std::string> ENUM_TO_STRING_MONSTER_BUFF;

void makeEnumMonsterBuff_6()
{
    MON_BUFF_NULL = 0;
    MON_BUFF_CHARM = 1;
    MON_BUFF_CURSE = 2;
    MON_BUFF_SHRINKING_RAY = 3;
    MON_BUFF_FEAR = 4;
    MON_BUFF_STONED = 5;
    MON_BUFF_PARALYZE = 6;
    MON_BUFF_SLOW = 7;
    MON_BUFF_FEEBLEMIND = 8;

    ALL_MONSTER_BUFF = { MON_BUFF_NULL, MON_BUFF_CHARM, MON_BUFF_CURSE, MON_BUFF_SHRINKING_RAY, MON_BUFF_FEAR, MON_BUFF_STONED, MON_BUFF_PARALYZE, MON_BUFF_SLOW, MON_BUFF_FEEBLEMIND };

    ENUM_TO_STRING_MONSTER_BUFF = { {MON_BUFF_NULL, "Null"}, {MON_BUFF_CHARM, "Charm"}, {MON_BUFF_CURSE, "Curse"}, {MON_BUFF_SHRINKING_RAY, "ShrinkingRay"}, {MON_BUFF_FEAR, "Fear"}, {MON_BUFF_STONED, "Stoned"}, {MON_BUFF_PARALYZE, "Paralyze"}, {MON_BUFF_SLOW, "Slow"}, {MON_BUFF_FEEBLEMIND, "Feeblemind"} };
}

void makeEnumMonsterBuff_7()
{
    MON_BUFF_NULL = 0;
    MON_BUFF_CHARM = 1;
    MON_BUFF_SUMMONED = 2;
    MON_BUFF_SHRINKING_RAY = 3;
    MON_BUFF_FEAR = 4;
    MON_BUFF_STONED = 5;
    MON_BUFF_PARALYZE = 6;
    MON_BUFF_SLOW = 7;
    MON_BUFF_ARMOR_HALVED = 8;
    MON_BUFF_BERSERK = 9;
    MON_BUFF_MASS_DISTORTION = 10;
    MON_BUFF_FATE = 11;
    MON_BUFF_ENSLAVE = 12;
    MON_BUFF_DAY_OF_PROTECTION = 13;
    MON_BUFF_HOUR_OF_POWER = 14;
    MON_BUFF_SHIELD = 15;
    MON_BUFF_STONE_SKIN = 16;
    MON_BUFF_BLESS = 17;
    MON_BUFF_HEROISM = 18;
    MON_BUFF_HASTE = 19;
    MON_BUFF_PAIN_REFLECTION = 20;
    MON_BUFF_HAMMERHANDS = 21;

    ALL_MONSTER_BUFF = { MON_BUFF_NULL, MON_BUFF_CHARM, MON_BUFF_SUMMONED, MON_BUFF_SHRINKING_RAY, MON_BUFF_FEAR, MON_BUFF_STONED, MON_BUFF_PARALYZE, MON_BUFF_SLOW, MON_BUFF_ARMOR_HALVED, MON_BUFF_BERSERK, MON_BUFF_MASS_DISTORTION, MON_BUFF_FATE, MON_BUFF_ENSLAVE, MON_BUFF_DAY_OF_PROTECTION, MON_BUFF_HOUR_OF_POWER, MON_BUFF_SHIELD, MON_BUFF_STONE_SKIN, MON_BUFF_BLESS, MON_BUFF_HEROISM, MON_BUFF_HASTE, MON_BUFF_PAIN_REFLECTION, MON_BUFF_HAMMERHANDS };

    ENUM_TO_STRING_MONSTER_BUFF = { {MON_BUFF_NULL, "Null"}, {MON_BUFF_CHARM, "Charm"}, {MON_BUFF_SUMMONED, "Summoned"}, {MON_BUFF_SHRINKING_RAY, "ShrinkingRay"}, {MON_BUFF_FEAR, "Fear"}, {MON_BUFF_STONED, "Stoned"}, {MON_BUFF_PARALYZE, "Paralyze"}, {MON_BUFF_SLOW, "Slow"}, {MON_BUFF_ARMOR_HALVED, "ArmorHalved"}, {MON_BUFF_BERSERK, "Berserk"}, {MON_BUFF_MASS_DISTORTION, "MassDistortion"}, {MON_BUFF_FATE, "Fate"}, {MON_BUFF_ENSLAVE, "Enslave"}, {MON_BUFF_DAY_OF_PROTECTION, "DayOfProtection"}, {MON_BUFF_HOUR_OF_POWER, "HourOfPower"}, {MON_BUFF_SHIELD, "Shield"}, {MON_BUFF_STONE_SKIN, "StoneSkin"}, {MON_BUFF_BLESS, "Bless"}, {MON_BUFF_HEROISM, "Heroism"}, {MON_BUFF_HASTE, "Haste"}, {MON_BUFF_PAIN_REFLECTION, "PainReflection"}, {MON_BUFF_HAMMERHANDS, "Hammerhands"} };
}

void makeEnumMonsterBuff_8()
{
    MON_BUFF_NULL = 0;
    MON_BUFF_CHARM = 1;
    MON_BUFF_SUMMONED = 2;
    MON_BUFF_SHRINKING_RAY = 3;
    MON_BUFF_FEAR = 4;
    MON_BUFF_STONED = 5;
    MON_BUFF_PARALYZE = 6;
    MON_BUFF_SLOW = 7;
    MON_BUFF_BERSERK = 8;
    MON_BUFF_MASS_DISTORTION = 9;
    MON_BUFF_FATE = 10;
    MON_BUFF_ENSLAVE = 11;
    MON_BUFF_DAY_OF_PROTECTION = 12;
    MON_BUFF_HOUR_OF_POWER = 13;
    MON_BUFF_SHIELD = 14;
    MON_BUFF_STONE_SKIN = 15;
    MON_BUFF_BLESS = 16;
    MON_BUFF_HEROISM = 17;
    MON_BUFF_HASTE = 18;
    MON_BUFF_PAIN_REFLECTION = 19;
    MON_BUFF_HAMMERHANDS = 20;
    MON_BUFF_ARMOR_HALVED = 21;
    MON_BUFF_MELEE_ONLY = 22;
    MON_BUFF_DAMAGE_HALVED = 23;
    MON_BUFF_WANDER = 24;
    MON_BUFF_MISTFORM = 25;

    ALL_MONSTER_BUFF = { MON_BUFF_NULL, MON_BUFF_CHARM, MON_BUFF_SUMMONED, MON_BUFF_SHRINKING_RAY, MON_BUFF_FEAR, MON_BUFF_STONED, MON_BUFF_PARALYZE, MON_BUFF_SLOW, MON_BUFF_BERSERK, MON_BUFF_MASS_DISTORTION, MON_BUFF_FATE, MON_BUFF_ENSLAVE, MON_BUFF_DAY_OF_PROTECTION, MON_BUFF_HOUR_OF_POWER, MON_BUFF_SHIELD, MON_BUFF_STONE_SKIN, MON_BUFF_BLESS, MON_BUFF_HEROISM, MON_BUFF_HASTE, MON_BUFF_PAIN_REFLECTION, MON_BUFF_HAMMERHANDS, MON_BUFF_ARMOR_HALVED, MON_BUFF_MELEE_ONLY, MON_BUFF_DAMAGE_HALVED, MON_BUFF_WANDER, MON_BUFF_MISTFORM };

    ENUM_TO_STRING_MONSTER_BUFF = { {MON_BUFF_NULL, "Null"}, {MON_BUFF_CHARM, "Charm"}, {MON_BUFF_SUMMONED, "Summoned"}, {MON_BUFF_SHRINKING_RAY, "ShrinkingRay"}, {MON_BUFF_FEAR, "Fear"}, {MON_BUFF_STONED, "Stoned"}, {MON_BUFF_PARALYZE, "Paralyze"}, {MON_BUFF_SLOW, "Slow"}, {MON_BUFF_BERSERK, "Berserk"}, {MON_BUFF_MASS_DISTORTION, "MassDistortion"}, {MON_BUFF_FATE, "Fate"}, {MON_BUFF_ENSLAVE, "Enslave"}, {MON_BUFF_DAY_OF_PROTECTION, "DayOfProtection"}, {MON_BUFF_HOUR_OF_POWER, "HourOfPower"}, {MON_BUFF_SHIELD, "Shield"}, {MON_BUFF_STONE_SKIN, "StoneSkin"}, {MON_BUFF_BLESS, "Bless"}, {MON_BUFF_HEROISM, "Heroism"}, {MON_BUFF_HASTE, "Haste"}, {MON_BUFF_PAIN_REFLECTION, "PainReflection"}, {MON_BUFF_HAMMERHANDS, "Hammerhands"}, {MON_BUFF_ARMOR_HALVED, "ArmorHalved"}, {MON_BUFF_MELEE_ONLY, "MeleeOnly"}, {MON_BUFF_DAMAGE_HALVED, "DamageHalved"}, {MON_BUFF_WANDER, "Wander"}, {MON_BUFF_MISTFORM, "Mistform"} };
}


int64_t
MON_BONUS_CURSE = INVALID_ID,
MON_BONUS_WEAK = INVALID_ID,
MON_BONUS_ASLEEP = INVALID_ID,
MON_BONUS_DRUNK = INVALID_ID,
MON_BONUS_INSANE = INVALID_ID,
MON_BONUS_POISON_1 = INVALID_ID,
MON_BONUS_POISON_2 = INVALID_ID,
MON_BONUS_POISON_3 = INVALID_ID,
MON_BONUS_DISEASE_1 = INVALID_ID,
MON_BONUS_DISEASE_2 = INVALID_ID,
MON_BONUS_DISEASE_3 = INVALID_ID,
MON_BONUS_PARALYZE = INVALID_ID,
MON_BONUS_UNCON = INVALID_ID,
MON_BONUS_DEAD = INVALID_ID,
MON_BONUS_STONE = INVALID_ID,
MON_BONUS_ERRAD = INVALID_ID,
MON_BONUS_BRKITEM = INVALID_ID,
MON_BONUS_BRKARMOR = INVALID_ID,
MON_BONUS_BRKWEAPON = INVALID_ID,
MON_BONUS_STEAL = INVALID_ID,
MON_BONUS_AGE = INVALID_ID,
MON_BONUS_DRAINSP = INVALID_ID,
MON_BONUS_AFRAID = INVALID_ID;

std::vector<int64_t> ALL_MONSTER_BONUS;
std::map<int64_t, std::string> ENUM_TO_STRING_MONSTER_BONUS;

void makeEnumMonsterBonus_6()
{
    MON_BONUS_CURSE = 1;
    MON_BONUS_WEAK = 2;
    MON_BONUS_ASLEEP = 3;
    MON_BONUS_DRUNK = 4;
    MON_BONUS_INSANE = 5;
    MON_BONUS_POISON_1 = 6;
    MON_BONUS_POISON_2 = 7;
    MON_BONUS_POISON_3 = 8;
    MON_BONUS_DISEASE_1 = 9;
    MON_BONUS_DISEASE_2 = 10;
    MON_BONUS_DISEASE_3 = 11;
    MON_BONUS_PARALYZE = 12;
    MON_BONUS_UNCON = 13;
    MON_BONUS_DEAD = 14;
    MON_BONUS_STONE = 15;
    MON_BONUS_ERRAD = 16;
    MON_BONUS_BRKITEM = 17;
    MON_BONUS_BRKARMOR = 18;
    MON_BONUS_BRKWEAPON = 19;
    MON_BONUS_STEAL = 20;
    MON_BONUS_AGE = 21;
    MON_BONUS_DRAINSP = 22;
    MON_BONUS_AFRAID = 23;

    ALL_MONSTER_BONUS = { MON_BONUS_CURSE, MON_BONUS_WEAK, MON_BONUS_ASLEEP, MON_BONUS_DRUNK, MON_BONUS_INSANE, MON_BONUS_POISON_1, MON_BONUS_POISON_2, MON_BONUS_POISON_3, MON_BONUS_DISEASE_1, MON_BONUS_DISEASE_2, MON_BONUS_DISEASE_3, MON_BONUS_PARALYZE, MON_BONUS_UNCON, MON_BONUS_DEAD, MON_BONUS_STONE, MON_BONUS_ERRAD, MON_BONUS_BRKITEM, MON_BONUS_BRKARMOR, MON_BONUS_BRKWEAPON, MON_BONUS_STEAL, MON_BONUS_AGE, MON_BONUS_DRAINSP, MON_BONUS_AFRAID };

    ENUM_TO_STRING_MONSTER_BONUS = { {MON_BONUS_CURSE, "Curse"}, {MON_BONUS_WEAK, "Weak"}, {MON_BONUS_ASLEEP, "Asleep"}, {MON_BONUS_DRUNK, "Drunk"}, {MON_BONUS_INSANE, "Insane"}, {MON_BONUS_POISON_1, "Poison1"}, {MON_BONUS_POISON_2, "Poison2"}, {MON_BONUS_POISON_3, "Poison3"}, {MON_BONUS_DISEASE_1, "Disease1"}, {MON_BONUS_DISEASE_2, "Disease2"}, {MON_BONUS_DISEASE_3, "Disease3"}, {MON_BONUS_PARALYZE, "Paralyze"}, {MON_BONUS_UNCON, "Uncon"}, {MON_BONUS_DEAD, "Dead"}, {MON_BONUS_STONE, "Stone"}, {MON_BONUS_ERRAD, "Errad"}, {MON_BONUS_BRKITEM, "Brkitem"}, {MON_BONUS_BRKARMOR, "Brkarmor"}, {MON_BONUS_BRKWEAPON, "Brkweapon"}, {MON_BONUS_STEAL, "Steal"}, {MON_BONUS_AGE, "Age"}, {MON_BONUS_DRAINSP, "Drainsp"}, {MON_BONUS_AFRAID, "Afraid"} };
}

void makeEnumMonsterBonus_7()
{
    MON_BONUS_CURSE = 1;
    MON_BONUS_WEAK = 2;
    MON_BONUS_ASLEEP = 3;
    MON_BONUS_DRUNK = 4;
    MON_BONUS_INSANE = 5;
    MON_BONUS_POISON_1 = 6;
    MON_BONUS_POISON_2 = 7;
    MON_BONUS_POISON_3 = 8;
    MON_BONUS_DISEASE_1 = 9;
    MON_BONUS_DISEASE_2 = 10;
    MON_BONUS_DISEASE_3 = 11;
    MON_BONUS_PARALYZE = 12;
    MON_BONUS_UNCON = 13;
    MON_BONUS_DEAD = 14;
    MON_BONUS_STONE = 15;
    MON_BONUS_ERRAD = 16;
    MON_BONUS_BRKITEM = 17;
    MON_BONUS_BRKARMOR = 18;
    MON_BONUS_BRKWEAPON = 19;
    MON_BONUS_STEAL = 20;
    MON_BONUS_AGE = 21;
    MON_BONUS_DRAINSP = 22;
    MON_BONUS_AFRAID = 23;

    ALL_MONSTER_BONUS = { MON_BONUS_CURSE, MON_BONUS_WEAK, MON_BONUS_ASLEEP, MON_BONUS_DRUNK, MON_BONUS_INSANE, MON_BONUS_POISON_1, MON_BONUS_POISON_2, MON_BONUS_POISON_3, MON_BONUS_DISEASE_1, MON_BONUS_DISEASE_2, MON_BONUS_DISEASE_3, MON_BONUS_PARALYZE, MON_BONUS_UNCON, MON_BONUS_DEAD, MON_BONUS_STONE, MON_BONUS_ERRAD, MON_BONUS_BRKITEM, MON_BONUS_BRKARMOR, MON_BONUS_BRKWEAPON, MON_BONUS_STEAL, MON_BONUS_AGE, MON_BONUS_DRAINSP, MON_BONUS_AFRAID };

    ENUM_TO_STRING_MONSTER_BONUS = { {MON_BONUS_CURSE, "Curse"}, {MON_BONUS_WEAK, "Weak"}, {MON_BONUS_ASLEEP, "Asleep"}, {MON_BONUS_DRUNK, "Drunk"}, {MON_BONUS_INSANE, "Insane"}, {MON_BONUS_POISON_1, "Poison1"}, {MON_BONUS_POISON_2, "Poison2"}, {MON_BONUS_POISON_3, "Poison3"}, {MON_BONUS_DISEASE_1, "Disease1"}, {MON_BONUS_DISEASE_2, "Disease2"}, {MON_BONUS_DISEASE_3, "Disease3"}, {MON_BONUS_PARALYZE, "Paralyze"}, {MON_BONUS_UNCON, "Uncon"}, {MON_BONUS_DEAD, "Dead"}, {MON_BONUS_STONE, "Stone"}, {MON_BONUS_ERRAD, "Errad"}, {MON_BONUS_BRKITEM, "Brkitem"}, {MON_BONUS_BRKARMOR, "Brkarmor"}, {MON_BONUS_BRKWEAPON, "Brkweapon"}, {MON_BONUS_STEAL, "Steal"}, {MON_BONUS_AGE, "Age"}, {MON_BONUS_DRAINSP, "Drainsp"}, {MON_BONUS_AFRAID, "Afraid"} };
}

void makeEnumMonsterBonus_8()
{
    MON_BONUS_CURSE = 1;
    MON_BONUS_WEAK = 2;
    MON_BONUS_ASLEEP = 3;
    MON_BONUS_DRUNK = 4;
    MON_BONUS_INSANE = 5;
    MON_BONUS_POISON_1 = 6;
    MON_BONUS_POISON_2 = 7;
    MON_BONUS_POISON_3 = 8;
    MON_BONUS_DISEASE_1 = 9;
    MON_BONUS_DISEASE_2 = 10;
    MON_BONUS_DISEASE_3 = 11;
    MON_BONUS_PARALYZE = 12;
    MON_BONUS_UNCON = 13;
    MON_BONUS_DEAD = 14;
    MON_BONUS_STONE = 15;
    MON_BONUS_ERRAD = 16;
    MON_BONUS_BRKITEM = 17;
    MON_BONUS_BRKARMOR = 18;
    MON_BONUS_BRKWEAPON = 19;
    MON_BONUS_STEAL = 20;
    MON_BONUS_AGE = 21;
    MON_BONUS_DRAINSP = 22;
    MON_BONUS_AFRAID = 23;

    ALL_MONSTER_BONUS = { MON_BONUS_CURSE, MON_BONUS_WEAK, MON_BONUS_ASLEEP, MON_BONUS_DRUNK, MON_BONUS_INSANE, MON_BONUS_POISON_1, MON_BONUS_POISON_2, MON_BONUS_POISON_3, MON_BONUS_DISEASE_1, MON_BONUS_DISEASE_2, MON_BONUS_DISEASE_3, MON_BONUS_PARALYZE, MON_BONUS_UNCON, MON_BONUS_DEAD, MON_BONUS_STONE, MON_BONUS_ERRAD, MON_BONUS_BRKITEM, MON_BONUS_BRKARMOR, MON_BONUS_BRKWEAPON, MON_BONUS_STEAL, MON_BONUS_AGE, MON_BONUS_DRAINSP, MON_BONUS_AFRAID };

    ENUM_TO_STRING_MONSTER_BONUS = { {MON_BONUS_CURSE, "Curse"}, {MON_BONUS_WEAK, "Weak"}, {MON_BONUS_ASLEEP, "Asleep"}, {MON_BONUS_DRUNK, "Drunk"}, {MON_BONUS_INSANE, "Insane"}, {MON_BONUS_POISON_1, "Poison1"}, {MON_BONUS_POISON_2, "Poison2"}, {MON_BONUS_POISON_3, "Poison3"}, {MON_BONUS_DISEASE_1, "Disease1"}, {MON_BONUS_DISEASE_2, "Disease2"}, {MON_BONUS_DISEASE_3, "Disease3"}, {MON_BONUS_PARALYZE, "Paralyze"}, {MON_BONUS_UNCON, "Uncon"}, {MON_BONUS_DEAD, "Dead"}, {MON_BONUS_STONE, "Stone"}, {MON_BONUS_ERRAD, "Errad"}, {MON_BONUS_BRKITEM, "Brkitem"}, {MON_BONUS_BRKARMOR, "Brkarmor"}, {MON_BONUS_BRKWEAPON, "Brkweapon"}, {MON_BONUS_STEAL, "Steal"}, {MON_BONUS_AGE, "Age"}, {MON_BONUS_DRAINSP, "Drainsp"}, {MON_BONUS_AFRAID, "Afraid"} };
}


int64_t
MON_KIND_UNDEAD = INVALID_ID,
MON_KIND_DEMON = INVALID_ID,
MON_KIND_DRAGON = INVALID_ID,
MON_KIND_ELF = INVALID_ID,
MON_KIND_SWIMMER = INVALID_ID,
MON_KIND_IMMOBILE = INVALID_ID,
MON_KIND_TITAN = INVALID_ID,
MON_KIND_NO_ARENA = INVALID_ID,
MON_KIND_PEASANT = INVALID_ID,
MON_KIND_OGRE = INVALID_ID,
MON_KIND_ELEMENTAL = INVALID_ID;

std::vector<int64_t> ALL_MONSTER_KIND;
std::map<int64_t, std::string> ENUM_TO_STRING_MONSTER_KIND;

void makeEnumMonsterKind_6()
{

    ALL_MONSTER_KIND = {  };

    ENUM_TO_STRING_MONSTER_KIND = {  };
}

void makeEnumMonsterKind_7()
{
    MON_KIND_UNDEAD = 1;
    MON_KIND_DEMON = 2;
    MON_KIND_DRAGON = 3;
    MON_KIND_ELF = 4;
    MON_KIND_SWIMMER = 5;
    MON_KIND_IMMOBILE = 6;
    MON_KIND_TITAN = 7;
    MON_KIND_NO_ARENA = 8;

    ALL_MONSTER_KIND = { MON_KIND_UNDEAD, MON_KIND_DEMON, MON_KIND_DRAGON, MON_KIND_ELF, MON_KIND_SWIMMER, MON_KIND_IMMOBILE, MON_KIND_TITAN, MON_KIND_NO_ARENA };

    ENUM_TO_STRING_MONSTER_KIND = { {MON_KIND_UNDEAD, "Undead"}, {MON_KIND_DEMON, "Demon"}, {MON_KIND_DRAGON, "Dragon"}, {MON_KIND_ELF, "Elf"}, {MON_KIND_SWIMMER, "Swimmer"}, {MON_KIND_IMMOBILE, "Immobile"}, {MON_KIND_TITAN, "Titan"}, {MON_KIND_NO_ARENA, "NoArena"} };
}

void makeEnumMonsterKind_8()
{
    MON_KIND_UNDEAD = 1;
    MON_KIND_DRAGON = 2;
    MON_KIND_SWIMMER = 3;
    MON_KIND_IMMOBILE = 4;
    MON_KIND_PEASANT = 5;
    MON_KIND_NO_ARENA = 6;
    MON_KIND_OGRE = 7;
    MON_KIND_ELEMENTAL = 8;

    ALL_MONSTER_KIND = { MON_KIND_UNDEAD, MON_KIND_DRAGON, MON_KIND_SWIMMER, MON_KIND_IMMOBILE, MON_KIND_PEASANT, MON_KIND_NO_ARENA, MON_KIND_OGRE, MON_KIND_ELEMENTAL };

    ENUM_TO_STRING_MONSTER_KIND = { {MON_KIND_UNDEAD, "Undead"}, {MON_KIND_DRAGON, "Dragon"}, {MON_KIND_SWIMMER, "Swimmer"}, {MON_KIND_IMMOBILE, "Immobile"}, {MON_KIND_PEASANT, "Peasant"}, {MON_KIND_NO_ARENA, "NoArena"}, {MON_KIND_OGRE, "Ogre"}, {MON_KIND_ELEMENTAL, "Elemental"} };
}


int64_t
HOUSE_TYPE_WEAPON_SHOP = INVALID_ID,
HOUSE_TYPE_ARMOR_SHOP = INVALID_ID,
HOUSE_TYPE_MAGIC_SHOP = INVALID_ID,
HOUSE_TYPE_GENERAL_STORE = INVALID_ID,
HOUSE_TYPE_FIRE_GUILD = INVALID_ID,
HOUSE_TYPE_AIR_GUILD = INVALID_ID,
HOUSE_TYPE_WATER_GUILD = INVALID_ID,
HOUSE_TYPE_EARTH_GUILD = INVALID_ID,
HOUSE_TYPE_SPIRIT_GUILD = INVALID_ID,
HOUSE_TYPE_MIND_GUILD = INVALID_ID,
HOUSE_TYPE_BODY_GUILD = INVALID_ID,
HOUSE_TYPE_LIGHT_GUILD = INVALID_ID,
HOUSE_TYPE_DARK_GUILD = INVALID_ID,
HOUSE_TYPE_ELEMENTAL_GUILD = INVALID_ID,
HOUSE_TYPE_SELF_GUILD = INVALID_ID,
HOUSE_TYPE_THIEVES_GUILD = INVALID_ID,
HOUSE_TYPE_MERC_GUILD = INVALID_ID,
HOUSE_TYPE_TOWN_HALL = INVALID_ID,
HOUSE_TYPE_THRONE = INVALID_ID,
HOUSE_TYPE_TAVERN = INVALID_ID,
HOUSE_TYPE_BANK = INVALID_ID,
HOUSE_TYPE_TEMPLE = INVALID_ID,
HOUSE_TYPE_CASTLE_ENT = INVALID_ID,
HOUSE_TYPE_DUNGEON_ENTRANCE = INVALID_ID,
HOUSE_TYPE_SEER_EVIL = INVALID_ID,
HOUSE_TYPE_STABLES = INVALID_ID,
HOUSE_TYPE_BOATS = INVALID_ID,
HOUSE_TYPE_HOUSE = INVALID_ID,
HOUSE_TYPE_TRAINING = INVALID_ID,
HOUSE_TYPE_JAIL = INVALID_ID,
HOUSE_TYPE_CIRCUS = INVALID_ID,
HOUSE_TYPE_THE_ADVENTURERS_INN = INVALID_ID;

std::vector<int64_t> ALL_HOUSE_TYPE;
std::map<int64_t, std::string> ENUM_TO_STRING_HOUSE_TYPE;

void makeEnumHouseType_6()
{
    HOUSE_TYPE_WEAPON_SHOP = 1;
    HOUSE_TYPE_ARMOR_SHOP = 2;
    HOUSE_TYPE_MAGIC_SHOP = 3;
    HOUSE_TYPE_GENERAL_STORE = 4;
    HOUSE_TYPE_FIRE_GUILD = 5;
    HOUSE_TYPE_AIR_GUILD = 6;
    HOUSE_TYPE_WATER_GUILD = 7;
    HOUSE_TYPE_EARTH_GUILD = 8;
    HOUSE_TYPE_SPIRIT_GUILD = 9;
    HOUSE_TYPE_MIND_GUILD = 10;
    HOUSE_TYPE_BODY_GUILD = 11;
    HOUSE_TYPE_LIGHT_GUILD = 12;
    HOUSE_TYPE_DARK_GUILD = 13;
    HOUSE_TYPE_ELEMENTAL_GUILD = 14;
    HOUSE_TYPE_SELF_GUILD = 15;
    HOUSE_TYPE_THIEVES_GUILD = 17;
    HOUSE_TYPE_MERC_GUILD = 18;
    HOUSE_TYPE_TOWN_HALL = 19;
    HOUSE_TYPE_THRONE = 20;
    HOUSE_TYPE_TAVERN = 21;
    HOUSE_TYPE_BANK = 22;
    HOUSE_TYPE_TEMPLE = 23;
    HOUSE_TYPE_CASTLE_ENT = 24;
    HOUSE_TYPE_DUNGEON_ENTRANCE = 25;
    HOUSE_TYPE_SEER_EVIL = 26;
    HOUSE_TYPE_STABLES = 27;
    HOUSE_TYPE_BOATS = 28;
    HOUSE_TYPE_HOUSE = 29;
    HOUSE_TYPE_TRAINING = 30;
    HOUSE_TYPE_JAIL = 31;
    HOUSE_TYPE_CIRCUS = 32;
    HOUSE_TYPE_THE_ADVENTURERS_INN = 35;

    ALL_HOUSE_TYPE = { HOUSE_TYPE_WEAPON_SHOP, HOUSE_TYPE_ARMOR_SHOP, HOUSE_TYPE_MAGIC_SHOP, HOUSE_TYPE_GENERAL_STORE, HOUSE_TYPE_FIRE_GUILD, HOUSE_TYPE_AIR_GUILD, HOUSE_TYPE_WATER_GUILD, HOUSE_TYPE_EARTH_GUILD, HOUSE_TYPE_SPIRIT_GUILD, HOUSE_TYPE_MIND_GUILD, HOUSE_TYPE_BODY_GUILD, HOUSE_TYPE_LIGHT_GUILD, HOUSE_TYPE_DARK_GUILD, HOUSE_TYPE_ELEMENTAL_GUILD, HOUSE_TYPE_SELF_GUILD, HOUSE_TYPE_THIEVES_GUILD, HOUSE_TYPE_MERC_GUILD, HOUSE_TYPE_TOWN_HALL, HOUSE_TYPE_THRONE, HOUSE_TYPE_TAVERN, HOUSE_TYPE_BANK, HOUSE_TYPE_TEMPLE, HOUSE_TYPE_CASTLE_ENT, HOUSE_TYPE_DUNGEON_ENTRANCE, HOUSE_TYPE_SEER_EVIL, HOUSE_TYPE_STABLES, HOUSE_TYPE_BOATS, HOUSE_TYPE_HOUSE, HOUSE_TYPE_TRAINING, HOUSE_TYPE_JAIL, HOUSE_TYPE_CIRCUS, HOUSE_TYPE_THE_ADVENTURERS_INN };

    ENUM_TO_STRING_HOUSE_TYPE = { {HOUSE_TYPE_WEAPON_SHOP, "Weapon Shop"}, {HOUSE_TYPE_ARMOR_SHOP, "Armor Shop"}, {HOUSE_TYPE_MAGIC_SHOP, "Magic Shop"}, {HOUSE_TYPE_GENERAL_STORE, "General Store"}, {HOUSE_TYPE_FIRE_GUILD, "Fire Guild"}, {HOUSE_TYPE_AIR_GUILD, "Air Guild"}, {HOUSE_TYPE_WATER_GUILD, "Water Guild"}, {HOUSE_TYPE_EARTH_GUILD, "Earth Guild"}, {HOUSE_TYPE_SPIRIT_GUILD, "Spirit Guild"}, {HOUSE_TYPE_MIND_GUILD, "Mind Guild"}, {HOUSE_TYPE_BODY_GUILD, "Body Guild"}, {HOUSE_TYPE_LIGHT_GUILD, "Light Guild"}, {HOUSE_TYPE_DARK_GUILD, "Dark Guild"}, {HOUSE_TYPE_ELEMENTAL_GUILD, "Elemental Guild"}, {HOUSE_TYPE_SELF_GUILD, "Self Guild"}, {HOUSE_TYPE_THIEVES_GUILD, "Thieves Guild"}, {HOUSE_TYPE_MERC_GUILD, "Merc Guild"}, {HOUSE_TYPE_TOWN_HALL, "Town Hall"}, {HOUSE_TYPE_THRONE, "Throne"}, {HOUSE_TYPE_TAVERN, "Tavern"}, {HOUSE_TYPE_BANK, "Bank"}, {HOUSE_TYPE_TEMPLE, "Temple"}, {HOUSE_TYPE_CASTLE_ENT, "Castle Ent"}, {HOUSE_TYPE_DUNGEON_ENTRANCE, "Dungeon Entrance"}, {HOUSE_TYPE_SEER_EVIL, "Seer Evil"}, {HOUSE_TYPE_STABLES, "Stables"}, {HOUSE_TYPE_BOATS, "Boats"}, {HOUSE_TYPE_HOUSE, "House"}, {HOUSE_TYPE_TRAINING, "Training"}, {HOUSE_TYPE_JAIL, "Jail"}, {HOUSE_TYPE_CIRCUS, "Circus"}, {HOUSE_TYPE_THE_ADVENTURERS_INN, "The Adventurer's Inn"} };
}

void makeEnumHouseType_7()
{
    HOUSE_TYPE_WEAPON_SHOP = 1;
    HOUSE_TYPE_ARMOR_SHOP = 2;
    HOUSE_TYPE_MAGIC_SHOP = 3;
    HOUSE_TYPE_GENERAL_STORE = 4;
    HOUSE_TYPE_FIRE_GUILD = 5;
    HOUSE_TYPE_AIR_GUILD = 6;
    HOUSE_TYPE_WATER_GUILD = 7;
    HOUSE_TYPE_EARTH_GUILD = 8;
    HOUSE_TYPE_SPIRIT_GUILD = 9;
    HOUSE_TYPE_MIND_GUILD = 10;
    HOUSE_TYPE_BODY_GUILD = 11;
    HOUSE_TYPE_LIGHT_GUILD = 12;
    HOUSE_TYPE_DARK_GUILD = 13;
    HOUSE_TYPE_ELEMENTAL_GUILD = 14;
    HOUSE_TYPE_SELF_GUILD = 15;
    HOUSE_TYPE_TOWN_HALL = 17;
    HOUSE_TYPE_MERC_GUILD = 18;
    HOUSE_TYPE_THRONE = 20;
    HOUSE_TYPE_TAVERN = 21;
    HOUSE_TYPE_BANK = 22;
    HOUSE_TYPE_TEMPLE = 23;
    HOUSE_TYPE_CASTLE_ENT = 24;
    HOUSE_TYPE_DUNGEON_ENTRANCE = 25;
    HOUSE_TYPE_SEER_EVIL = 26;
    HOUSE_TYPE_STABLES = 27;
    HOUSE_TYPE_BOATS = 28;
    HOUSE_TYPE_HOUSE = 29;
    HOUSE_TYPE_TRAINING = 30;
    HOUSE_TYPE_JAIL = 31;
    HOUSE_TYPE_CIRCUS = 32;
    HOUSE_TYPE_THE_ADVENTURERS_INN = 35;

    ALL_HOUSE_TYPE = { HOUSE_TYPE_WEAPON_SHOP, HOUSE_TYPE_ARMOR_SHOP, HOUSE_TYPE_MAGIC_SHOP, HOUSE_TYPE_GENERAL_STORE, HOUSE_TYPE_FIRE_GUILD, HOUSE_TYPE_AIR_GUILD, HOUSE_TYPE_WATER_GUILD, HOUSE_TYPE_EARTH_GUILD, HOUSE_TYPE_SPIRIT_GUILD, HOUSE_TYPE_MIND_GUILD, HOUSE_TYPE_BODY_GUILD, HOUSE_TYPE_LIGHT_GUILD, HOUSE_TYPE_DARK_GUILD, HOUSE_TYPE_ELEMENTAL_GUILD, HOUSE_TYPE_SELF_GUILD, HOUSE_TYPE_TOWN_HALL, HOUSE_TYPE_MERC_GUILD, HOUSE_TYPE_THRONE, HOUSE_TYPE_TAVERN, HOUSE_TYPE_BANK, HOUSE_TYPE_TEMPLE, HOUSE_TYPE_CASTLE_ENT, HOUSE_TYPE_DUNGEON_ENTRANCE, HOUSE_TYPE_SEER_EVIL, HOUSE_TYPE_STABLES, HOUSE_TYPE_BOATS, HOUSE_TYPE_HOUSE, HOUSE_TYPE_TRAINING, HOUSE_TYPE_JAIL, HOUSE_TYPE_CIRCUS, HOUSE_TYPE_THE_ADVENTURERS_INN };

    ENUM_TO_STRING_HOUSE_TYPE = { {HOUSE_TYPE_WEAPON_SHOP, "Weapon Shop"}, {HOUSE_TYPE_ARMOR_SHOP, "Armor Shop"}, {HOUSE_TYPE_MAGIC_SHOP, "Magic Shop"}, {HOUSE_TYPE_GENERAL_STORE, "General Store"}, {HOUSE_TYPE_FIRE_GUILD, "Fire Guild"}, {HOUSE_TYPE_AIR_GUILD, "Air Guild"}, {HOUSE_TYPE_WATER_GUILD, "Water Guild"}, {HOUSE_TYPE_EARTH_GUILD, "Earth Guild"}, {HOUSE_TYPE_SPIRIT_GUILD, "Spirit Guild"}, {HOUSE_TYPE_MIND_GUILD, "Mind Guild"}, {HOUSE_TYPE_BODY_GUILD, "Body Guild"}, {HOUSE_TYPE_LIGHT_GUILD, "Light Guild"}, {HOUSE_TYPE_DARK_GUILD, "Dark Guild"}, {HOUSE_TYPE_ELEMENTAL_GUILD, "Elemental Guild"}, {HOUSE_TYPE_SELF_GUILD, "Self Guild"}, {HOUSE_TYPE_TOWN_HALL, "Town Hall"}, {HOUSE_TYPE_MERC_GUILD, "Merc Guild"}, {HOUSE_TYPE_THRONE, "Throne"}, {HOUSE_TYPE_TAVERN, "Tavern"}, {HOUSE_TYPE_BANK, "Bank"}, {HOUSE_TYPE_TEMPLE, "Temple"}, {HOUSE_TYPE_CASTLE_ENT, "Castle Ent"}, {HOUSE_TYPE_DUNGEON_ENTRANCE, "Dungeon Entrance"}, {HOUSE_TYPE_SEER_EVIL, "Seer Evil"}, {HOUSE_TYPE_STABLES, "Stables"}, {HOUSE_TYPE_BOATS, "Boats"}, {HOUSE_TYPE_HOUSE, "House"}, {HOUSE_TYPE_TRAINING, "Training"}, {HOUSE_TYPE_JAIL, "Jail"}, {HOUSE_TYPE_CIRCUS, "Circus"}, {HOUSE_TYPE_THE_ADVENTURERS_INN, "The Adventurer's Inn"} };
}

void makeEnumHouseType_8()
{
    HOUSE_TYPE_WEAPON_SHOP = 1;
    HOUSE_TYPE_ARMOR_SHOP = 2;
    HOUSE_TYPE_MAGIC_SHOP = 3;
    HOUSE_TYPE_GENERAL_STORE = 4;
    HOUSE_TYPE_FIRE_GUILD = 5;
    HOUSE_TYPE_AIR_GUILD = 6;
    HOUSE_TYPE_WATER_GUILD = 7;
    HOUSE_TYPE_EARTH_GUILD = 8;
    HOUSE_TYPE_SPIRIT_GUILD = 9;
    HOUSE_TYPE_MIND_GUILD = 10;
    HOUSE_TYPE_BODY_GUILD = 11;
    HOUSE_TYPE_LIGHT_GUILD = 12;
    HOUSE_TYPE_DARK_GUILD = 13;
    HOUSE_TYPE_ELEMENTAL_GUILD = 14;
    HOUSE_TYPE_SELF_GUILD = 15;
    HOUSE_TYPE_TOWN_HALL = 17;
    HOUSE_TYPE_MERC_GUILD = 18;
    HOUSE_TYPE_THRONE = 20;
    HOUSE_TYPE_TAVERN = 21;
    HOUSE_TYPE_BANK = 22;
    HOUSE_TYPE_TEMPLE = 23;
    HOUSE_TYPE_CASTLE_ENT = 24;
    HOUSE_TYPE_DUNGEON_ENTRANCE = 25;
    HOUSE_TYPE_SEER_EVIL = 26;
    HOUSE_TYPE_STABLES = 27;
    HOUSE_TYPE_BOATS = 28;
    HOUSE_TYPE_HOUSE = 29;
    HOUSE_TYPE_TRAINING = 30;
    HOUSE_TYPE_JAIL = 31;
    HOUSE_TYPE_CIRCUS = 32;
    HOUSE_TYPE_THE_ADVENTURERS_INN = 35;

    ALL_HOUSE_TYPE = { HOUSE_TYPE_WEAPON_SHOP, HOUSE_TYPE_ARMOR_SHOP, HOUSE_TYPE_MAGIC_SHOP, HOUSE_TYPE_GENERAL_STORE, HOUSE_TYPE_FIRE_GUILD, HOUSE_TYPE_AIR_GUILD, HOUSE_TYPE_WATER_GUILD, HOUSE_TYPE_EARTH_GUILD, HOUSE_TYPE_SPIRIT_GUILD, HOUSE_TYPE_MIND_GUILD, HOUSE_TYPE_BODY_GUILD, HOUSE_TYPE_LIGHT_GUILD, HOUSE_TYPE_DARK_GUILD, HOUSE_TYPE_ELEMENTAL_GUILD, HOUSE_TYPE_SELF_GUILD, HOUSE_TYPE_TOWN_HALL, HOUSE_TYPE_MERC_GUILD, HOUSE_TYPE_THRONE, HOUSE_TYPE_TAVERN, HOUSE_TYPE_BANK, HOUSE_TYPE_TEMPLE, HOUSE_TYPE_CASTLE_ENT, HOUSE_TYPE_DUNGEON_ENTRANCE, HOUSE_TYPE_SEER_EVIL, HOUSE_TYPE_STABLES, HOUSE_TYPE_BOATS, HOUSE_TYPE_HOUSE, HOUSE_TYPE_TRAINING, HOUSE_TYPE_JAIL, HOUSE_TYPE_CIRCUS, HOUSE_TYPE_THE_ADVENTURERS_INN };

    ENUM_TO_STRING_HOUSE_TYPE = { {HOUSE_TYPE_WEAPON_SHOP, "Weapon Shop"}, {HOUSE_TYPE_ARMOR_SHOP, "Armor Shop"}, {HOUSE_TYPE_MAGIC_SHOP, "Magic Shop"}, {HOUSE_TYPE_GENERAL_STORE, "General Store"}, {HOUSE_TYPE_FIRE_GUILD, "Fire Guild"}, {HOUSE_TYPE_AIR_GUILD, "Air Guild"}, {HOUSE_TYPE_WATER_GUILD, "Water Guild"}, {HOUSE_TYPE_EARTH_GUILD, "Earth Guild"}, {HOUSE_TYPE_SPIRIT_GUILD, "Spirit Guild"}, {HOUSE_TYPE_MIND_GUILD, "Mind Guild"}, {HOUSE_TYPE_BODY_GUILD, "Body Guild"}, {HOUSE_TYPE_LIGHT_GUILD, "Light Guild"}, {HOUSE_TYPE_DARK_GUILD, "Dark Guild"}, {HOUSE_TYPE_ELEMENTAL_GUILD, "Elemental Guild"}, {HOUSE_TYPE_SELF_GUILD, "Self Guild"}, {HOUSE_TYPE_TOWN_HALL, "Town Hall"}, {HOUSE_TYPE_MERC_GUILD, "Merc Guild"}, {HOUSE_TYPE_THRONE, "Throne"}, {HOUSE_TYPE_TAVERN, "Tavern"}, {HOUSE_TYPE_BANK, "Bank"}, {HOUSE_TYPE_TEMPLE, "Temple"}, {HOUSE_TYPE_CASTLE_ENT, "Castle Ent"}, {HOUSE_TYPE_DUNGEON_ENTRANCE, "Dungeon Entrance"}, {HOUSE_TYPE_SEER_EVIL, "Seer Evil"}, {HOUSE_TYPE_STABLES, "Stables"}, {HOUSE_TYPE_BOATS, "Boats"}, {HOUSE_TYPE_HOUSE, "House"}, {HOUSE_TYPE_TRAINING, "Training"}, {HOUSE_TYPE_JAIL, "Jail"}, {HOUSE_TYPE_CIRCUS, "Circus"}, {HOUSE_TYPE_THE_ADVENTURERS_INN, "The Adventurer's Inn"} };
}


int64_t
HOUSE_SCREENS_TEACHER = INVALID_ID,
HOUSE_SCREENS_CHOOSE_PERSON = INVALID_ID,
HOUSE_SCREENS_MAIN = INVALID_ID,
HOUSE_SCREENS_BUY_STANDARD = INVALID_ID,
HOUSE_SCREENS_SELL = INVALID_ID,
HOUSE_SCREENS_IDENTIFY = INVALID_ID,
HOUSE_SCREENS_BUY_SPECIAL_MM6 = INVALID_ID,
HOUSE_SCREENS_BANK_DEPOSIT = INVALID_ID,
HOUSE_SCREENS_BANK_WITHDRAW = INVALID_ID,
HOUSE_SCREENS_HEAL = INVALID_ID,
HOUSE_SCREENS_DONATE = INVALID_ID,
HOUSE_SCREENS_PROF_NEWS = INVALID_ID,
HOUSE_SCREENS_JOIN_MENU = INVALID_ID,
HOUSE_SCREENS_NEWS = INVALID_ID,
HOUSE_SCREENS_TAVERN_SLEEP = INVALID_ID,
HOUSE_SCREENS_TAVERN_FOOD = INVALID_ID,
HOUSE_SCREENS_TRAIN = INVALID_ID,
HOUSE_SCREENS_BUY_SPELLS = INVALID_ID,
HOUSE_SCREENS_A = INVALID_ID,
HOUSE_SCREENS_B = INVALID_ID,
HOUSE_SCREENS_C = INVALID_ID,
HOUSE_SCREENS_SEER_HINT = INVALID_ID,
HOUSE_SCREENS_THREAT = INVALID_ID,
HOUSE_SCREENS_BRIBE = INVALID_ID,
HOUSE_SCREENS_TAVERN_DRINK = INVALID_ID,
HOUSE_SCREENS_TAVERN_TIP = INVALID_ID,
HOUSE_SCREENS_STAFF = INVALID_ID,
HOUSE_SCREENS_SWORD = INVALID_ID,
HOUSE_SCREENS_DAGGER = INVALID_ID,
HOUSE_SCREENS_AXE = INVALID_ID,
HOUSE_SCREENS_SPEAR = INVALID_ID,
HOUSE_SCREENS_BOW = INVALID_ID,
HOUSE_SCREENS_MACE = INVALID_ID,
HOUSE_SCREENS_BLASTER = INVALID_ID,
HOUSE_SCREENS_SHIELD = INVALID_ID,
HOUSE_SCREENS_LEATHER = INVALID_ID,
HOUSE_SCREENS_CHAIN = INVALID_ID,
HOUSE_SCREENS_PLATE = INVALID_ID,
HOUSE_SCREENS_FIRE = INVALID_ID,
HOUSE_SCREENS_AIR = INVALID_ID,
HOUSE_SCREENS_WATER = INVALID_ID,
HOUSE_SCREENS_EARTH = INVALID_ID,
HOUSE_SCREENS_SPIRIT = INVALID_ID,
HOUSE_SCREENS_MIND = INVALID_ID,
HOUSE_SCREENS_BODY = INVALID_ID,
HOUSE_SCREENS_LIGHT = INVALID_ID,
HOUSE_SCREENS_DARK = INVALID_ID,
HOUSE_SCREENS_IDENTIFY_ITEM = INVALID_ID,
HOUSE_SCREENS_MERCHANT = INVALID_ID,
HOUSE_SCREENS_REPAIR = INVALID_ID,
HOUSE_SCREENS_BODYBUILDING = INVALID_ID,
HOUSE_SCREENS_MEDITATION = INVALID_ID,
HOUSE_SCREENS_PERCEPTION = INVALID_ID,
HOUSE_SCREENS_DIPLOMACY = INVALID_ID,
HOUSE_SCREENS_THIEVERY = INVALID_ID,
HOUSE_SCREENS_DISARM_TRAPS = INVALID_ID,
HOUSE_SCREENS_LEARNING = INVALID_ID,
HOUSE_SCREENS_TRAVEL_1 = INVALID_ID,
HOUSE_SCREENS_TRAVEL_2 = INVALID_ID,
HOUSE_SCREENS_TRAVEL_3 = INVALID_ID,
HOUSE_SCREENS_HIRE_OR_DISMISS = INVALID_ID,
HOUSE_SCREENS_MORE_INFORMATION = INVALID_ID,
HOUSE_SCREENS_TEACH_SKILL = INVALID_ID,
HOUSE_SCREENS_DO_TEACH_SKILL = INVALID_ID,
HOUSE_SCREENS_JOIN_GUILD = INVALID_ID,
HOUSE_SCREENS_DO_JOIN_GUILD = INVALID_ID,
HOUSE_SCREENS_BOUNTY_HUNT_NPC = INVALID_ID,
HOUSE_SCREENS_SEER_ILOST_IT = INVALID_ID,
HOUSE_SCREENS_ARENA_PAGE = INVALID_ID,
HOUSE_SCREENS_ARENA_SQUIRE = INVALID_ID,
HOUSE_SCREENS_ARENA_KIGHT = INVALID_ID,
HOUSE_SCREENS_ARENA_LORD = INVALID_ID,
HOUSE_SCREENS_ARENA_MENU = INVALID_ID,
HOUSE_SCREENS_ARENA_GO_BACK = INVALID_ID,
HOUSE_SCREENS_ARENA_WIN = INVALID_ID,
HOUSE_SCREENS_ARENA_ALREADY_WON = INVALID_ID,
HOUSE_SCREENS_SEER_PILGRIMAGE = INVALID_ID,
HOUSE_SCREENS_STREET_NPC = INVALID_ID,
HOUSE_SCREENS_LACK_FAME = INVALID_ID,
HOUSE_SCREENS_BEG_THREAT_BRIBE = INVALID_ID,
HOUSE_SCREENS_THREAT_BRIBE = INVALID_ID,
HOUSE_SCREENS_D = INVALID_ID,
HOUSE_SCREENS_E = INVALID_ID,
HOUSE_SCREENS_F = INVALID_ID,
HOUSE_SCREENS_DODGING = INVALID_ID,
HOUSE_SCREENS_UNARMED = INVALID_ID,
HOUSE_SCREENS_IDENTIFY_MONSTER = INVALID_ID,
HOUSE_SCREENS_ARMSMASTER = INVALID_ID,
HOUSE_SCREENS_STEALING = INVALID_ID,
HOUSE_SCREENS_ALCHEMY = INVALID_ID,
HOUSE_SCREENS_DISPLAY_INVENTORY = INVALID_ID,
HOUSE_SCREENS_BUY_SPECIAL = INVALID_ID,
HOUSE_SCREENS_LEARN_SKILLS = INVALID_ID,
HOUSE_SCREENS_BOUNTY_HUNT = INVALID_ID,
HOUSE_SCREENS_PAY_FINE = INVALID_ID,
HOUSE_SCREENS_ARCOMAGE_MENU = INVALID_ID,
HOUSE_SCREENS_ARCOMAGE_RULES = INVALID_ID,
HOUSE_SCREENS_ARCOMAGE_CONDITIONS = INVALID_ID,
HOUSE_SCREENS_ARCOMAGE_PLAY = INVALID_ID,
HOUSE_SCREENS_TRAVEL_4 = INVALID_ID,
HOUSE_SCREENS_DARK_ELF_ABILITY = INVALID_ID,
HOUSE_SCREENS_VAMPIRE_ABILITY = INVALID_ID,
HOUSE_SCREENS_DRAGON_ABILITY = INVALID_ID,
HOUSE_SCREENS_REGENERATION = INVALID_ID,
HOUSE_SCREENS_BUY_SPELLS_FIRE = INVALID_ID,
HOUSE_SCREENS_BUY_SPELLS_AIR = INVALID_ID,
HOUSE_SCREENS_BUY_SPELLS_WATER = INVALID_ID,
HOUSE_SCREENS_BUY_SPELLS_EARTH = INVALID_ID,
HOUSE_SCREENS_BUY_SPELLS_SPIRIT = INVALID_ID,
HOUSE_SCREENS_BUY_SPELLS_MIND = INVALID_ID,
HOUSE_SCREENS_BUY_SPELLS_BODY = INVALID_ID,
HOUSE_SCREENS_BUY_SPELLS_LIGHT = INVALID_ID,
HOUSE_SCREENS_BUY_SPELLS_DARK = INVALID_ID,
HOUSE_SCREENS_JOIN_ROSTER = INVALID_ID,
HOUSE_SCREENS_JOIN_ROSTER_NO = INVALID_ID;

std::vector<int64_t> ALL_HOUSE_SCREENS;
std::map<int64_t, std::string> ENUM_TO_STRING_HOUSE_SCREENS;

void makeEnumHouseScreens_6()
{
    HOUSE_SCREENS_TEACHER = -1;
    HOUSE_SCREENS_CHOOSE_PERSON = 0;
    HOUSE_SCREENS_MAIN = 1;
    HOUSE_SCREENS_BUY_STANDARD = 2;
    HOUSE_SCREENS_SELL = 3;
    HOUSE_SCREENS_IDENTIFY = 4;
    HOUSE_SCREENS_BUY_SPECIAL_MM6 = 6;
    HOUSE_SCREENS_BANK_DEPOSIT = 7;
    HOUSE_SCREENS_BANK_WITHDRAW = 8;
    HOUSE_SCREENS_HEAL = 10;
    HOUSE_SCREENS_DONATE = 11;
    HOUSE_SCREENS_PROF_NEWS = 12;
    HOUSE_SCREENS_JOIN_MENU = 13;
    HOUSE_SCREENS_NEWS = 14;
    HOUSE_SCREENS_TAVERN_SLEEP = 15;
    HOUSE_SCREENS_TAVERN_FOOD = 16;
    HOUSE_SCREENS_TRAIN = 17;
    HOUSE_SCREENS_BUY_SPELLS = 18;
    HOUSE_SCREENS_A = 19;
    HOUSE_SCREENS_B = 20;
    HOUSE_SCREENS_C = 21;
    HOUSE_SCREENS_SEER_HINT = 22;
    HOUSE_SCREENS_THREAT = 23;
    HOUSE_SCREENS_BRIBE = 24;
    HOUSE_SCREENS_TAVERN_DRINK = 25;
    HOUSE_SCREENS_TAVERN_TIP = 26;
    HOUSE_SCREENS_STAFF = 36;
    HOUSE_SCREENS_SWORD = 37;
    HOUSE_SCREENS_DAGGER = 38;
    HOUSE_SCREENS_AXE = 39;
    HOUSE_SCREENS_SPEAR = 40;
    HOUSE_SCREENS_BOW = 41;
    HOUSE_SCREENS_MACE = 42;
    HOUSE_SCREENS_BLASTER = 43;
    HOUSE_SCREENS_SHIELD = 44;
    HOUSE_SCREENS_LEATHER = 45;
    HOUSE_SCREENS_CHAIN = 46;
    HOUSE_SCREENS_PLATE = 47;
    HOUSE_SCREENS_FIRE = 48;
    HOUSE_SCREENS_AIR = 49;
    HOUSE_SCREENS_WATER = 50;
    HOUSE_SCREENS_EARTH = 51;
    HOUSE_SCREENS_SPIRIT = 52;
    HOUSE_SCREENS_MIND = 53;
    HOUSE_SCREENS_BODY = 54;
    HOUSE_SCREENS_LIGHT = 55;
    HOUSE_SCREENS_DARK = 56;
    HOUSE_SCREENS_IDENTIFY_ITEM = 57;
    HOUSE_SCREENS_MERCHANT = 58;
    HOUSE_SCREENS_REPAIR = 59;
    HOUSE_SCREENS_BODYBUILDING = 60;
    HOUSE_SCREENS_MEDITATION = 61;
    HOUSE_SCREENS_PERCEPTION = 62;
    HOUSE_SCREENS_DIPLOMACY = 63;
    HOUSE_SCREENS_THIEVERY = 64;
    HOUSE_SCREENS_DISARM_TRAPS = 65;
    HOUSE_SCREENS_LEARNING = 66;
    HOUSE_SCREENS_TRAVEL_1 = 67;
    HOUSE_SCREENS_TRAVEL_2 = 68;
    HOUSE_SCREENS_TRAVEL_3 = 69;
    HOUSE_SCREENS_HIRE_OR_DISMISS = 70;
    HOUSE_SCREENS_MORE_INFORMATION = 71;
    HOUSE_SCREENS_TEACH_SKILL = 72;
    HOUSE_SCREENS_DO_TEACH_SKILL = 73;
    HOUSE_SCREENS_JOIN_GUILD = 75;
    HOUSE_SCREENS_DO_JOIN_GUILD = 76;
    HOUSE_SCREENS_BOUNTY_HUNT_NPC = 77;
    HOUSE_SCREENS_SEER_ILOST_IT = 78;
    HOUSE_SCREENS_ARENA_PAGE = 80;
    HOUSE_SCREENS_ARENA_SQUIRE = 81;
    HOUSE_SCREENS_ARENA_KIGHT = 82;
    HOUSE_SCREENS_ARENA_LORD = 83;
    HOUSE_SCREENS_ARENA_MENU = 84;
    HOUSE_SCREENS_ARENA_GO_BACK = 85;
    HOUSE_SCREENS_ARENA_WIN = 86;
    HOUSE_SCREENS_ARENA_ALREADY_WON = 87;
    HOUSE_SCREENS_SEER_PILGRIMAGE = 88;
    HOUSE_SCREENS_STREET_NPC = 200;
    HOUSE_SCREENS_LACK_FAME = 201;
    HOUSE_SCREENS_BEG_THREAT_BRIBE = 202;
    HOUSE_SCREENS_THREAT_BRIBE = 203;

    ALL_HOUSE_SCREENS = { HOUSE_SCREENS_TEACHER, HOUSE_SCREENS_CHOOSE_PERSON, HOUSE_SCREENS_MAIN, HOUSE_SCREENS_BUY_STANDARD, HOUSE_SCREENS_SELL, HOUSE_SCREENS_IDENTIFY, HOUSE_SCREENS_BUY_SPECIAL_MM6, HOUSE_SCREENS_BANK_DEPOSIT, HOUSE_SCREENS_BANK_WITHDRAW, HOUSE_SCREENS_HEAL, HOUSE_SCREENS_DONATE, HOUSE_SCREENS_PROF_NEWS, HOUSE_SCREENS_JOIN_MENU, HOUSE_SCREENS_NEWS, HOUSE_SCREENS_TAVERN_SLEEP, HOUSE_SCREENS_TAVERN_FOOD, HOUSE_SCREENS_TRAIN, HOUSE_SCREENS_BUY_SPELLS, HOUSE_SCREENS_A, HOUSE_SCREENS_B, HOUSE_SCREENS_C, HOUSE_SCREENS_SEER_HINT, HOUSE_SCREENS_THREAT, HOUSE_SCREENS_BRIBE, HOUSE_SCREENS_TAVERN_DRINK, HOUSE_SCREENS_TAVERN_TIP, HOUSE_SCREENS_STAFF, HOUSE_SCREENS_SWORD, HOUSE_SCREENS_DAGGER, HOUSE_SCREENS_AXE, HOUSE_SCREENS_SPEAR, HOUSE_SCREENS_BOW, HOUSE_SCREENS_MACE, HOUSE_SCREENS_BLASTER, HOUSE_SCREENS_SHIELD, HOUSE_SCREENS_LEATHER, HOUSE_SCREENS_CHAIN, HOUSE_SCREENS_PLATE, HOUSE_SCREENS_FIRE, HOUSE_SCREENS_AIR, HOUSE_SCREENS_WATER, HOUSE_SCREENS_EARTH, HOUSE_SCREENS_SPIRIT, HOUSE_SCREENS_MIND, HOUSE_SCREENS_BODY, HOUSE_SCREENS_LIGHT, HOUSE_SCREENS_DARK, HOUSE_SCREENS_IDENTIFY_ITEM, HOUSE_SCREENS_MERCHANT, HOUSE_SCREENS_REPAIR, HOUSE_SCREENS_BODYBUILDING, HOUSE_SCREENS_MEDITATION, HOUSE_SCREENS_PERCEPTION, HOUSE_SCREENS_DIPLOMACY, HOUSE_SCREENS_THIEVERY, HOUSE_SCREENS_DISARM_TRAPS, HOUSE_SCREENS_LEARNING, HOUSE_SCREENS_TRAVEL_1, HOUSE_SCREENS_TRAVEL_2, HOUSE_SCREENS_TRAVEL_3, HOUSE_SCREENS_HIRE_OR_DISMISS, HOUSE_SCREENS_MORE_INFORMATION, HOUSE_SCREENS_TEACH_SKILL, HOUSE_SCREENS_DO_TEACH_SKILL, HOUSE_SCREENS_JOIN_GUILD, HOUSE_SCREENS_DO_JOIN_GUILD, HOUSE_SCREENS_BOUNTY_HUNT_NPC, HOUSE_SCREENS_SEER_ILOST_IT, HOUSE_SCREENS_ARENA_PAGE, HOUSE_SCREENS_ARENA_SQUIRE, HOUSE_SCREENS_ARENA_KIGHT, HOUSE_SCREENS_ARENA_LORD, HOUSE_SCREENS_ARENA_MENU, HOUSE_SCREENS_ARENA_GO_BACK, HOUSE_SCREENS_ARENA_WIN, HOUSE_SCREENS_ARENA_ALREADY_WON, HOUSE_SCREENS_SEER_PILGRIMAGE, HOUSE_SCREENS_STREET_NPC, HOUSE_SCREENS_LACK_FAME, HOUSE_SCREENS_BEG_THREAT_BRIBE, HOUSE_SCREENS_THREAT_BRIBE };

    ENUM_TO_STRING_HOUSE_SCREENS = { {HOUSE_SCREENS_TEACHER, "Teacher"}, {HOUSE_SCREENS_CHOOSE_PERSON, "ChoosePerson"}, {HOUSE_SCREENS_MAIN, "Main"}, {HOUSE_SCREENS_BUY_STANDARD, "BuyStandard"}, {HOUSE_SCREENS_SELL, "Sell"}, {HOUSE_SCREENS_IDENTIFY, "Identify"}, {HOUSE_SCREENS_BUY_SPECIAL_MM6, "BuySpecialMM6"}, {HOUSE_SCREENS_BANK_DEPOSIT, "BankDeposit"}, {HOUSE_SCREENS_BANK_WITHDRAW, "BankWithdraw"}, {HOUSE_SCREENS_HEAL, "Heal"}, {HOUSE_SCREENS_DONATE, "Donate"}, {HOUSE_SCREENS_PROF_NEWS, "ProfNews"}, {HOUSE_SCREENS_JOIN_MENU, "JoinMenu"}, {HOUSE_SCREENS_NEWS, "News"}, {HOUSE_SCREENS_TAVERN_SLEEP, "TavernSleep"}, {HOUSE_SCREENS_TAVERN_FOOD, "TavernFood"}, {HOUSE_SCREENS_TRAIN, "Train"}, {HOUSE_SCREENS_BUY_SPELLS, "BuySpells"}, {HOUSE_SCREENS_A, "A"}, {HOUSE_SCREENS_B, "B"}, {HOUSE_SCREENS_C, "C"}, {HOUSE_SCREENS_SEER_HINT, "SeerHint"}, {HOUSE_SCREENS_THREAT, "Threat"}, {HOUSE_SCREENS_BRIBE, "Bribe"}, {HOUSE_SCREENS_TAVERN_DRINK, "TavernDrink"}, {HOUSE_SCREENS_TAVERN_TIP, "TavernTip"}, {HOUSE_SCREENS_STAFF, "Staff"}, {HOUSE_SCREENS_SWORD, "Sword"}, {HOUSE_SCREENS_DAGGER, "Dagger"}, {HOUSE_SCREENS_AXE, "Axe"}, {HOUSE_SCREENS_SPEAR, "Spear"}, {HOUSE_SCREENS_BOW, "Bow"}, {HOUSE_SCREENS_MACE, "Mace"}, {HOUSE_SCREENS_BLASTER, "Blaster"}, {HOUSE_SCREENS_SHIELD, "Shield"}, {HOUSE_SCREENS_LEATHER, "Leather"}, {HOUSE_SCREENS_CHAIN, "Chain"}, {HOUSE_SCREENS_PLATE, "Plate"}, {HOUSE_SCREENS_FIRE, "Fire"}, {HOUSE_SCREENS_AIR, "Air"}, {HOUSE_SCREENS_WATER, "Water"}, {HOUSE_SCREENS_EARTH, "Earth"}, {HOUSE_SCREENS_SPIRIT, "Spirit"}, {HOUSE_SCREENS_MIND, "Mind"}, {HOUSE_SCREENS_BODY, "Body"}, {HOUSE_SCREENS_LIGHT, "Light"}, {HOUSE_SCREENS_DARK, "Dark"}, {HOUSE_SCREENS_IDENTIFY_ITEM, "IdentifyItem"}, {HOUSE_SCREENS_MERCHANT, "Merchant"}, {HOUSE_SCREENS_REPAIR, "Repair"}, {HOUSE_SCREENS_BODYBUILDING, "Bodybuilding"}, {HOUSE_SCREENS_MEDITATION, "Meditation"}, {HOUSE_SCREENS_PERCEPTION, "Perception"}, {HOUSE_SCREENS_DIPLOMACY, "Diplomacy"}, {HOUSE_SCREENS_THIEVERY, "Thievery"}, {HOUSE_SCREENS_DISARM_TRAPS, "DisarmTraps"}, {HOUSE_SCREENS_LEARNING, "Learning"}, {HOUSE_SCREENS_TRAVEL_1, "Travel1"}, {HOUSE_SCREENS_TRAVEL_2, "Travel2"}, {HOUSE_SCREENS_TRAVEL_3, "Travel3"}, {HOUSE_SCREENS_HIRE_OR_DISMISS, "HireOrDismiss"}, {HOUSE_SCREENS_MORE_INFORMATION, "MoreInformation"}, {HOUSE_SCREENS_TEACH_SKILL, "TeachSkill"}, {HOUSE_SCREENS_DO_TEACH_SKILL, "DoTeachSkill"}, {HOUSE_SCREENS_JOIN_GUILD, "JoinGuild"}, {HOUSE_SCREENS_DO_JOIN_GUILD, "DoJoinGuild"}, {HOUSE_SCREENS_BOUNTY_HUNT_NPC, "BountyHuntNPC"}, {HOUSE_SCREENS_SEER_ILOST_IT, "SeerILostIt"}, {HOUSE_SCREENS_ARENA_PAGE, "ArenaPage"}, {HOUSE_SCREENS_ARENA_SQUIRE, "ArenaSquire"}, {HOUSE_SCREENS_ARENA_KIGHT, "ArenaKight"}, {HOUSE_SCREENS_ARENA_LORD, "ArenaLord"}, {HOUSE_SCREENS_ARENA_MENU, "ArenaMenu"}, {HOUSE_SCREENS_ARENA_GO_BACK, "ArenaGoBack"}, {HOUSE_SCREENS_ARENA_WIN, "ArenaWin"}, {HOUSE_SCREENS_ARENA_ALREADY_WON, "ArenaAlreadyWon"}, {HOUSE_SCREENS_SEER_PILGRIMAGE, "SeerPilgrimage"}, {HOUSE_SCREENS_STREET_NPC, "StreetNPC"}, {HOUSE_SCREENS_LACK_FAME, "LackFame"}, {HOUSE_SCREENS_BEG_THREAT_BRIBE, "BegThreatBribe"}, {HOUSE_SCREENS_THREAT_BRIBE, "ThreatBribe"} };
}

void makeEnumHouseScreens_7()
{
    HOUSE_SCREENS_TEACHER = -1;
    HOUSE_SCREENS_CHOOSE_PERSON = 0;
    HOUSE_SCREENS_MAIN = 1;
    HOUSE_SCREENS_BUY_STANDARD = 2;
    HOUSE_SCREENS_SELL = 3;
    HOUSE_SCREENS_IDENTIFY = 4;
    HOUSE_SCREENS_BUY_SPECIAL_MM6 = 6;
    HOUSE_SCREENS_BANK_DEPOSIT = 7;
    HOUSE_SCREENS_BANK_WITHDRAW = 8;
    HOUSE_SCREENS_HEAL = 10;
    HOUSE_SCREENS_DONATE = 11;
    HOUSE_SCREENS_PROF_NEWS = 12;
    HOUSE_SCREENS_JOIN_MENU = 13;
    HOUSE_SCREENS_NEWS = 14;
    HOUSE_SCREENS_TAVERN_SLEEP = 15;
    HOUSE_SCREENS_TAVERN_FOOD = 16;
    HOUSE_SCREENS_TRAIN = 17;
    HOUSE_SCREENS_BUY_SPELLS = 18;
    HOUSE_SCREENS_A = 19;
    HOUSE_SCREENS_B = 20;
    HOUSE_SCREENS_C = 21;
    HOUSE_SCREENS_D = 22;
    HOUSE_SCREENS_E = 23;
    HOUSE_SCREENS_F = 24;
    HOUSE_SCREENS_TAVERN_DRINK = 25;
    HOUSE_SCREENS_TAVERN_TIP = 26;
    HOUSE_SCREENS_STAFF = 36;
    HOUSE_SCREENS_SWORD = 37;
    HOUSE_SCREENS_DAGGER = 38;
    HOUSE_SCREENS_AXE = 39;
    HOUSE_SCREENS_SPEAR = 40;
    HOUSE_SCREENS_BOW = 41;
    HOUSE_SCREENS_MACE = 42;
    HOUSE_SCREENS_BLASTER = 43;
    HOUSE_SCREENS_SHIELD = 44;
    HOUSE_SCREENS_LEATHER = 45;
    HOUSE_SCREENS_CHAIN = 46;
    HOUSE_SCREENS_PLATE = 47;
    HOUSE_SCREENS_FIRE = 48;
    HOUSE_SCREENS_AIR = 49;
    HOUSE_SCREENS_WATER = 50;
    HOUSE_SCREENS_EARTH = 51;
    HOUSE_SCREENS_SPIRIT = 52;
    HOUSE_SCREENS_MIND = 53;
    HOUSE_SCREENS_BODY = 54;
    HOUSE_SCREENS_LIGHT = 55;
    HOUSE_SCREENS_DARK = 56;
    HOUSE_SCREENS_IDENTIFY_ITEM = 57;
    HOUSE_SCREENS_MERCHANT = 58;
    HOUSE_SCREENS_REPAIR = 59;
    HOUSE_SCREENS_BODYBUILDING = 60;
    HOUSE_SCREENS_MEDITATION = 61;
    HOUSE_SCREENS_PERCEPTION = 62;
    HOUSE_SCREENS_DIPLOMACY = 63;
    HOUSE_SCREENS_THIEVERY = 64;
    HOUSE_SCREENS_DISARM_TRAPS = 65;
    HOUSE_SCREENS_DODGING = 66;
    HOUSE_SCREENS_UNARMED = 67;
    HOUSE_SCREENS_IDENTIFY_MONSTER = 68;
    HOUSE_SCREENS_ARMSMASTER = 69;
    HOUSE_SCREENS_STEALING = 70;
    HOUSE_SCREENS_ALCHEMY = 71;
    HOUSE_SCREENS_LEARNING = 72;
    HOUSE_SCREENS_HIRE_OR_DISMISS = 76;
    HOUSE_SCREENS_MORE_INFORMATION = 77;
    HOUSE_SCREENS_TEACH_SKILL = 78;
    HOUSE_SCREENS_DO_TEACH_SKILL = 79;
    HOUSE_SCREENS_JOIN_GUILD = 81;
    HOUSE_SCREENS_DO_JOIN_GUILD = 82;
    HOUSE_SCREENS_BOUNTY_HUNT_NPC = 83;
    HOUSE_SCREENS_SEER_ILOST_IT = 84;
    HOUSE_SCREENS_ARENA_PAGE = 85;
    HOUSE_SCREENS_ARENA_SQUIRE = 86;
    HOUSE_SCREENS_ARENA_KIGHT = 87;
    HOUSE_SCREENS_ARENA_LORD = 88;
    HOUSE_SCREENS_ARENA_MENU = 89;
    HOUSE_SCREENS_ARENA_GO_BACK = 90;
    HOUSE_SCREENS_ARENA_WIN = 91;
    HOUSE_SCREENS_ARENA_ALREADY_WON = 92;
    HOUSE_SCREENS_DISPLAY_INVENTORY = 94;
    HOUSE_SCREENS_BUY_SPECIAL = 95;
    HOUSE_SCREENS_LEARN_SKILLS = 96;
    HOUSE_SCREENS_BOUNTY_HUNT = 99;
    HOUSE_SCREENS_PAY_FINE = 100;
    HOUSE_SCREENS_ARCOMAGE_MENU = 101;
    HOUSE_SCREENS_ARCOMAGE_RULES = 102;
    HOUSE_SCREENS_ARCOMAGE_CONDITIONS = 103;
    HOUSE_SCREENS_ARCOMAGE_PLAY = 104;
    HOUSE_SCREENS_TRAVEL_1 = 106;
    HOUSE_SCREENS_TRAVEL_2 = 107;
    HOUSE_SCREENS_TRAVEL_3 = 108;
    HOUSE_SCREENS_TRAVEL_4 = 109;
    HOUSE_SCREENS_STREET_NPC = 200;
    HOUSE_SCREENS_LACK_FAME = 201;
    HOUSE_SCREENS_BEG_THREAT_BRIBE = 202;
    HOUSE_SCREENS_THREAT_BRIBE = 203;

    ALL_HOUSE_SCREENS = { HOUSE_SCREENS_TEACHER, HOUSE_SCREENS_CHOOSE_PERSON, HOUSE_SCREENS_MAIN, HOUSE_SCREENS_BUY_STANDARD, HOUSE_SCREENS_SELL, HOUSE_SCREENS_IDENTIFY, HOUSE_SCREENS_BUY_SPECIAL_MM6, HOUSE_SCREENS_BANK_DEPOSIT, HOUSE_SCREENS_BANK_WITHDRAW, HOUSE_SCREENS_HEAL, HOUSE_SCREENS_DONATE, HOUSE_SCREENS_PROF_NEWS, HOUSE_SCREENS_JOIN_MENU, HOUSE_SCREENS_NEWS, HOUSE_SCREENS_TAVERN_SLEEP, HOUSE_SCREENS_TAVERN_FOOD, HOUSE_SCREENS_TRAIN, HOUSE_SCREENS_BUY_SPELLS, HOUSE_SCREENS_A, HOUSE_SCREENS_B, HOUSE_SCREENS_C, HOUSE_SCREENS_D, HOUSE_SCREENS_E, HOUSE_SCREENS_F, HOUSE_SCREENS_TAVERN_DRINK, HOUSE_SCREENS_TAVERN_TIP, HOUSE_SCREENS_STAFF, HOUSE_SCREENS_SWORD, HOUSE_SCREENS_DAGGER, HOUSE_SCREENS_AXE, HOUSE_SCREENS_SPEAR, HOUSE_SCREENS_BOW, HOUSE_SCREENS_MACE, HOUSE_SCREENS_BLASTER, HOUSE_SCREENS_SHIELD, HOUSE_SCREENS_LEATHER, HOUSE_SCREENS_CHAIN, HOUSE_SCREENS_PLATE, HOUSE_SCREENS_FIRE, HOUSE_SCREENS_AIR, HOUSE_SCREENS_WATER, HOUSE_SCREENS_EARTH, HOUSE_SCREENS_SPIRIT, HOUSE_SCREENS_MIND, HOUSE_SCREENS_BODY, HOUSE_SCREENS_LIGHT, HOUSE_SCREENS_DARK, HOUSE_SCREENS_IDENTIFY_ITEM, HOUSE_SCREENS_MERCHANT, HOUSE_SCREENS_REPAIR, HOUSE_SCREENS_BODYBUILDING, HOUSE_SCREENS_MEDITATION, HOUSE_SCREENS_PERCEPTION, HOUSE_SCREENS_DIPLOMACY, HOUSE_SCREENS_THIEVERY, HOUSE_SCREENS_DISARM_TRAPS, HOUSE_SCREENS_DODGING, HOUSE_SCREENS_UNARMED, HOUSE_SCREENS_IDENTIFY_MONSTER, HOUSE_SCREENS_ARMSMASTER, HOUSE_SCREENS_STEALING, HOUSE_SCREENS_ALCHEMY, HOUSE_SCREENS_LEARNING, HOUSE_SCREENS_HIRE_OR_DISMISS, HOUSE_SCREENS_MORE_INFORMATION, HOUSE_SCREENS_TEACH_SKILL, HOUSE_SCREENS_DO_TEACH_SKILL, HOUSE_SCREENS_JOIN_GUILD, HOUSE_SCREENS_DO_JOIN_GUILD, HOUSE_SCREENS_BOUNTY_HUNT_NPC, HOUSE_SCREENS_SEER_ILOST_IT, HOUSE_SCREENS_ARENA_PAGE, HOUSE_SCREENS_ARENA_SQUIRE, HOUSE_SCREENS_ARENA_KIGHT, HOUSE_SCREENS_ARENA_LORD, HOUSE_SCREENS_ARENA_MENU, HOUSE_SCREENS_ARENA_GO_BACK, HOUSE_SCREENS_ARENA_WIN, HOUSE_SCREENS_ARENA_ALREADY_WON, HOUSE_SCREENS_DISPLAY_INVENTORY, HOUSE_SCREENS_BUY_SPECIAL, HOUSE_SCREENS_LEARN_SKILLS, HOUSE_SCREENS_BOUNTY_HUNT, HOUSE_SCREENS_PAY_FINE, HOUSE_SCREENS_ARCOMAGE_MENU, HOUSE_SCREENS_ARCOMAGE_RULES, HOUSE_SCREENS_ARCOMAGE_CONDITIONS, HOUSE_SCREENS_ARCOMAGE_PLAY, HOUSE_SCREENS_TRAVEL_1, HOUSE_SCREENS_TRAVEL_2, HOUSE_SCREENS_TRAVEL_3, HOUSE_SCREENS_TRAVEL_4, HOUSE_SCREENS_STREET_NPC, HOUSE_SCREENS_LACK_FAME, HOUSE_SCREENS_BEG_THREAT_BRIBE, HOUSE_SCREENS_THREAT_BRIBE };

    ENUM_TO_STRING_HOUSE_SCREENS = { {HOUSE_SCREENS_TEACHER, "Teacher"}, {HOUSE_SCREENS_CHOOSE_PERSON, "ChoosePerson"}, {HOUSE_SCREENS_MAIN, "Main"}, {HOUSE_SCREENS_BUY_STANDARD, "BuyStandard"}, {HOUSE_SCREENS_SELL, "Sell"}, {HOUSE_SCREENS_IDENTIFY, "Identify"}, {HOUSE_SCREENS_BUY_SPECIAL_MM6, "BuySpecialMM6"}, {HOUSE_SCREENS_BANK_DEPOSIT, "BankDeposit"}, {HOUSE_SCREENS_BANK_WITHDRAW, "BankWithdraw"}, {HOUSE_SCREENS_HEAL, "Heal"}, {HOUSE_SCREENS_DONATE, "Donate"}, {HOUSE_SCREENS_PROF_NEWS, "ProfNews"}, {HOUSE_SCREENS_JOIN_MENU, "JoinMenu"}, {HOUSE_SCREENS_NEWS, "News"}, {HOUSE_SCREENS_TAVERN_SLEEP, "TavernSleep"}, {HOUSE_SCREENS_TAVERN_FOOD, "TavernFood"}, {HOUSE_SCREENS_TRAIN, "Train"}, {HOUSE_SCREENS_BUY_SPELLS, "BuySpells"}, {HOUSE_SCREENS_A, "A"}, {HOUSE_SCREENS_B, "B"}, {HOUSE_SCREENS_C, "C"}, {HOUSE_SCREENS_D, "D"}, {HOUSE_SCREENS_E, "E"}, {HOUSE_SCREENS_F, "F"}, {HOUSE_SCREENS_TAVERN_DRINK, "TavernDrink"}, {HOUSE_SCREENS_TAVERN_TIP, "TavernTip"}, {HOUSE_SCREENS_STAFF, "Staff"}, {HOUSE_SCREENS_SWORD, "Sword"}, {HOUSE_SCREENS_DAGGER, "Dagger"}, {HOUSE_SCREENS_AXE, "Axe"}, {HOUSE_SCREENS_SPEAR, "Spear"}, {HOUSE_SCREENS_BOW, "Bow"}, {HOUSE_SCREENS_MACE, "Mace"}, {HOUSE_SCREENS_BLASTER, "Blaster"}, {HOUSE_SCREENS_SHIELD, "Shield"}, {HOUSE_SCREENS_LEATHER, "Leather"}, {HOUSE_SCREENS_CHAIN, "Chain"}, {HOUSE_SCREENS_PLATE, "Plate"}, {HOUSE_SCREENS_FIRE, "Fire"}, {HOUSE_SCREENS_AIR, "Air"}, {HOUSE_SCREENS_WATER, "Water"}, {HOUSE_SCREENS_EARTH, "Earth"}, {HOUSE_SCREENS_SPIRIT, "Spirit"}, {HOUSE_SCREENS_MIND, "Mind"}, {HOUSE_SCREENS_BODY, "Body"}, {HOUSE_SCREENS_LIGHT, "Light"}, {HOUSE_SCREENS_DARK, "Dark"}, {HOUSE_SCREENS_IDENTIFY_ITEM, "IdentifyItem"}, {HOUSE_SCREENS_MERCHANT, "Merchant"}, {HOUSE_SCREENS_REPAIR, "Repair"}, {HOUSE_SCREENS_BODYBUILDING, "Bodybuilding"}, {HOUSE_SCREENS_MEDITATION, "Meditation"}, {HOUSE_SCREENS_PERCEPTION, "Perception"}, {HOUSE_SCREENS_DIPLOMACY, "Diplomacy"}, {HOUSE_SCREENS_THIEVERY, "Thievery"}, {HOUSE_SCREENS_DISARM_TRAPS, "DisarmTraps"}, {HOUSE_SCREENS_DODGING, "Dodging"}, {HOUSE_SCREENS_UNARMED, "Unarmed"}, {HOUSE_SCREENS_IDENTIFY_MONSTER, "IdentifyMonster"}, {HOUSE_SCREENS_ARMSMASTER, "Armsmaster"}, {HOUSE_SCREENS_STEALING, "Stealing"}, {HOUSE_SCREENS_ALCHEMY, "Alchemy"}, {HOUSE_SCREENS_LEARNING, "Learning"}, {HOUSE_SCREENS_HIRE_OR_DISMISS, "HireOrDismiss"}, {HOUSE_SCREENS_MORE_INFORMATION, "MoreInformation"}, {HOUSE_SCREENS_TEACH_SKILL, "TeachSkill"}, {HOUSE_SCREENS_DO_TEACH_SKILL, "DoTeachSkill"}, {HOUSE_SCREENS_JOIN_GUILD, "JoinGuild"}, {HOUSE_SCREENS_DO_JOIN_GUILD, "DoJoinGuild"}, {HOUSE_SCREENS_BOUNTY_HUNT_NPC, "BountyHuntNPC"}, {HOUSE_SCREENS_SEER_ILOST_IT, "SeerILostIt"}, {HOUSE_SCREENS_ARENA_PAGE, "ArenaPage"}, {HOUSE_SCREENS_ARENA_SQUIRE, "ArenaSquire"}, {HOUSE_SCREENS_ARENA_KIGHT, "ArenaKight"}, {HOUSE_SCREENS_ARENA_LORD, "ArenaLord"}, {HOUSE_SCREENS_ARENA_MENU, "ArenaMenu"}, {HOUSE_SCREENS_ARENA_GO_BACK, "ArenaGoBack"}, {HOUSE_SCREENS_ARENA_WIN, "ArenaWin"}, {HOUSE_SCREENS_ARENA_ALREADY_WON, "ArenaAlreadyWon"}, {HOUSE_SCREENS_DISPLAY_INVENTORY, "DisplayInventory"}, {HOUSE_SCREENS_BUY_SPECIAL, "BuySpecial"}, {HOUSE_SCREENS_LEARN_SKILLS, "LearnSkills"}, {HOUSE_SCREENS_BOUNTY_HUNT, "BountyHunt"}, {HOUSE_SCREENS_PAY_FINE, "PayFine"}, {HOUSE_SCREENS_ARCOMAGE_MENU, "ArcomageMenu"}, {HOUSE_SCREENS_ARCOMAGE_RULES, "ArcomageRules"}, {HOUSE_SCREENS_ARCOMAGE_CONDITIONS, "ArcomageConditions"}, {HOUSE_SCREENS_ARCOMAGE_PLAY, "ArcomagePlay"}, {HOUSE_SCREENS_TRAVEL_1, "Travel1"}, {HOUSE_SCREENS_TRAVEL_2, "Travel2"}, {HOUSE_SCREENS_TRAVEL_3, "Travel3"}, {HOUSE_SCREENS_TRAVEL_4, "Travel4"}, {HOUSE_SCREENS_STREET_NPC, "StreetNPC"}, {HOUSE_SCREENS_LACK_FAME, "LackFame"}, {HOUSE_SCREENS_BEG_THREAT_BRIBE, "BegThreatBribe"}, {HOUSE_SCREENS_THREAT_BRIBE, "ThreatBribe"} };
}

void makeEnumHouseScreens_8()
{
    HOUSE_SCREENS_TEACHER = -1;
    HOUSE_SCREENS_CHOOSE_PERSON = 0;
    HOUSE_SCREENS_MAIN = 1;
    HOUSE_SCREENS_BUY_STANDARD = 2;
    HOUSE_SCREENS_SELL = 3;
    HOUSE_SCREENS_IDENTIFY = 4;
    HOUSE_SCREENS_BUY_SPECIAL_MM6 = 6;
    HOUSE_SCREENS_BANK_DEPOSIT = 7;
    HOUSE_SCREENS_BANK_WITHDRAW = 8;
    HOUSE_SCREENS_HEAL = 10;
    HOUSE_SCREENS_DONATE = 11;
    HOUSE_SCREENS_PROF_NEWS = 12;
    HOUSE_SCREENS_JOIN_MENU = 13;
    HOUSE_SCREENS_NEWS = 14;
    HOUSE_SCREENS_TAVERN_SLEEP = 15;
    HOUSE_SCREENS_TAVERN_FOOD = 16;
    HOUSE_SCREENS_TRAIN = 17;
    HOUSE_SCREENS_BUY_SPELLS = 18;
    HOUSE_SCREENS_A = 19;
    HOUSE_SCREENS_B = 20;
    HOUSE_SCREENS_C = 21;
    HOUSE_SCREENS_D = 22;
    HOUSE_SCREENS_E = 23;
    HOUSE_SCREENS_F = 24;
    HOUSE_SCREENS_TAVERN_DRINK = 25;
    HOUSE_SCREENS_TAVERN_TIP = 26;
    HOUSE_SCREENS_STAFF = 36;
    HOUSE_SCREENS_SWORD = 37;
    HOUSE_SCREENS_DAGGER = 38;
    HOUSE_SCREENS_AXE = 39;
    HOUSE_SCREENS_SPEAR = 40;
    HOUSE_SCREENS_BOW = 41;
    HOUSE_SCREENS_MACE = 42;
    HOUSE_SCREENS_BLASTER = 43;
    HOUSE_SCREENS_SHIELD = 44;
    HOUSE_SCREENS_LEATHER = 45;
    HOUSE_SCREENS_CHAIN = 46;
    HOUSE_SCREENS_PLATE = 47;
    HOUSE_SCREENS_FIRE = 48;
    HOUSE_SCREENS_AIR = 49;
    HOUSE_SCREENS_WATER = 50;
    HOUSE_SCREENS_EARTH = 51;
    HOUSE_SCREENS_SPIRIT = 52;
    HOUSE_SCREENS_MIND = 53;
    HOUSE_SCREENS_BODY = 54;
    HOUSE_SCREENS_LIGHT = 55;
    HOUSE_SCREENS_DARK = 56;
    HOUSE_SCREENS_DARK_ELF_ABILITY = 57;
    HOUSE_SCREENS_VAMPIRE_ABILITY = 58;
    HOUSE_SCREENS_DRAGON_ABILITY = 59;
    HOUSE_SCREENS_IDENTIFY_ITEM = 60;
    HOUSE_SCREENS_MERCHANT = 61;
    HOUSE_SCREENS_REPAIR = 62;
    HOUSE_SCREENS_BODYBUILDING = 63;
    HOUSE_SCREENS_MEDITATION = 64;
    HOUSE_SCREENS_PERCEPTION = 65;
    HOUSE_SCREENS_REGENERATION = 66;
    HOUSE_SCREENS_DISARM_TRAPS = 67;
    HOUSE_SCREENS_DODGING = 68;
    HOUSE_SCREENS_UNARMED = 69;
    HOUSE_SCREENS_IDENTIFY_MONSTER = 70;
    HOUSE_SCREENS_ARMSMASTER = 71;
    HOUSE_SCREENS_STEALING = 72;
    HOUSE_SCREENS_ALCHEMY = 73;
    HOUSE_SCREENS_LEARNING = 74;
    HOUSE_SCREENS_HIRE_OR_DISMISS = 76;
    HOUSE_SCREENS_MORE_INFORMATION = 77;
    HOUSE_SCREENS_TEACH_SKILL = 78;
    HOUSE_SCREENS_DO_TEACH_SKILL = 79;
    HOUSE_SCREENS_JOIN_GUILD = 81;
    HOUSE_SCREENS_DO_JOIN_GUILD = 82;
    HOUSE_SCREENS_BOUNTY_HUNT_NPC = 83;
    HOUSE_SCREENS_SEER_ILOST_IT = 84;
    HOUSE_SCREENS_ARENA_PAGE = 85;
    HOUSE_SCREENS_ARENA_SQUIRE = 86;
    HOUSE_SCREENS_ARENA_KIGHT = 87;
    HOUSE_SCREENS_ARENA_LORD = 88;
    HOUSE_SCREENS_ARENA_MENU = 89;
    HOUSE_SCREENS_ARENA_GO_BACK = 90;
    HOUSE_SCREENS_ARENA_WIN = 91;
    HOUSE_SCREENS_ARENA_ALREADY_WON = 92;
    HOUSE_SCREENS_DISPLAY_INVENTORY = 94;
    HOUSE_SCREENS_BUY_SPECIAL = 95;
    HOUSE_SCREENS_LEARN_SKILLS = 96;
    HOUSE_SCREENS_BOUNTY_HUNT = 99;
    HOUSE_SCREENS_PAY_FINE = 100;
    HOUSE_SCREENS_ARCOMAGE_MENU = 101;
    HOUSE_SCREENS_ARCOMAGE_RULES = 102;
    HOUSE_SCREENS_ARCOMAGE_CONDITIONS = 103;
    HOUSE_SCREENS_ARCOMAGE_PLAY = 104;
    HOUSE_SCREENS_TRAVEL_1 = 106;
    HOUSE_SCREENS_TRAVEL_2 = 107;
    HOUSE_SCREENS_TRAVEL_3 = 108;
    HOUSE_SCREENS_TRAVEL_4 = 109;
    HOUSE_SCREENS_BUY_SPELLS_FIRE = 110;
    HOUSE_SCREENS_BUY_SPELLS_AIR = 111;
    HOUSE_SCREENS_BUY_SPELLS_WATER = 112;
    HOUSE_SCREENS_BUY_SPELLS_EARTH = 113;
    HOUSE_SCREENS_BUY_SPELLS_SPIRIT = 114;
    HOUSE_SCREENS_BUY_SPELLS_MIND = 115;
    HOUSE_SCREENS_BUY_SPELLS_BODY = 116;
    HOUSE_SCREENS_BUY_SPELLS_LIGHT = 117;
    HOUSE_SCREENS_BUY_SPELLS_DARK = 118;
    HOUSE_SCREENS_JOIN_ROSTER = 119;
    HOUSE_SCREENS_JOIN_ROSTER_NO = 120;
    HOUSE_SCREENS_STREET_NPC = 200;
    HOUSE_SCREENS_LACK_FAME = 201;
    HOUSE_SCREENS_BEG_THREAT_BRIBE = 202;
    HOUSE_SCREENS_THREAT_BRIBE = 203;

    ALL_HOUSE_SCREENS = { HOUSE_SCREENS_TEACHER, HOUSE_SCREENS_CHOOSE_PERSON, HOUSE_SCREENS_MAIN, HOUSE_SCREENS_BUY_STANDARD, HOUSE_SCREENS_SELL, HOUSE_SCREENS_IDENTIFY, HOUSE_SCREENS_BUY_SPECIAL_MM6, HOUSE_SCREENS_BANK_DEPOSIT, HOUSE_SCREENS_BANK_WITHDRAW, HOUSE_SCREENS_HEAL, HOUSE_SCREENS_DONATE, HOUSE_SCREENS_PROF_NEWS, HOUSE_SCREENS_JOIN_MENU, HOUSE_SCREENS_NEWS, HOUSE_SCREENS_TAVERN_SLEEP, HOUSE_SCREENS_TAVERN_FOOD, HOUSE_SCREENS_TRAIN, HOUSE_SCREENS_BUY_SPELLS, HOUSE_SCREENS_A, HOUSE_SCREENS_B, HOUSE_SCREENS_C, HOUSE_SCREENS_D, HOUSE_SCREENS_E, HOUSE_SCREENS_F, HOUSE_SCREENS_TAVERN_DRINK, HOUSE_SCREENS_TAVERN_TIP, HOUSE_SCREENS_STAFF, HOUSE_SCREENS_SWORD, HOUSE_SCREENS_DAGGER, HOUSE_SCREENS_AXE, HOUSE_SCREENS_SPEAR, HOUSE_SCREENS_BOW, HOUSE_SCREENS_MACE, HOUSE_SCREENS_BLASTER, HOUSE_SCREENS_SHIELD, HOUSE_SCREENS_LEATHER, HOUSE_SCREENS_CHAIN, HOUSE_SCREENS_PLATE, HOUSE_SCREENS_FIRE, HOUSE_SCREENS_AIR, HOUSE_SCREENS_WATER, HOUSE_SCREENS_EARTH, HOUSE_SCREENS_SPIRIT, HOUSE_SCREENS_MIND, HOUSE_SCREENS_BODY, HOUSE_SCREENS_LIGHT, HOUSE_SCREENS_DARK, HOUSE_SCREENS_DARK_ELF_ABILITY, HOUSE_SCREENS_VAMPIRE_ABILITY, HOUSE_SCREENS_DRAGON_ABILITY, HOUSE_SCREENS_IDENTIFY_ITEM, HOUSE_SCREENS_MERCHANT, HOUSE_SCREENS_REPAIR, HOUSE_SCREENS_BODYBUILDING, HOUSE_SCREENS_MEDITATION, HOUSE_SCREENS_PERCEPTION, HOUSE_SCREENS_REGENERATION, HOUSE_SCREENS_DISARM_TRAPS, HOUSE_SCREENS_DODGING, HOUSE_SCREENS_UNARMED, HOUSE_SCREENS_IDENTIFY_MONSTER, HOUSE_SCREENS_ARMSMASTER, HOUSE_SCREENS_STEALING, HOUSE_SCREENS_ALCHEMY, HOUSE_SCREENS_LEARNING, HOUSE_SCREENS_HIRE_OR_DISMISS, HOUSE_SCREENS_MORE_INFORMATION, HOUSE_SCREENS_TEACH_SKILL, HOUSE_SCREENS_DO_TEACH_SKILL, HOUSE_SCREENS_JOIN_GUILD, HOUSE_SCREENS_DO_JOIN_GUILD, HOUSE_SCREENS_BOUNTY_HUNT_NPC, HOUSE_SCREENS_SEER_ILOST_IT, HOUSE_SCREENS_ARENA_PAGE, HOUSE_SCREENS_ARENA_SQUIRE, HOUSE_SCREENS_ARENA_KIGHT, HOUSE_SCREENS_ARENA_LORD, HOUSE_SCREENS_ARENA_MENU, HOUSE_SCREENS_ARENA_GO_BACK, HOUSE_SCREENS_ARENA_WIN, HOUSE_SCREENS_ARENA_ALREADY_WON, HOUSE_SCREENS_DISPLAY_INVENTORY, HOUSE_SCREENS_BUY_SPECIAL, HOUSE_SCREENS_LEARN_SKILLS, HOUSE_SCREENS_BOUNTY_HUNT, HOUSE_SCREENS_PAY_FINE, HOUSE_SCREENS_ARCOMAGE_MENU, HOUSE_SCREENS_ARCOMAGE_RULES, HOUSE_SCREENS_ARCOMAGE_CONDITIONS, HOUSE_SCREENS_ARCOMAGE_PLAY, HOUSE_SCREENS_TRAVEL_1, HOUSE_SCREENS_TRAVEL_2, HOUSE_SCREENS_TRAVEL_3, HOUSE_SCREENS_TRAVEL_4, HOUSE_SCREENS_BUY_SPELLS_FIRE, HOUSE_SCREENS_BUY_SPELLS_AIR, HOUSE_SCREENS_BUY_SPELLS_WATER, HOUSE_SCREENS_BUY_SPELLS_EARTH, HOUSE_SCREENS_BUY_SPELLS_SPIRIT, HOUSE_SCREENS_BUY_SPELLS_MIND, HOUSE_SCREENS_BUY_SPELLS_BODY, HOUSE_SCREENS_BUY_SPELLS_LIGHT, HOUSE_SCREENS_BUY_SPELLS_DARK, HOUSE_SCREENS_JOIN_ROSTER, HOUSE_SCREENS_JOIN_ROSTER_NO, HOUSE_SCREENS_STREET_NPC, HOUSE_SCREENS_LACK_FAME, HOUSE_SCREENS_BEG_THREAT_BRIBE, HOUSE_SCREENS_THREAT_BRIBE };

    ENUM_TO_STRING_HOUSE_SCREENS = { {HOUSE_SCREENS_TEACHER, "Teacher"}, {HOUSE_SCREENS_CHOOSE_PERSON, "ChoosePerson"}, {HOUSE_SCREENS_MAIN, "Main"}, {HOUSE_SCREENS_BUY_STANDARD, "BuyStandard"}, {HOUSE_SCREENS_SELL, "Sell"}, {HOUSE_SCREENS_IDENTIFY, "Identify"}, {HOUSE_SCREENS_BUY_SPECIAL_MM6, "BuySpecialMM6"}, {HOUSE_SCREENS_BANK_DEPOSIT, "BankDeposit"}, {HOUSE_SCREENS_BANK_WITHDRAW, "BankWithdraw"}, {HOUSE_SCREENS_HEAL, "Heal"}, {HOUSE_SCREENS_DONATE, "Donate"}, {HOUSE_SCREENS_PROF_NEWS, "ProfNews"}, {HOUSE_SCREENS_JOIN_MENU, "JoinMenu"}, {HOUSE_SCREENS_NEWS, "News"}, {HOUSE_SCREENS_TAVERN_SLEEP, "TavernSleep"}, {HOUSE_SCREENS_TAVERN_FOOD, "TavernFood"}, {HOUSE_SCREENS_TRAIN, "Train"}, {HOUSE_SCREENS_BUY_SPELLS, "BuySpells"}, {HOUSE_SCREENS_A, "A"}, {HOUSE_SCREENS_B, "B"}, {HOUSE_SCREENS_C, "C"}, {HOUSE_SCREENS_D, "D"}, {HOUSE_SCREENS_E, "E"}, {HOUSE_SCREENS_F, "F"}, {HOUSE_SCREENS_TAVERN_DRINK, "TavernDrink"}, {HOUSE_SCREENS_TAVERN_TIP, "TavernTip"}, {HOUSE_SCREENS_STAFF, "Staff"}, {HOUSE_SCREENS_SWORD, "Sword"}, {HOUSE_SCREENS_DAGGER, "Dagger"}, {HOUSE_SCREENS_AXE, "Axe"}, {HOUSE_SCREENS_SPEAR, "Spear"}, {HOUSE_SCREENS_BOW, "Bow"}, {HOUSE_SCREENS_MACE, "Mace"}, {HOUSE_SCREENS_BLASTER, "Blaster"}, {HOUSE_SCREENS_SHIELD, "Shield"}, {HOUSE_SCREENS_LEATHER, "Leather"}, {HOUSE_SCREENS_CHAIN, "Chain"}, {HOUSE_SCREENS_PLATE, "Plate"}, {HOUSE_SCREENS_FIRE, "Fire"}, {HOUSE_SCREENS_AIR, "Air"}, {HOUSE_SCREENS_WATER, "Water"}, {HOUSE_SCREENS_EARTH, "Earth"}, {HOUSE_SCREENS_SPIRIT, "Spirit"}, {HOUSE_SCREENS_MIND, "Mind"}, {HOUSE_SCREENS_BODY, "Body"}, {HOUSE_SCREENS_LIGHT, "Light"}, {HOUSE_SCREENS_DARK, "Dark"}, {HOUSE_SCREENS_DARK_ELF_ABILITY, "DarkElfAbility"}, {HOUSE_SCREENS_VAMPIRE_ABILITY, "VampireAbility"}, {HOUSE_SCREENS_DRAGON_ABILITY, "DragonAbility"}, {HOUSE_SCREENS_IDENTIFY_ITEM, "IdentifyItem"}, {HOUSE_SCREENS_MERCHANT, "Merchant"}, {HOUSE_SCREENS_REPAIR, "Repair"}, {HOUSE_SCREENS_BODYBUILDING, "Bodybuilding"}, {HOUSE_SCREENS_MEDITATION, "Meditation"}, {HOUSE_SCREENS_PERCEPTION, "Perception"}, {HOUSE_SCREENS_REGENERATION, "Regeneration"}, {HOUSE_SCREENS_DISARM_TRAPS, "DisarmTraps"}, {HOUSE_SCREENS_DODGING, "Dodging"}, {HOUSE_SCREENS_UNARMED, "Unarmed"}, {HOUSE_SCREENS_IDENTIFY_MONSTER, "IdentifyMonster"}, {HOUSE_SCREENS_ARMSMASTER, "Armsmaster"}, {HOUSE_SCREENS_STEALING, "Stealing"}, {HOUSE_SCREENS_ALCHEMY, "Alchemy"}, {HOUSE_SCREENS_LEARNING, "Learning"}, {HOUSE_SCREENS_HIRE_OR_DISMISS, "HireOrDismiss"}, {HOUSE_SCREENS_MORE_INFORMATION, "MoreInformation"}, {HOUSE_SCREENS_TEACH_SKILL, "TeachSkill"}, {HOUSE_SCREENS_DO_TEACH_SKILL, "DoTeachSkill"}, {HOUSE_SCREENS_JOIN_GUILD, "JoinGuild"}, {HOUSE_SCREENS_DO_JOIN_GUILD, "DoJoinGuild"}, {HOUSE_SCREENS_BOUNTY_HUNT_NPC, "BountyHuntNPC"}, {HOUSE_SCREENS_SEER_ILOST_IT, "SeerILostIt"}, {HOUSE_SCREENS_ARENA_PAGE, "ArenaPage"}, {HOUSE_SCREENS_ARENA_SQUIRE, "ArenaSquire"}, {HOUSE_SCREENS_ARENA_KIGHT, "ArenaKight"}, {HOUSE_SCREENS_ARENA_LORD, "ArenaLord"}, {HOUSE_SCREENS_ARENA_MENU, "ArenaMenu"}, {HOUSE_SCREENS_ARENA_GO_BACK, "ArenaGoBack"}, {HOUSE_SCREENS_ARENA_WIN, "ArenaWin"}, {HOUSE_SCREENS_ARENA_ALREADY_WON, "ArenaAlreadyWon"}, {HOUSE_SCREENS_DISPLAY_INVENTORY, "DisplayInventory"}, {HOUSE_SCREENS_BUY_SPECIAL, "BuySpecial"}, {HOUSE_SCREENS_LEARN_SKILLS, "LearnSkills"}, {HOUSE_SCREENS_BOUNTY_HUNT, "BountyHunt"}, {HOUSE_SCREENS_PAY_FINE, "PayFine"}, {HOUSE_SCREENS_ARCOMAGE_MENU, "ArcomageMenu"}, {HOUSE_SCREENS_ARCOMAGE_RULES, "ArcomageRules"}, {HOUSE_SCREENS_ARCOMAGE_CONDITIONS, "ArcomageConditions"}, {HOUSE_SCREENS_ARCOMAGE_PLAY, "ArcomagePlay"}, {HOUSE_SCREENS_TRAVEL_1, "Travel1"}, {HOUSE_SCREENS_TRAVEL_2, "Travel2"}, {HOUSE_SCREENS_TRAVEL_3, "Travel3"}, {HOUSE_SCREENS_TRAVEL_4, "Travel4"}, {HOUSE_SCREENS_BUY_SPELLS_FIRE, "BuySpellsFire"}, {HOUSE_SCREENS_BUY_SPELLS_AIR, "BuySpellsAir"}, {HOUSE_SCREENS_BUY_SPELLS_WATER, "BuySpellsWater"}, {HOUSE_SCREENS_BUY_SPELLS_EARTH, "BuySpellsEarth"}, {HOUSE_SCREENS_BUY_SPELLS_SPIRIT, "BuySpellsSpirit"}, {HOUSE_SCREENS_BUY_SPELLS_MIND, "BuySpellsMind"}, {HOUSE_SCREENS_BUY_SPELLS_BODY, "BuySpellsBody"}, {HOUSE_SCREENS_BUY_SPELLS_LIGHT, "BuySpellsLight"}, {HOUSE_SCREENS_BUY_SPELLS_DARK, "BuySpellsDark"}, {HOUSE_SCREENS_JOIN_ROSTER, "JoinRoster"}, {HOUSE_SCREENS_JOIN_ROSTER_NO, "JoinRosterNo"}, {HOUSE_SCREENS_STREET_NPC, "StreetNPC"}, {HOUSE_SCREENS_LACK_FAME, "LackFame"}, {HOUSE_SCREENS_BEG_THREAT_BRIBE, "BegThreatBribe"}, {HOUSE_SCREENS_THREAT_BRIBE, "ThreatBribe"} };
}


int64_t
FACET_BIT_IS_PORTAL = INVALID_ID,
FACET_BIT_IS_WATER = INVALID_ID,
FACET_BIT_PROJECT_TO_XY = INVALID_ID,
FACET_BIT_PROJECT_TO_XZ = INVALID_ID,
FACET_BIT_PROJECT_TO_YZ = INVALID_ID,
FACET_BIT_INVISIBLE = INVALID_ID,
FACET_BIT_ANIMATED_TFT = INVALID_ID,
FACET_BIT_MOVE_BY_DOOR = INVALID_ID,
FACET_BIT_IS_EVENT_JUST_HINT = INVALID_ID,
FACET_BIT_ALTERNATIVE_SOUND = INVALID_ID,
FACET_BIT_IS_SKY = INVALID_ID,
FACET_BIT_FLIP_U = INVALID_ID,
FACET_BIT_FLIP_V = INVALID_ID,
FACET_BIT_TRIGGER_BY_CLICK = INVALID_ID,
FACET_BIT_TRIGGER_BY_STEP = INVALID_ID,
FACET_BIT_TRIGGER_BY_MONSTER = INVALID_ID,
FACET_BIT_TRIGGER_BY_OBJECT = INVALID_ID,
FACET_BIT_UNTOUCHABLE = INVALID_ID,
FACET_BIT_IS_LAVA = INVALID_ID,
FACET_BIT_HAS_DATA = INVALID_ID,
FACET_BIT_IS_SECRET = INVALID_ID,
FACET_BIT_SCROLL_DOWN = INVALID_ID,
FACET_BIT_ALIGN_TOP = INVALID_ID,
FACET_BIT_SCROLL_UP = INVALID_ID,
FACET_BIT_SCROLL_LEFT = INVALID_ID,
FACET_BIT_SCROLL_RIGHT = INVALID_ID,
FACET_BIT_ALIGN_LEFT = INVALID_ID,
FACET_BIT_ALIGN_RIGHT = INVALID_ID,
FACET_BIT_ALIGN_BOTTOM = INVALID_ID,
FACET_BIT_DISABLE_EVENT_BY_CTRL_CLICK = INVALID_ID,
FACET_BIT_EVENT_DISABLED_BY_CTRL_CLICK = INVALID_ID;

std::vector<int64_t> ALL_FACET_BITS;
std::map<int64_t, std::string> ENUM_TO_STRING_FACET_BITS;

void makeEnumFacetBits_6()
{
    FACET_BIT_IS_PORTAL = 1;
    FACET_BIT_IS_WATER = 16;
    FACET_BIT_PROJECT_TO_XY = 256;
    FACET_BIT_PROJECT_TO_XZ = 512;
    FACET_BIT_PROJECT_TO_YZ = 1024;
    FACET_BIT_INVISIBLE = 8192;
    FACET_BIT_ANIMATED_TFT = 16384;
    FACET_BIT_MOVE_BY_DOOR = 262144;
    FACET_BIT_IS_EVENT_JUST_HINT = 1048576;
    FACET_BIT_ALTERNATIVE_SOUND = 2097152;
    FACET_BIT_IS_SKY = 4194304;
    FACET_BIT_FLIP_U = 8388608;
    FACET_BIT_FLIP_V = 16777216;
    FACET_BIT_TRIGGER_BY_CLICK = 33554432;
    FACET_BIT_TRIGGER_BY_STEP = 67108864;
    FACET_BIT_TRIGGER_BY_MONSTER = 134217728;
    FACET_BIT_TRIGGER_BY_OBJECT = 268435456;
    FACET_BIT_UNTOUCHABLE = 536870912;
    FACET_BIT_IS_LAVA = 1073741824;
    FACET_BIT_HAS_DATA = 2147483648;

    ALL_FACET_BITS = { FACET_BIT_IS_PORTAL, FACET_BIT_IS_WATER, FACET_BIT_PROJECT_TO_XY, FACET_BIT_PROJECT_TO_XZ, FACET_BIT_PROJECT_TO_YZ, FACET_BIT_INVISIBLE, FACET_BIT_ANIMATED_TFT, FACET_BIT_MOVE_BY_DOOR, FACET_BIT_IS_EVENT_JUST_HINT, FACET_BIT_ALTERNATIVE_SOUND, FACET_BIT_IS_SKY, FACET_BIT_FLIP_U, FACET_BIT_FLIP_V, FACET_BIT_TRIGGER_BY_CLICK, FACET_BIT_TRIGGER_BY_STEP, FACET_BIT_TRIGGER_BY_MONSTER, FACET_BIT_TRIGGER_BY_OBJECT, FACET_BIT_UNTOUCHABLE, FACET_BIT_IS_LAVA, FACET_BIT_HAS_DATA };

    ENUM_TO_STRING_FACET_BITS = { {FACET_BIT_IS_PORTAL, "IsPortal"}, {FACET_BIT_IS_WATER, "IsWater"}, {FACET_BIT_PROJECT_TO_XY, "ProjectToXY"}, {FACET_BIT_PROJECT_TO_XZ, "ProjectToXZ"}, {FACET_BIT_PROJECT_TO_YZ, "ProjectToYZ"}, {FACET_BIT_INVISIBLE, "Invisible"}, {FACET_BIT_ANIMATED_TFT, "AnimatedTFT"}, {FACET_BIT_MOVE_BY_DOOR, "MoveByDoor"}, {FACET_BIT_IS_EVENT_JUST_HINT, "IsEventJustHint"}, {FACET_BIT_ALTERNATIVE_SOUND, "AlternativeSound"}, {FACET_BIT_IS_SKY, "IsSky"}, {FACET_BIT_FLIP_U, "FlipU"}, {FACET_BIT_FLIP_V, "FlipV"}, {FACET_BIT_TRIGGER_BY_CLICK, "TriggerByClick"}, {FACET_BIT_TRIGGER_BY_STEP, "TriggerByStep"}, {FACET_BIT_TRIGGER_BY_MONSTER, "TriggerByMonster"}, {FACET_BIT_TRIGGER_BY_OBJECT, "TriggerByObject"}, {FACET_BIT_UNTOUCHABLE, "Untouchable"}, {FACET_BIT_IS_LAVA, "IsLava"}, {FACET_BIT_HAS_DATA, "HasData"} };
}

void makeEnumFacetBits_7()
{
    FACET_BIT_IS_PORTAL = 1;
    FACET_BIT_IS_SECRET = 2;
    FACET_BIT_SCROLL_DOWN = 4;
    FACET_BIT_ALIGN_TOP = 8;
    FACET_BIT_IS_WATER = 16;
    FACET_BIT_SCROLL_UP = 32;
    FACET_BIT_SCROLL_LEFT = 64;
    FACET_BIT_PROJECT_TO_XY = 256;
    FACET_BIT_PROJECT_TO_XZ = 512;
    FACET_BIT_PROJECT_TO_YZ = 1024;
    FACET_BIT_SCROLL_RIGHT = 2048;
    FACET_BIT_ALIGN_LEFT = 4096;
    FACET_BIT_INVISIBLE = 8192;
    FACET_BIT_ANIMATED_TFT = 16384;
    FACET_BIT_ALIGN_RIGHT = 32768;
    FACET_BIT_ALIGN_BOTTOM = 131072;
    FACET_BIT_MOVE_BY_DOOR = 262144;
    FACET_BIT_IS_EVENT_JUST_HINT = 1048576;
    FACET_BIT_ALTERNATIVE_SOUND = 2097152;
    FACET_BIT_IS_SKY = 4194304;
    FACET_BIT_FLIP_U = 8388608;
    FACET_BIT_FLIP_V = 16777216;
    FACET_BIT_TRIGGER_BY_CLICK = 33554432;
    FACET_BIT_TRIGGER_BY_STEP = 67108864;
    FACET_BIT_TRIGGER_BY_MONSTER = 134217728;
    FACET_BIT_TRIGGER_BY_OBJECT = 268435456;
    FACET_BIT_UNTOUCHABLE = 536870912;
    FACET_BIT_IS_LAVA = 1073741824;
    FACET_BIT_HAS_DATA = 2147483648;

    ALL_FACET_BITS = { FACET_BIT_IS_PORTAL, FACET_BIT_IS_SECRET, FACET_BIT_SCROLL_DOWN, FACET_BIT_ALIGN_TOP, FACET_BIT_IS_WATER, FACET_BIT_SCROLL_UP, FACET_BIT_SCROLL_LEFT, FACET_BIT_PROJECT_TO_XY, FACET_BIT_PROJECT_TO_XZ, FACET_BIT_PROJECT_TO_YZ, FACET_BIT_SCROLL_RIGHT, FACET_BIT_ALIGN_LEFT, FACET_BIT_INVISIBLE, FACET_BIT_ANIMATED_TFT, FACET_BIT_ALIGN_RIGHT, FACET_BIT_ALIGN_BOTTOM, FACET_BIT_MOVE_BY_DOOR, FACET_BIT_IS_EVENT_JUST_HINT, FACET_BIT_ALTERNATIVE_SOUND, FACET_BIT_IS_SKY, FACET_BIT_FLIP_U, FACET_BIT_FLIP_V, FACET_BIT_TRIGGER_BY_CLICK, FACET_BIT_TRIGGER_BY_STEP, FACET_BIT_TRIGGER_BY_MONSTER, FACET_BIT_TRIGGER_BY_OBJECT, FACET_BIT_UNTOUCHABLE, FACET_BIT_IS_LAVA, FACET_BIT_HAS_DATA };

    ENUM_TO_STRING_FACET_BITS = { {FACET_BIT_IS_PORTAL, "IsPortal"}, {FACET_BIT_IS_SECRET, "IsSecret"}, {FACET_BIT_SCROLL_DOWN, "ScrollDown"}, {FACET_BIT_ALIGN_TOP, "AlignTop"}, {FACET_BIT_IS_WATER, "IsWater"}, {FACET_BIT_SCROLL_UP, "ScrollUp"}, {FACET_BIT_SCROLL_LEFT, "ScrollLeft"}, {FACET_BIT_PROJECT_TO_XY, "ProjectToXY"}, {FACET_BIT_PROJECT_TO_XZ, "ProjectToXZ"}, {FACET_BIT_PROJECT_TO_YZ, "ProjectToYZ"}, {FACET_BIT_SCROLL_RIGHT, "ScrollRight"}, {FACET_BIT_ALIGN_LEFT, "AlignLeft"}, {FACET_BIT_INVISIBLE, "Invisible"}, {FACET_BIT_ANIMATED_TFT, "AnimatedTFT"}, {FACET_BIT_ALIGN_RIGHT, "AlignRight"}, {FACET_BIT_ALIGN_BOTTOM, "AlignBottom"}, {FACET_BIT_MOVE_BY_DOOR, "MoveByDoor"}, {FACET_BIT_IS_EVENT_JUST_HINT, "IsEventJustHint"}, {FACET_BIT_ALTERNATIVE_SOUND, "AlternativeSound"}, {FACET_BIT_IS_SKY, "IsSky"}, {FACET_BIT_FLIP_U, "FlipU"}, {FACET_BIT_FLIP_V, "FlipV"}, {FACET_BIT_TRIGGER_BY_CLICK, "TriggerByClick"}, {FACET_BIT_TRIGGER_BY_STEP, "TriggerByStep"}, {FACET_BIT_TRIGGER_BY_MONSTER, "TriggerByMonster"}, {FACET_BIT_TRIGGER_BY_OBJECT, "TriggerByObject"}, {FACET_BIT_UNTOUCHABLE, "Untouchable"}, {FACET_BIT_IS_LAVA, "IsLava"}, {FACET_BIT_HAS_DATA, "HasData"} };
}

void makeEnumFacetBits_8()
{
    FACET_BIT_IS_PORTAL = 1;
    FACET_BIT_IS_SECRET = 2;
    FACET_BIT_SCROLL_DOWN = 4;
    FACET_BIT_ALIGN_TOP = 8;
    FACET_BIT_IS_WATER = 16;
    FACET_BIT_SCROLL_UP = 32;
    FACET_BIT_SCROLL_LEFT = 64;
    FACET_BIT_PROJECT_TO_XY = 256;
    FACET_BIT_PROJECT_TO_XZ = 512;
    FACET_BIT_PROJECT_TO_YZ = 1024;
    FACET_BIT_SCROLL_RIGHT = 2048;
    FACET_BIT_ALIGN_LEFT = 4096;
    FACET_BIT_INVISIBLE = 8192;
    FACET_BIT_ANIMATED_TFT = 16384;
    FACET_BIT_ALIGN_RIGHT = 32768;
    FACET_BIT_ALIGN_BOTTOM = 131072;
    FACET_BIT_MOVE_BY_DOOR = 262144;
    FACET_BIT_IS_EVENT_JUST_HINT = 1048576;
    FACET_BIT_ALTERNATIVE_SOUND = 2097152;
    FACET_BIT_IS_SKY = 4194304;
    FACET_BIT_FLIP_U = 8388608;
    FACET_BIT_FLIP_V = 16777216;
    FACET_BIT_TRIGGER_BY_CLICK = 33554432;
    FACET_BIT_TRIGGER_BY_STEP = 67108864;
    FACET_BIT_DISABLE_EVENT_BY_CTRL_CLICK = 134217728;
    FACET_BIT_EVENT_DISABLED_BY_CTRL_CLICK = 268435456;
    FACET_BIT_UNTOUCHABLE = 536870912;
    FACET_BIT_IS_LAVA = 1073741824;
    FACET_BIT_HAS_DATA = 2147483648;

    ALL_FACET_BITS = { FACET_BIT_IS_PORTAL, FACET_BIT_IS_SECRET, FACET_BIT_SCROLL_DOWN, FACET_BIT_ALIGN_TOP, FACET_BIT_IS_WATER, FACET_BIT_SCROLL_UP, FACET_BIT_SCROLL_LEFT, FACET_BIT_PROJECT_TO_XY, FACET_BIT_PROJECT_TO_XZ, FACET_BIT_PROJECT_TO_YZ, FACET_BIT_SCROLL_RIGHT, FACET_BIT_ALIGN_LEFT, FACET_BIT_INVISIBLE, FACET_BIT_ANIMATED_TFT, FACET_BIT_ALIGN_RIGHT, FACET_BIT_ALIGN_BOTTOM, FACET_BIT_MOVE_BY_DOOR, FACET_BIT_IS_EVENT_JUST_HINT, FACET_BIT_ALTERNATIVE_SOUND, FACET_BIT_IS_SKY, FACET_BIT_FLIP_U, FACET_BIT_FLIP_V, FACET_BIT_TRIGGER_BY_CLICK, FACET_BIT_TRIGGER_BY_STEP, FACET_BIT_DISABLE_EVENT_BY_CTRL_CLICK, FACET_BIT_EVENT_DISABLED_BY_CTRL_CLICK, FACET_BIT_UNTOUCHABLE, FACET_BIT_IS_LAVA, FACET_BIT_HAS_DATA };

    ENUM_TO_STRING_FACET_BITS = { {FACET_BIT_IS_PORTAL, "IsPortal"}, {FACET_BIT_IS_SECRET, "IsSecret"}, {FACET_BIT_SCROLL_DOWN, "ScrollDown"}, {FACET_BIT_ALIGN_TOP, "AlignTop"}, {FACET_BIT_IS_WATER, "IsWater"}, {FACET_BIT_SCROLL_UP, "ScrollUp"}, {FACET_BIT_SCROLL_LEFT, "ScrollLeft"}, {FACET_BIT_PROJECT_TO_XY, "ProjectToXY"}, {FACET_BIT_PROJECT_TO_XZ, "ProjectToXZ"}, {FACET_BIT_PROJECT_TO_YZ, "ProjectToYZ"}, {FACET_BIT_SCROLL_RIGHT, "ScrollRight"}, {FACET_BIT_ALIGN_LEFT, "AlignLeft"}, {FACET_BIT_INVISIBLE, "Invisible"}, {FACET_BIT_ANIMATED_TFT, "AnimatedTFT"}, {FACET_BIT_ALIGN_RIGHT, "AlignRight"}, {FACET_BIT_ALIGN_BOTTOM, "AlignBottom"}, {FACET_BIT_MOVE_BY_DOOR, "MoveByDoor"}, {FACET_BIT_IS_EVENT_JUST_HINT, "IsEventJustHint"}, {FACET_BIT_ALTERNATIVE_SOUND, "AlternativeSound"}, {FACET_BIT_IS_SKY, "IsSky"}, {FACET_BIT_FLIP_U, "FlipU"}, {FACET_BIT_FLIP_V, "FlipV"}, {FACET_BIT_TRIGGER_BY_CLICK, "TriggerByClick"}, {FACET_BIT_TRIGGER_BY_STEP, "TriggerByStep"}, {FACET_BIT_DISABLE_EVENT_BY_CTRL_CLICK, "DisableEventByCtrlClick"}, {FACET_BIT_EVENT_DISABLED_BY_CTRL_CLICK, "EventDisabledByCtrlClick"}, {FACET_BIT_UNTOUCHABLE, "Untouchable"}, {FACET_BIT_IS_LAVA, "IsLava"}, {FACET_BIT_HAS_DATA, "HasData"} };
}


int64_t
PLAYER_FACE_ANIMATION_KILL_SMALL_ENEMY = INVALID_ID,
PLAYER_FACE_ANIMATION_KILL_BIG_ENEMY = INVALID_ID,
PLAYER_FACE_ANIMATION_STORE_CLOSED = INVALID_ID,
PLAYER_FACE_ANIMATION_DISARM_TRAP = INVALID_ID,
PLAYER_FACE_ANIMATION_TRAP_EXPLOADED = INVALID_ID,
PLAYER_FACE_ANIMATION_AVOID_DAMAGE = INVALID_ID,
PLAYER_FACE_ANIMATION_IDENTIFY_USELESS = INVALID_ID,
PLAYER_FACE_ANIMATION_IDENTIFY_GREAT = INVALID_ID,
PLAYER_FACE_ANIMATION_IDENTIFY_FAIL = INVALID_ID,
PLAYER_FACE_ANIMATION_REPAIR_ITEM = INVALID_ID,
PLAYER_FACE_ANIMATION_REPAIR_FAIL = INVALID_ID,
PLAYER_FACE_ANIMATION_SET_QUICK_SPELL = INVALID_ID,
PLAYER_FACE_ANIMATION_CANT_REST_HERE = INVALID_ID,
PLAYER_FACE_ANIMATION_SKILL_INCREASED = INVALID_ID,
PLAYER_FACE_ANIMATION_CANT_CARRY = INVALID_ID,
PLAYER_FACE_ANIMATION_MIX_POTION = INVALID_ID,
PLAYER_FACE_ANIMATION_POTION_EXPLODE = INVALID_ID,
PLAYER_FACE_ANIMATION_DOOR_LOCKED = INVALID_ID,
PLAYER_FACE_ANIMATION_WONT_BUDGE = INVALID_ID,
PLAYER_FACE_ANIMATION_CANT_LEARN_SPELL = INVALID_ID,
PLAYER_FACE_ANIMATION_LEARN_SPELL = INVALID_ID,
PLAYER_FACE_ANIMATION_HELLO = INVALID_ID,
PLAYER_FACE_ANIMATION_HELLO_NIGHT = INVALID_ID,
PLAYER_FACE_ANIMATION_DAMAGED = INVALID_ID,
PLAYER_FACE_ANIMATION_WEAK = INVALID_ID,
PLAYER_FACE_ANIMATION_AFRAID = INVALID_ID,
PLAYER_FACE_ANIMATION_POISONED = INVALID_ID,
PLAYER_FACE_ANIMATION_DESEASED = INVALID_ID,
PLAYER_FACE_ANIMATION_INSANE = INVALID_ID,
PLAYER_FACE_ANIMATION_CURSED = INVALID_ID,
PLAYER_FACE_ANIMATION_DRUNK = INVALID_ID,
PLAYER_FACE_ANIMATION_UNCONSIOUS = INVALID_ID,
PLAYER_FACE_ANIMATION_DEATH = INVALID_ID,
PLAYER_FACE_ANIMATION_STONED = INVALID_ID,
PLAYER_FACE_ANIMATION_ERADICATED = INVALID_ID,
PLAYER_FACE_ANIMATION_DINK_POTION = INVALID_ID,
PLAYER_FACE_ANIMATION_READ_SCOLL = INVALID_ID,
PLAYER_FACE_ANIMATION_NOT_ENOUGH_GOLD = INVALID_ID,
PLAYER_FACE_ANIMATION_CANT_EQUIP = INVALID_ID,
PLAYER_FACE_ANIMATION_ITEM_BROKEN_STOLEN = INVALID_ID,
PLAYER_FACE_ANIMATION_SPDRAINED = INVALID_ID,
PLAYER_FACE_ANIMATION_AGED = INVALID_ID,
PLAYER_FACE_ANIMATION_SPELL_FAILED = INVALID_ID,
PLAYER_FACE_ANIMATION_DAMAGED_PARTY = INVALID_ID,
PLAYER_FACE_ANIMATION_TIRED = INVALID_ID,
PLAYER_FACE_ANIMATION_ENTER_DUNGEON = INVALID_ID,
PLAYER_FACE_ANIMATION_LEAVE_DUNGEON = INVALID_ID,
PLAYER_FACE_ANIMATION_ALMOST_DEAD = INVALID_ID,
PLAYER_FACE_ANIMATION_CAST_SPELL = INVALID_ID,
PLAYER_FACE_ANIMATION_SHOOT = INVALID_ID,
PLAYER_FACE_ANIMATION_ATTACK_HIT = INVALID_ID,
PLAYER_FACE_ANIMATION_ATTACK_MISS = INVALID_ID,
PLAYER_FACE_ANIMATION_BEG = INVALID_ID,
PLAYER_FACE_ANIMATION_BEG_FAIL = INVALID_ID,
PLAYER_FACE_ANIMATION_THREAT = INVALID_ID,
PLAYER_FACE_ANIMATION_THREAT_FAIL = INVALID_ID,
PLAYER_FACE_ANIMATION_BRIBE = INVALID_ID,
PLAYER_FACE_ANIMATION_BRIBE_FAIL = INVALID_ID,
PLAYER_FACE_ANIMATION_NPCDONT_TALK = INVALID_ID,
PLAYER_FACE_ANIMATION_FOUND_ITEM = INVALID_ID,
PLAYER_FACE_ANIMATION_HIRE_NPC = INVALID_ID,
PLAYER_FACE_ANIMATION_LOOK_UP = INVALID_ID,
PLAYER_FACE_ANIMATION_LOOK_DOWN = INVALID_ID,
PLAYER_FACE_ANIMATION_YELL = INVALID_ID,
PLAYER_FACE_ANIMATION_FALLING = INVALID_ID,
PLAYER_FACE_ANIMATION_TAVERN_PACKS_FULL = INVALID_ID,
PLAYER_FACE_ANIMATION_TAVERN_DRINK = INVALID_ID,
PLAYER_FACE_ANIMATION_TAVERN_GOT_DRUNK = INVALID_ID,
PLAYER_FACE_ANIMATION_TAVERN_TIP = INVALID_ID,
PLAYER_FACE_ANIMATION_TRAVEL_HORSE = INVALID_ID,
PLAYER_FACE_ANIMATION_TRAVEL_BOAT = INVALID_ID,
PLAYER_FACE_ANIMATION_SHOP_IDENTIFY = INVALID_ID,
PLAYER_FACE_ANIMATION_SHOP_REPAIR = INVALID_ID,
PLAYER_FACE_ANIMATION_SHOP_ITEM_BOUGHT = INVALID_ID,
PLAYER_FACE_ANIMATION_SHOP_ALREADY_IDENTIFIED = INVALID_ID,
PLAYER_FACE_ANIMATION_SHOP_ITEM_SOLD = INVALID_ID,
PLAYER_FACE_ANIMATION_SKILL_LEARNED = INVALID_ID,
PLAYER_FACE_ANIMATION_SHOP_WRONG_SHOP = INVALID_ID,
PLAYER_FACE_ANIMATION_SHOP_RUDE = INVALID_ID,
PLAYER_FACE_ANIMATION_BANK_DEPOSIT = INVALID_ID,
PLAYER_FACE_ANIMATION_TEMPLE_HEAL = INVALID_ID,
PLAYER_FACE_ANIMATION_TEMPLE_DONATE = INVALID_ID,
PLAYER_FACE_ANIMATION_HELLO_HOUSE = INVALID_ID,
PLAYER_FACE_ANIMATION_SKILL_MASTERY_ICREASED = INVALID_ID,
PLAYER_FACE_ANIMATION_JOINED_GUILD = INVALID_ID,
PLAYER_FACE_ANIMATION_LEVEL_UP = INVALID_ID,
PLAYER_FACE_ANIMATION_STAT_BONUS_INCREASED = INVALID_ID,
PLAYER_FACE_ANIMATION_STAT_BASE_INCREASED = INVALID_ID,
PLAYER_FACE_ANIMATION_QUEST_GOT = INVALID_ID,
PLAYER_FACE_ANIMATION_AWARD_GOT = INVALID_ID,
PLAYER_FACE_ANIMATION_AFRAID_SILENT = INVALID_ID,
PLAYER_FACE_ANIMATION_CHEATED_DEATH = INVALID_ID,
PLAYER_FACE_ANIMATION_IN_PRISON = INVALID_ID,
PLAYER_FACE_ANIMATION_CHOOSE_ME = INVALID_ID,
PLAYER_FACE_ANIMATION_AWAKEN = INVALID_ID,
PLAYER_FACE_ANIMATION_ID_MONSTER_WEAK = INVALID_ID,
PLAYER_FACE_ANIMATION_ID_MONSTER_BIG = INVALID_ID,
PLAYER_FACE_ANIMATION_ID_MONSTER_FAIL = INVALID_ID,
PLAYER_FACE_ANIMATION_LAST_MAN_STANDING = INVALID_ID,
PLAYER_FACE_ANIMATION_NOT_ENOUGH_FOOD = INVALID_ID,
PLAYER_FACE_ANIMATION_DEATH_BLOW = INVALID_ID;

std::vector<int64_t> ALL_FACE_ANIMATION;
std::map<int64_t, std::string> ENUM_TO_STRING_FACE_ANIMATION;

void makeEnumFaceAnimation_6()
{
    PLAYER_FACE_ANIMATION_KILL_SMALL_ENEMY = 1;
    PLAYER_FACE_ANIMATION_KILL_BIG_ENEMY = 2;
    PLAYER_FACE_ANIMATION_STORE_CLOSED = 3;
    PLAYER_FACE_ANIMATION_DISARM_TRAP = 4;
    PLAYER_FACE_ANIMATION_TRAP_EXPLOADED = 5;
    PLAYER_FACE_ANIMATION_AVOID_DAMAGE = 6;
    PLAYER_FACE_ANIMATION_IDENTIFY_USELESS = 7;
    PLAYER_FACE_ANIMATION_IDENTIFY_GREAT = 8;
    PLAYER_FACE_ANIMATION_IDENTIFY_FAIL = 9;
    PLAYER_FACE_ANIMATION_REPAIR_ITEM = 10;
    PLAYER_FACE_ANIMATION_REPAIR_FAIL = 11;
    PLAYER_FACE_ANIMATION_SET_QUICK_SPELL = 12;
    PLAYER_FACE_ANIMATION_CANT_REST_HERE = 13;
    PLAYER_FACE_ANIMATION_SKILL_INCREASED = 14;
    PLAYER_FACE_ANIMATION_CANT_CARRY = 15;
    PLAYER_FACE_ANIMATION_MIX_POTION = 16;
    PLAYER_FACE_ANIMATION_POTION_EXPLODE = 17;
    PLAYER_FACE_ANIMATION_DOOR_LOCKED = 18;
    PLAYER_FACE_ANIMATION_WONT_BUDGE = 19;
    PLAYER_FACE_ANIMATION_CANT_LEARN_SPELL = 20;
    PLAYER_FACE_ANIMATION_LEARN_SPELL = 21;
    PLAYER_FACE_ANIMATION_HELLO = 22;
    PLAYER_FACE_ANIMATION_HELLO_NIGHT = 23;
    PLAYER_FACE_ANIMATION_DAMAGED = 24;
    PLAYER_FACE_ANIMATION_WEAK = 25;
    PLAYER_FACE_ANIMATION_AFRAID = 26;
    PLAYER_FACE_ANIMATION_POISONED = 27;
    PLAYER_FACE_ANIMATION_DESEASED = 28;
    PLAYER_FACE_ANIMATION_INSANE = 29;
    PLAYER_FACE_ANIMATION_CURSED = 30;
    PLAYER_FACE_ANIMATION_DRUNK = 31;
    PLAYER_FACE_ANIMATION_UNCONSIOUS = 32;
    PLAYER_FACE_ANIMATION_DEATH = 33;
    PLAYER_FACE_ANIMATION_STONED = 34;
    PLAYER_FACE_ANIMATION_ERADICATED = 35;
    PLAYER_FACE_ANIMATION_DINK_POTION = 36;
    PLAYER_FACE_ANIMATION_READ_SCOLL = 37;
    PLAYER_FACE_ANIMATION_NOT_ENOUGH_GOLD = 38;
    PLAYER_FACE_ANIMATION_CANT_EQUIP = 39;
    PLAYER_FACE_ANIMATION_ITEM_BROKEN_STOLEN = 40;
    PLAYER_FACE_ANIMATION_SPDRAINED = 41;
    PLAYER_FACE_ANIMATION_AGED = 42;
    PLAYER_FACE_ANIMATION_SPELL_FAILED = 43;
    PLAYER_FACE_ANIMATION_DAMAGED_PARTY = 44;
    PLAYER_FACE_ANIMATION_TIRED = 45;
    PLAYER_FACE_ANIMATION_ENTER_DUNGEON = 46;
    PLAYER_FACE_ANIMATION_LEAVE_DUNGEON = 47;
    PLAYER_FACE_ANIMATION_ALMOST_DEAD = 48;
    PLAYER_FACE_ANIMATION_CAST_SPELL = 49;
    PLAYER_FACE_ANIMATION_SHOOT = 50;
    PLAYER_FACE_ANIMATION_ATTACK_HIT = 51;
    PLAYER_FACE_ANIMATION_ATTACK_MISS = 52;
    PLAYER_FACE_ANIMATION_BEG = 53;
    PLAYER_FACE_ANIMATION_BEG_FAIL = 54;
    PLAYER_FACE_ANIMATION_THREAT = 55;
    PLAYER_FACE_ANIMATION_THREAT_FAIL = 56;
    PLAYER_FACE_ANIMATION_BRIBE = 57;
    PLAYER_FACE_ANIMATION_BRIBE_FAIL = 58;
    PLAYER_FACE_ANIMATION_NPCDONT_TALK = 59;
    PLAYER_FACE_ANIMATION_FOUND_ITEM = 60;
    PLAYER_FACE_ANIMATION_HIRE_NPC = 61;
    PLAYER_FACE_ANIMATION_LOOK_UP = 63;
    PLAYER_FACE_ANIMATION_LOOK_DOWN = 64;
    PLAYER_FACE_ANIMATION_YELL = 65;
    PLAYER_FACE_ANIMATION_FALLING = 66;
    PLAYER_FACE_ANIMATION_TAVERN_PACKS_FULL = 67;
    PLAYER_FACE_ANIMATION_TAVERN_DRINK = 68;
    PLAYER_FACE_ANIMATION_TAVERN_GOT_DRUNK = 69;
    PLAYER_FACE_ANIMATION_TAVERN_TIP = 70;
    PLAYER_FACE_ANIMATION_TRAVEL_HORSE = 71;
    PLAYER_FACE_ANIMATION_TRAVEL_BOAT = 72;
    PLAYER_FACE_ANIMATION_SHOP_IDENTIFY = 73;
    PLAYER_FACE_ANIMATION_SHOP_REPAIR = 74;
    PLAYER_FACE_ANIMATION_SHOP_ITEM_BOUGHT = 75;
    PLAYER_FACE_ANIMATION_SHOP_ALREADY_IDENTIFIED = 76;
    PLAYER_FACE_ANIMATION_SHOP_ITEM_SOLD = 77;
    PLAYER_FACE_ANIMATION_SKILL_LEARNED = 78;
    PLAYER_FACE_ANIMATION_SHOP_WRONG_SHOP = 79;
    PLAYER_FACE_ANIMATION_SHOP_RUDE = 80;
    PLAYER_FACE_ANIMATION_BANK_DEPOSIT = 81;
    PLAYER_FACE_ANIMATION_TEMPLE_HEAL = 82;
    PLAYER_FACE_ANIMATION_TEMPLE_DONATE = 83;
    PLAYER_FACE_ANIMATION_HELLO_HOUSE = 84;
    PLAYER_FACE_ANIMATION_SKILL_MASTERY_ICREASED = 85;
    PLAYER_FACE_ANIMATION_JOINED_GUILD = 86;
    PLAYER_FACE_ANIMATION_LEVEL_UP = 87;
    PLAYER_FACE_ANIMATION_STAT_BONUS_INCREASED = 91;
    PLAYER_FACE_ANIMATION_STAT_BASE_INCREASED = 92;
    PLAYER_FACE_ANIMATION_QUEST_GOT = 93;
    PLAYER_FACE_ANIMATION_AWARD_GOT = 96;
    PLAYER_FACE_ANIMATION_AFRAID_SILENT = 98;
    PLAYER_FACE_ANIMATION_CHEATED_DEATH = 99;
    PLAYER_FACE_ANIMATION_IN_PRISON = 100;
    PLAYER_FACE_ANIMATION_CHOOSE_ME = 102;
    PLAYER_FACE_ANIMATION_AWAKEN = 103;
    PLAYER_FACE_ANIMATION_ID_MONSTER_WEAK = 104;
    PLAYER_FACE_ANIMATION_ID_MONSTER_BIG = 105;
    PLAYER_FACE_ANIMATION_ID_MONSTER_FAIL = 106;
    PLAYER_FACE_ANIMATION_LAST_MAN_STANDING = 107;
    PLAYER_FACE_ANIMATION_NOT_ENOUGH_FOOD = 108;
    PLAYER_FACE_ANIMATION_DEATH_BLOW = 109;

    ALL_FACE_ANIMATION = { PLAYER_FACE_ANIMATION_KILL_SMALL_ENEMY, PLAYER_FACE_ANIMATION_KILL_BIG_ENEMY, PLAYER_FACE_ANIMATION_STORE_CLOSED, PLAYER_FACE_ANIMATION_DISARM_TRAP, PLAYER_FACE_ANIMATION_TRAP_EXPLOADED, PLAYER_FACE_ANIMATION_AVOID_DAMAGE, PLAYER_FACE_ANIMATION_IDENTIFY_USELESS, PLAYER_FACE_ANIMATION_IDENTIFY_GREAT, PLAYER_FACE_ANIMATION_IDENTIFY_FAIL, PLAYER_FACE_ANIMATION_REPAIR_ITEM, PLAYER_FACE_ANIMATION_REPAIR_FAIL, PLAYER_FACE_ANIMATION_SET_QUICK_SPELL, PLAYER_FACE_ANIMATION_CANT_REST_HERE, PLAYER_FACE_ANIMATION_SKILL_INCREASED, PLAYER_FACE_ANIMATION_CANT_CARRY, PLAYER_FACE_ANIMATION_MIX_POTION, PLAYER_FACE_ANIMATION_POTION_EXPLODE, PLAYER_FACE_ANIMATION_DOOR_LOCKED, PLAYER_FACE_ANIMATION_WONT_BUDGE, PLAYER_FACE_ANIMATION_CANT_LEARN_SPELL, PLAYER_FACE_ANIMATION_LEARN_SPELL, PLAYER_FACE_ANIMATION_HELLO, PLAYER_FACE_ANIMATION_HELLO_NIGHT, PLAYER_FACE_ANIMATION_DAMAGED, PLAYER_FACE_ANIMATION_WEAK, PLAYER_FACE_ANIMATION_AFRAID, PLAYER_FACE_ANIMATION_POISONED, PLAYER_FACE_ANIMATION_DESEASED, PLAYER_FACE_ANIMATION_INSANE, PLAYER_FACE_ANIMATION_CURSED, PLAYER_FACE_ANIMATION_DRUNK, PLAYER_FACE_ANIMATION_UNCONSIOUS, PLAYER_FACE_ANIMATION_DEATH, PLAYER_FACE_ANIMATION_STONED, PLAYER_FACE_ANIMATION_ERADICATED, PLAYER_FACE_ANIMATION_DINK_POTION, PLAYER_FACE_ANIMATION_READ_SCOLL, PLAYER_FACE_ANIMATION_NOT_ENOUGH_GOLD, PLAYER_FACE_ANIMATION_CANT_EQUIP, PLAYER_FACE_ANIMATION_ITEM_BROKEN_STOLEN, PLAYER_FACE_ANIMATION_SPDRAINED, PLAYER_FACE_ANIMATION_AGED, PLAYER_FACE_ANIMATION_SPELL_FAILED, PLAYER_FACE_ANIMATION_DAMAGED_PARTY, PLAYER_FACE_ANIMATION_TIRED, PLAYER_FACE_ANIMATION_ENTER_DUNGEON, PLAYER_FACE_ANIMATION_LEAVE_DUNGEON, PLAYER_FACE_ANIMATION_ALMOST_DEAD, PLAYER_FACE_ANIMATION_CAST_SPELL, PLAYER_FACE_ANIMATION_SHOOT, PLAYER_FACE_ANIMATION_ATTACK_HIT, PLAYER_FACE_ANIMATION_ATTACK_MISS, PLAYER_FACE_ANIMATION_BEG, PLAYER_FACE_ANIMATION_BEG_FAIL, PLAYER_FACE_ANIMATION_THREAT, PLAYER_FACE_ANIMATION_THREAT_FAIL, PLAYER_FACE_ANIMATION_BRIBE, PLAYER_FACE_ANIMATION_BRIBE_FAIL, PLAYER_FACE_ANIMATION_NPCDONT_TALK, PLAYER_FACE_ANIMATION_FOUND_ITEM, PLAYER_FACE_ANIMATION_HIRE_NPC, PLAYER_FACE_ANIMATION_LOOK_UP, PLAYER_FACE_ANIMATION_LOOK_DOWN, PLAYER_FACE_ANIMATION_YELL, PLAYER_FACE_ANIMATION_FALLING, PLAYER_FACE_ANIMATION_TAVERN_PACKS_FULL, PLAYER_FACE_ANIMATION_TAVERN_DRINK, PLAYER_FACE_ANIMATION_TAVERN_GOT_DRUNK, PLAYER_FACE_ANIMATION_TAVERN_TIP, PLAYER_FACE_ANIMATION_TRAVEL_HORSE, PLAYER_FACE_ANIMATION_TRAVEL_BOAT, PLAYER_FACE_ANIMATION_SHOP_IDENTIFY, PLAYER_FACE_ANIMATION_SHOP_REPAIR, PLAYER_FACE_ANIMATION_SHOP_ITEM_BOUGHT, PLAYER_FACE_ANIMATION_SHOP_ALREADY_IDENTIFIED, PLAYER_FACE_ANIMATION_SHOP_ITEM_SOLD, PLAYER_FACE_ANIMATION_SKILL_LEARNED, PLAYER_FACE_ANIMATION_SHOP_WRONG_SHOP, PLAYER_FACE_ANIMATION_SHOP_RUDE, PLAYER_FACE_ANIMATION_BANK_DEPOSIT, PLAYER_FACE_ANIMATION_TEMPLE_HEAL, PLAYER_FACE_ANIMATION_TEMPLE_DONATE, PLAYER_FACE_ANIMATION_HELLO_HOUSE, PLAYER_FACE_ANIMATION_SKILL_MASTERY_ICREASED, PLAYER_FACE_ANIMATION_JOINED_GUILD, PLAYER_FACE_ANIMATION_LEVEL_UP, PLAYER_FACE_ANIMATION_STAT_BONUS_INCREASED, PLAYER_FACE_ANIMATION_STAT_BASE_INCREASED, PLAYER_FACE_ANIMATION_QUEST_GOT, PLAYER_FACE_ANIMATION_AWARD_GOT, PLAYER_FACE_ANIMATION_AFRAID_SILENT, PLAYER_FACE_ANIMATION_CHEATED_DEATH, PLAYER_FACE_ANIMATION_IN_PRISON, PLAYER_FACE_ANIMATION_CHOOSE_ME, PLAYER_FACE_ANIMATION_AWAKEN, PLAYER_FACE_ANIMATION_ID_MONSTER_WEAK, PLAYER_FACE_ANIMATION_ID_MONSTER_BIG, PLAYER_FACE_ANIMATION_ID_MONSTER_FAIL, PLAYER_FACE_ANIMATION_LAST_MAN_STANDING, PLAYER_FACE_ANIMATION_NOT_ENOUGH_FOOD, PLAYER_FACE_ANIMATION_DEATH_BLOW };

    ENUM_TO_STRING_FACE_ANIMATION = { {PLAYER_FACE_ANIMATION_KILL_SMALL_ENEMY, "KillSmallEnemy"}, {PLAYER_FACE_ANIMATION_KILL_BIG_ENEMY, "KillBigEnemy"}, {PLAYER_FACE_ANIMATION_STORE_CLOSED, "StoreClosed"}, {PLAYER_FACE_ANIMATION_DISARM_TRAP, "DisarmTrap"}, {PLAYER_FACE_ANIMATION_TRAP_EXPLOADED, "TrapExploaded"}, {PLAYER_FACE_ANIMATION_AVOID_DAMAGE, "AvoidDamage"}, {PLAYER_FACE_ANIMATION_IDENTIFY_USELESS, "IdentifyUseless"}, {PLAYER_FACE_ANIMATION_IDENTIFY_GREAT, "IdentifyGreat"}, {PLAYER_FACE_ANIMATION_IDENTIFY_FAIL, "IdentifyFail"}, {PLAYER_FACE_ANIMATION_REPAIR_ITEM, "RepairItem"}, {PLAYER_FACE_ANIMATION_REPAIR_FAIL, "RepairFail"}, {PLAYER_FACE_ANIMATION_SET_QUICK_SPELL, "SetQuickSpell"}, {PLAYER_FACE_ANIMATION_CANT_REST_HERE, "CantRestHere"}, {PLAYER_FACE_ANIMATION_SKILL_INCREASED, "SkillIncreased"}, {PLAYER_FACE_ANIMATION_CANT_CARRY, "CantCarry"}, {PLAYER_FACE_ANIMATION_MIX_POTION, "MixPotion"}, {PLAYER_FACE_ANIMATION_POTION_EXPLODE, "PotionExplode"}, {PLAYER_FACE_ANIMATION_DOOR_LOCKED, "DoorLocked"}, {PLAYER_FACE_ANIMATION_WONT_BUDGE, "WontBudge"}, {PLAYER_FACE_ANIMATION_CANT_LEARN_SPELL, "CantLearnSpell"}, {PLAYER_FACE_ANIMATION_LEARN_SPELL, "LearnSpell"}, {PLAYER_FACE_ANIMATION_HELLO, "Hello"}, {PLAYER_FACE_ANIMATION_HELLO_NIGHT, "HelloNight"}, {PLAYER_FACE_ANIMATION_DAMAGED, "Damaged"}, {PLAYER_FACE_ANIMATION_WEAK, "Weak"}, {PLAYER_FACE_ANIMATION_AFRAID, "Afraid"}, {PLAYER_FACE_ANIMATION_POISONED, "Poisoned"}, {PLAYER_FACE_ANIMATION_DESEASED, "Deseased"}, {PLAYER_FACE_ANIMATION_INSANE, "Insane"}, {PLAYER_FACE_ANIMATION_CURSED, "Cursed"}, {PLAYER_FACE_ANIMATION_DRUNK, "Drunk"}, {PLAYER_FACE_ANIMATION_UNCONSIOUS, "Unconsious"}, {PLAYER_FACE_ANIMATION_DEATH, "Death"}, {PLAYER_FACE_ANIMATION_STONED, "Stoned"}, {PLAYER_FACE_ANIMATION_ERADICATED, "Eradicated"}, {PLAYER_FACE_ANIMATION_DINK_POTION, "DinkPotion"}, {PLAYER_FACE_ANIMATION_READ_SCOLL, "ReadScoll"}, {PLAYER_FACE_ANIMATION_NOT_ENOUGH_GOLD, "NotEnoughGold"}, {PLAYER_FACE_ANIMATION_CANT_EQUIP, "CantEquip"}, {PLAYER_FACE_ANIMATION_ITEM_BROKEN_STOLEN, "ItemBrokenStolen"}, {PLAYER_FACE_ANIMATION_SPDRAINED, "SPDrained"}, {PLAYER_FACE_ANIMATION_AGED, "Aged"}, {PLAYER_FACE_ANIMATION_SPELL_FAILED, "SpellFailed"}, {PLAYER_FACE_ANIMATION_DAMAGED_PARTY, "DamagedParty"}, {PLAYER_FACE_ANIMATION_TIRED, "Tired"}, {PLAYER_FACE_ANIMATION_ENTER_DUNGEON, "EnterDungeon"}, {PLAYER_FACE_ANIMATION_LEAVE_DUNGEON, "LeaveDungeon"}, {PLAYER_FACE_ANIMATION_ALMOST_DEAD, "AlmostDead"}, {PLAYER_FACE_ANIMATION_CAST_SPELL, "CastSpell"}, {PLAYER_FACE_ANIMATION_SHOOT, "Shoot"}, {PLAYER_FACE_ANIMATION_ATTACK_HIT, "AttackHit"}, {PLAYER_FACE_ANIMATION_ATTACK_MISS, "AttackMiss"}, {PLAYER_FACE_ANIMATION_BEG, "Beg"}, {PLAYER_FACE_ANIMATION_BEG_FAIL, "BegFail"}, {PLAYER_FACE_ANIMATION_THREAT, "Threat"}, {PLAYER_FACE_ANIMATION_THREAT_FAIL, "ThreatFail"}, {PLAYER_FACE_ANIMATION_BRIBE, "Bribe"}, {PLAYER_FACE_ANIMATION_BRIBE_FAIL, "BribeFail"}, {PLAYER_FACE_ANIMATION_NPCDONT_TALK, "NPCDontTalk"}, {PLAYER_FACE_ANIMATION_FOUND_ITEM, "FoundItem"}, {PLAYER_FACE_ANIMATION_HIRE_NPC, "HireNPC"}, {PLAYER_FACE_ANIMATION_LOOK_UP, "LookUp"}, {PLAYER_FACE_ANIMATION_LOOK_DOWN, "LookDown"}, {PLAYER_FACE_ANIMATION_YELL, "Yell"}, {PLAYER_FACE_ANIMATION_FALLING, "Falling"}, {PLAYER_FACE_ANIMATION_TAVERN_PACKS_FULL, "TavernPacksFull"}, {PLAYER_FACE_ANIMATION_TAVERN_DRINK, "TavernDrink"}, {PLAYER_FACE_ANIMATION_TAVERN_GOT_DRUNK, "TavernGotDrunk"}, {PLAYER_FACE_ANIMATION_TAVERN_TIP, "TavernTip"}, {PLAYER_FACE_ANIMATION_TRAVEL_HORSE, "TravelHorse"}, {PLAYER_FACE_ANIMATION_TRAVEL_BOAT, "TravelBoat"}, {PLAYER_FACE_ANIMATION_SHOP_IDENTIFY, "ShopIdentify"}, {PLAYER_FACE_ANIMATION_SHOP_REPAIR, "ShopRepair"}, {PLAYER_FACE_ANIMATION_SHOP_ITEM_BOUGHT, "ShopItemBought"}, {PLAYER_FACE_ANIMATION_SHOP_ALREADY_IDENTIFIED, "ShopAlreadyIdentified"}, {PLAYER_FACE_ANIMATION_SHOP_ITEM_SOLD, "ShopItemSold"}, {PLAYER_FACE_ANIMATION_SKILL_LEARNED, "SkillLearned"}, {PLAYER_FACE_ANIMATION_SHOP_WRONG_SHOP, "ShopWrongShop"}, {PLAYER_FACE_ANIMATION_SHOP_RUDE, "ShopRude"}, {PLAYER_FACE_ANIMATION_BANK_DEPOSIT, "BankDeposit"}, {PLAYER_FACE_ANIMATION_TEMPLE_HEAL, "TempleHeal"}, {PLAYER_FACE_ANIMATION_TEMPLE_DONATE, "TempleDonate"}, {PLAYER_FACE_ANIMATION_HELLO_HOUSE, "HelloHouse"}, {PLAYER_FACE_ANIMATION_SKILL_MASTERY_ICREASED, "SkillMasteryIcreased"}, {PLAYER_FACE_ANIMATION_JOINED_GUILD, "JoinedGuild"}, {PLAYER_FACE_ANIMATION_LEVEL_UP, "LevelUp"}, {PLAYER_FACE_ANIMATION_STAT_BONUS_INCREASED, "StatBonusIncreased"}, {PLAYER_FACE_ANIMATION_STAT_BASE_INCREASED, "StatBaseIncreased"}, {PLAYER_FACE_ANIMATION_QUEST_GOT, "QuestGot"}, {PLAYER_FACE_ANIMATION_AWARD_GOT, "AwardGot"}, {PLAYER_FACE_ANIMATION_AFRAID_SILENT, "AfraidSilent"}, {PLAYER_FACE_ANIMATION_CHEATED_DEATH, "CheatedDeath"}, {PLAYER_FACE_ANIMATION_IN_PRISON, "InPrison"}, {PLAYER_FACE_ANIMATION_CHOOSE_ME, "ChooseMe"}, {PLAYER_FACE_ANIMATION_AWAKEN, "Awaken"}, {PLAYER_FACE_ANIMATION_ID_MONSTER_WEAK, "IdMonsterWeak"}, {PLAYER_FACE_ANIMATION_ID_MONSTER_BIG, "IdMonsterBig"}, {PLAYER_FACE_ANIMATION_ID_MONSTER_FAIL, "IdMonsterFail"}, {PLAYER_FACE_ANIMATION_LAST_MAN_STANDING, "LastManStanding"}, {PLAYER_FACE_ANIMATION_NOT_ENOUGH_FOOD, "NotEnoughFood"}, {PLAYER_FACE_ANIMATION_DEATH_BLOW, "DeathBlow"} };
}

void makeEnumFaceAnimation_7()
{
    PLAYER_FACE_ANIMATION_KILL_SMALL_ENEMY = 1;
    PLAYER_FACE_ANIMATION_KILL_BIG_ENEMY = 2;
    PLAYER_FACE_ANIMATION_STORE_CLOSED = 3;
    PLAYER_FACE_ANIMATION_DISARM_TRAP = 4;
    PLAYER_FACE_ANIMATION_TRAP_EXPLOADED = 5;
    PLAYER_FACE_ANIMATION_AVOID_DAMAGE = 6;
    PLAYER_FACE_ANIMATION_IDENTIFY_USELESS = 7;
    PLAYER_FACE_ANIMATION_IDENTIFY_GREAT = 8;
    PLAYER_FACE_ANIMATION_IDENTIFY_FAIL = 9;
    PLAYER_FACE_ANIMATION_REPAIR_ITEM = 10;
    PLAYER_FACE_ANIMATION_REPAIR_FAIL = 11;
    PLAYER_FACE_ANIMATION_SET_QUICK_SPELL = 12;
    PLAYER_FACE_ANIMATION_CANT_REST_HERE = 13;
    PLAYER_FACE_ANIMATION_SKILL_INCREASED = 14;
    PLAYER_FACE_ANIMATION_CANT_CARRY = 15;
    PLAYER_FACE_ANIMATION_MIX_POTION = 16;
    PLAYER_FACE_ANIMATION_POTION_EXPLODE = 17;
    PLAYER_FACE_ANIMATION_DOOR_LOCKED = 18;
    PLAYER_FACE_ANIMATION_WONT_BUDGE = 19;
    PLAYER_FACE_ANIMATION_CANT_LEARN_SPELL = 20;
    PLAYER_FACE_ANIMATION_LEARN_SPELL = 21;
    PLAYER_FACE_ANIMATION_HELLO = 22;
    PLAYER_FACE_ANIMATION_HELLO_NIGHT = 23;
    PLAYER_FACE_ANIMATION_DAMAGED = 24;
    PLAYER_FACE_ANIMATION_WEAK = 25;
    PLAYER_FACE_ANIMATION_AFRAID = 26;
    PLAYER_FACE_ANIMATION_POISONED = 27;
    PLAYER_FACE_ANIMATION_DESEASED = 28;
    PLAYER_FACE_ANIMATION_INSANE = 29;
    PLAYER_FACE_ANIMATION_CURSED = 30;
    PLAYER_FACE_ANIMATION_DRUNK = 31;
    PLAYER_FACE_ANIMATION_UNCONSIOUS = 32;
    PLAYER_FACE_ANIMATION_DEATH = 33;
    PLAYER_FACE_ANIMATION_STONED = 34;
    PLAYER_FACE_ANIMATION_ERADICATED = 35;
    PLAYER_FACE_ANIMATION_DINK_POTION = 36;
    PLAYER_FACE_ANIMATION_READ_SCOLL = 37;
    PLAYER_FACE_ANIMATION_NOT_ENOUGH_GOLD = 38;
    PLAYER_FACE_ANIMATION_CANT_EQUIP = 39;
    PLAYER_FACE_ANIMATION_ITEM_BROKEN_STOLEN = 40;
    PLAYER_FACE_ANIMATION_SPDRAINED = 41;
    PLAYER_FACE_ANIMATION_AGED = 42;
    PLAYER_FACE_ANIMATION_SPELL_FAILED = 43;
    PLAYER_FACE_ANIMATION_DAMAGED_PARTY = 44;
    PLAYER_FACE_ANIMATION_TIRED = 45;
    PLAYER_FACE_ANIMATION_ENTER_DUNGEON = 46;
    PLAYER_FACE_ANIMATION_LEAVE_DUNGEON = 47;
    PLAYER_FACE_ANIMATION_ALMOST_DEAD = 48;
    PLAYER_FACE_ANIMATION_CAST_SPELL = 49;
    PLAYER_FACE_ANIMATION_SHOOT = 50;
    PLAYER_FACE_ANIMATION_ATTACK_HIT = 51;
    PLAYER_FACE_ANIMATION_ATTACK_MISS = 52;
    PLAYER_FACE_ANIMATION_BEG = 53;
    PLAYER_FACE_ANIMATION_BEG_FAIL = 54;
    PLAYER_FACE_ANIMATION_THREAT = 55;
    PLAYER_FACE_ANIMATION_THREAT_FAIL = 56;
    PLAYER_FACE_ANIMATION_BRIBE = 57;
    PLAYER_FACE_ANIMATION_BRIBE_FAIL = 58;
    PLAYER_FACE_ANIMATION_NPCDONT_TALK = 59;
    PLAYER_FACE_ANIMATION_FOUND_ITEM = 60;
    PLAYER_FACE_ANIMATION_HIRE_NPC = 61;
    PLAYER_FACE_ANIMATION_LOOK_UP = 63;
    PLAYER_FACE_ANIMATION_LOOK_DOWN = 64;
    PLAYER_FACE_ANIMATION_YELL = 65;
    PLAYER_FACE_ANIMATION_FALLING = 66;
    PLAYER_FACE_ANIMATION_TAVERN_PACKS_FULL = 67;
    PLAYER_FACE_ANIMATION_TAVERN_DRINK = 68;
    PLAYER_FACE_ANIMATION_TAVERN_GOT_DRUNK = 69;
    PLAYER_FACE_ANIMATION_TAVERN_TIP = 70;
    PLAYER_FACE_ANIMATION_TRAVEL_HORSE = 71;
    PLAYER_FACE_ANIMATION_TRAVEL_BOAT = 72;
    PLAYER_FACE_ANIMATION_SHOP_IDENTIFY = 73;
    PLAYER_FACE_ANIMATION_SHOP_REPAIR = 74;
    PLAYER_FACE_ANIMATION_SHOP_ITEM_BOUGHT = 75;
    PLAYER_FACE_ANIMATION_SHOP_ALREADY_IDENTIFIED = 76;
    PLAYER_FACE_ANIMATION_SHOP_ITEM_SOLD = 77;
    PLAYER_FACE_ANIMATION_SKILL_LEARNED = 78;
    PLAYER_FACE_ANIMATION_SHOP_WRONG_SHOP = 79;
    PLAYER_FACE_ANIMATION_SHOP_RUDE = 80;
    PLAYER_FACE_ANIMATION_BANK_DEPOSIT = 81;
    PLAYER_FACE_ANIMATION_TEMPLE_HEAL = 82;
    PLAYER_FACE_ANIMATION_TEMPLE_DONATE = 83;
    PLAYER_FACE_ANIMATION_HELLO_HOUSE = 84;
    PLAYER_FACE_ANIMATION_SKILL_MASTERY_ICREASED = 85;
    PLAYER_FACE_ANIMATION_JOINED_GUILD = 86;
    PLAYER_FACE_ANIMATION_LEVEL_UP = 87;
    PLAYER_FACE_ANIMATION_STAT_BONUS_INCREASED = 91;
    PLAYER_FACE_ANIMATION_STAT_BASE_INCREASED = 92;
    PLAYER_FACE_ANIMATION_QUEST_GOT = 93;
    PLAYER_FACE_ANIMATION_AWARD_GOT = 96;
    PLAYER_FACE_ANIMATION_AFRAID_SILENT = 98;
    PLAYER_FACE_ANIMATION_CHEATED_DEATH = 99;
    PLAYER_FACE_ANIMATION_IN_PRISON = 100;
    PLAYER_FACE_ANIMATION_CHOOSE_ME = 102;
    PLAYER_FACE_ANIMATION_AWAKEN = 103;
    PLAYER_FACE_ANIMATION_ID_MONSTER_WEAK = 104;
    PLAYER_FACE_ANIMATION_ID_MONSTER_BIG = 105;
    PLAYER_FACE_ANIMATION_ID_MONSTER_FAIL = 106;
    PLAYER_FACE_ANIMATION_LAST_MAN_STANDING = 107;
    PLAYER_FACE_ANIMATION_NOT_ENOUGH_FOOD = 108;
    PLAYER_FACE_ANIMATION_DEATH_BLOW = 109;

    ALL_FACE_ANIMATION = { PLAYER_FACE_ANIMATION_KILL_SMALL_ENEMY, PLAYER_FACE_ANIMATION_KILL_BIG_ENEMY, PLAYER_FACE_ANIMATION_STORE_CLOSED, PLAYER_FACE_ANIMATION_DISARM_TRAP, PLAYER_FACE_ANIMATION_TRAP_EXPLOADED, PLAYER_FACE_ANIMATION_AVOID_DAMAGE, PLAYER_FACE_ANIMATION_IDENTIFY_USELESS, PLAYER_FACE_ANIMATION_IDENTIFY_GREAT, PLAYER_FACE_ANIMATION_IDENTIFY_FAIL, PLAYER_FACE_ANIMATION_REPAIR_ITEM, PLAYER_FACE_ANIMATION_REPAIR_FAIL, PLAYER_FACE_ANIMATION_SET_QUICK_SPELL, PLAYER_FACE_ANIMATION_CANT_REST_HERE, PLAYER_FACE_ANIMATION_SKILL_INCREASED, PLAYER_FACE_ANIMATION_CANT_CARRY, PLAYER_FACE_ANIMATION_MIX_POTION, PLAYER_FACE_ANIMATION_POTION_EXPLODE, PLAYER_FACE_ANIMATION_DOOR_LOCKED, PLAYER_FACE_ANIMATION_WONT_BUDGE, PLAYER_FACE_ANIMATION_CANT_LEARN_SPELL, PLAYER_FACE_ANIMATION_LEARN_SPELL, PLAYER_FACE_ANIMATION_HELLO, PLAYER_FACE_ANIMATION_HELLO_NIGHT, PLAYER_FACE_ANIMATION_DAMAGED, PLAYER_FACE_ANIMATION_WEAK, PLAYER_FACE_ANIMATION_AFRAID, PLAYER_FACE_ANIMATION_POISONED, PLAYER_FACE_ANIMATION_DESEASED, PLAYER_FACE_ANIMATION_INSANE, PLAYER_FACE_ANIMATION_CURSED, PLAYER_FACE_ANIMATION_DRUNK, PLAYER_FACE_ANIMATION_UNCONSIOUS, PLAYER_FACE_ANIMATION_DEATH, PLAYER_FACE_ANIMATION_STONED, PLAYER_FACE_ANIMATION_ERADICATED, PLAYER_FACE_ANIMATION_DINK_POTION, PLAYER_FACE_ANIMATION_READ_SCOLL, PLAYER_FACE_ANIMATION_NOT_ENOUGH_GOLD, PLAYER_FACE_ANIMATION_CANT_EQUIP, PLAYER_FACE_ANIMATION_ITEM_BROKEN_STOLEN, PLAYER_FACE_ANIMATION_SPDRAINED, PLAYER_FACE_ANIMATION_AGED, PLAYER_FACE_ANIMATION_SPELL_FAILED, PLAYER_FACE_ANIMATION_DAMAGED_PARTY, PLAYER_FACE_ANIMATION_TIRED, PLAYER_FACE_ANIMATION_ENTER_DUNGEON, PLAYER_FACE_ANIMATION_LEAVE_DUNGEON, PLAYER_FACE_ANIMATION_ALMOST_DEAD, PLAYER_FACE_ANIMATION_CAST_SPELL, PLAYER_FACE_ANIMATION_SHOOT, PLAYER_FACE_ANIMATION_ATTACK_HIT, PLAYER_FACE_ANIMATION_ATTACK_MISS, PLAYER_FACE_ANIMATION_BEG, PLAYER_FACE_ANIMATION_BEG_FAIL, PLAYER_FACE_ANIMATION_THREAT, PLAYER_FACE_ANIMATION_THREAT_FAIL, PLAYER_FACE_ANIMATION_BRIBE, PLAYER_FACE_ANIMATION_BRIBE_FAIL, PLAYER_FACE_ANIMATION_NPCDONT_TALK, PLAYER_FACE_ANIMATION_FOUND_ITEM, PLAYER_FACE_ANIMATION_HIRE_NPC, PLAYER_FACE_ANIMATION_LOOK_UP, PLAYER_FACE_ANIMATION_LOOK_DOWN, PLAYER_FACE_ANIMATION_YELL, PLAYER_FACE_ANIMATION_FALLING, PLAYER_FACE_ANIMATION_TAVERN_PACKS_FULL, PLAYER_FACE_ANIMATION_TAVERN_DRINK, PLAYER_FACE_ANIMATION_TAVERN_GOT_DRUNK, PLAYER_FACE_ANIMATION_TAVERN_TIP, PLAYER_FACE_ANIMATION_TRAVEL_HORSE, PLAYER_FACE_ANIMATION_TRAVEL_BOAT, PLAYER_FACE_ANIMATION_SHOP_IDENTIFY, PLAYER_FACE_ANIMATION_SHOP_REPAIR, PLAYER_FACE_ANIMATION_SHOP_ITEM_BOUGHT, PLAYER_FACE_ANIMATION_SHOP_ALREADY_IDENTIFIED, PLAYER_FACE_ANIMATION_SHOP_ITEM_SOLD, PLAYER_FACE_ANIMATION_SKILL_LEARNED, PLAYER_FACE_ANIMATION_SHOP_WRONG_SHOP, PLAYER_FACE_ANIMATION_SHOP_RUDE, PLAYER_FACE_ANIMATION_BANK_DEPOSIT, PLAYER_FACE_ANIMATION_TEMPLE_HEAL, PLAYER_FACE_ANIMATION_TEMPLE_DONATE, PLAYER_FACE_ANIMATION_HELLO_HOUSE, PLAYER_FACE_ANIMATION_SKILL_MASTERY_ICREASED, PLAYER_FACE_ANIMATION_JOINED_GUILD, PLAYER_FACE_ANIMATION_LEVEL_UP, PLAYER_FACE_ANIMATION_STAT_BONUS_INCREASED, PLAYER_FACE_ANIMATION_STAT_BASE_INCREASED, PLAYER_FACE_ANIMATION_QUEST_GOT, PLAYER_FACE_ANIMATION_AWARD_GOT, PLAYER_FACE_ANIMATION_AFRAID_SILENT, PLAYER_FACE_ANIMATION_CHEATED_DEATH, PLAYER_FACE_ANIMATION_IN_PRISON, PLAYER_FACE_ANIMATION_CHOOSE_ME, PLAYER_FACE_ANIMATION_AWAKEN, PLAYER_FACE_ANIMATION_ID_MONSTER_WEAK, PLAYER_FACE_ANIMATION_ID_MONSTER_BIG, PLAYER_FACE_ANIMATION_ID_MONSTER_FAIL, PLAYER_FACE_ANIMATION_LAST_MAN_STANDING, PLAYER_FACE_ANIMATION_NOT_ENOUGH_FOOD, PLAYER_FACE_ANIMATION_DEATH_BLOW };

    ENUM_TO_STRING_FACE_ANIMATION = { {PLAYER_FACE_ANIMATION_KILL_SMALL_ENEMY, "KillSmallEnemy"}, {PLAYER_FACE_ANIMATION_KILL_BIG_ENEMY, "KillBigEnemy"}, {PLAYER_FACE_ANIMATION_STORE_CLOSED, "StoreClosed"}, {PLAYER_FACE_ANIMATION_DISARM_TRAP, "DisarmTrap"}, {PLAYER_FACE_ANIMATION_TRAP_EXPLOADED, "TrapExploaded"}, {PLAYER_FACE_ANIMATION_AVOID_DAMAGE, "AvoidDamage"}, {PLAYER_FACE_ANIMATION_IDENTIFY_USELESS, "IdentifyUseless"}, {PLAYER_FACE_ANIMATION_IDENTIFY_GREAT, "IdentifyGreat"}, {PLAYER_FACE_ANIMATION_IDENTIFY_FAIL, "IdentifyFail"}, {PLAYER_FACE_ANIMATION_REPAIR_ITEM, "RepairItem"}, {PLAYER_FACE_ANIMATION_REPAIR_FAIL, "RepairFail"}, {PLAYER_FACE_ANIMATION_SET_QUICK_SPELL, "SetQuickSpell"}, {PLAYER_FACE_ANIMATION_CANT_REST_HERE, "CantRestHere"}, {PLAYER_FACE_ANIMATION_SKILL_INCREASED, "SkillIncreased"}, {PLAYER_FACE_ANIMATION_CANT_CARRY, "CantCarry"}, {PLAYER_FACE_ANIMATION_MIX_POTION, "MixPotion"}, {PLAYER_FACE_ANIMATION_POTION_EXPLODE, "PotionExplode"}, {PLAYER_FACE_ANIMATION_DOOR_LOCKED, "DoorLocked"}, {PLAYER_FACE_ANIMATION_WONT_BUDGE, "WontBudge"}, {PLAYER_FACE_ANIMATION_CANT_LEARN_SPELL, "CantLearnSpell"}, {PLAYER_FACE_ANIMATION_LEARN_SPELL, "LearnSpell"}, {PLAYER_FACE_ANIMATION_HELLO, "Hello"}, {PLAYER_FACE_ANIMATION_HELLO_NIGHT, "HelloNight"}, {PLAYER_FACE_ANIMATION_DAMAGED, "Damaged"}, {PLAYER_FACE_ANIMATION_WEAK, "Weak"}, {PLAYER_FACE_ANIMATION_AFRAID, "Afraid"}, {PLAYER_FACE_ANIMATION_POISONED, "Poisoned"}, {PLAYER_FACE_ANIMATION_DESEASED, "Deseased"}, {PLAYER_FACE_ANIMATION_INSANE, "Insane"}, {PLAYER_FACE_ANIMATION_CURSED, "Cursed"}, {PLAYER_FACE_ANIMATION_DRUNK, "Drunk"}, {PLAYER_FACE_ANIMATION_UNCONSIOUS, "Unconsious"}, {PLAYER_FACE_ANIMATION_DEATH, "Death"}, {PLAYER_FACE_ANIMATION_STONED, "Stoned"}, {PLAYER_FACE_ANIMATION_ERADICATED, "Eradicated"}, {PLAYER_FACE_ANIMATION_DINK_POTION, "DinkPotion"}, {PLAYER_FACE_ANIMATION_READ_SCOLL, "ReadScoll"}, {PLAYER_FACE_ANIMATION_NOT_ENOUGH_GOLD, "NotEnoughGold"}, {PLAYER_FACE_ANIMATION_CANT_EQUIP, "CantEquip"}, {PLAYER_FACE_ANIMATION_ITEM_BROKEN_STOLEN, "ItemBrokenStolen"}, {PLAYER_FACE_ANIMATION_SPDRAINED, "SPDrained"}, {PLAYER_FACE_ANIMATION_AGED, "Aged"}, {PLAYER_FACE_ANIMATION_SPELL_FAILED, "SpellFailed"}, {PLAYER_FACE_ANIMATION_DAMAGED_PARTY, "DamagedParty"}, {PLAYER_FACE_ANIMATION_TIRED, "Tired"}, {PLAYER_FACE_ANIMATION_ENTER_DUNGEON, "EnterDungeon"}, {PLAYER_FACE_ANIMATION_LEAVE_DUNGEON, "LeaveDungeon"}, {PLAYER_FACE_ANIMATION_ALMOST_DEAD, "AlmostDead"}, {PLAYER_FACE_ANIMATION_CAST_SPELL, "CastSpell"}, {PLAYER_FACE_ANIMATION_SHOOT, "Shoot"}, {PLAYER_FACE_ANIMATION_ATTACK_HIT, "AttackHit"}, {PLAYER_FACE_ANIMATION_ATTACK_MISS, "AttackMiss"}, {PLAYER_FACE_ANIMATION_BEG, "Beg"}, {PLAYER_FACE_ANIMATION_BEG_FAIL, "BegFail"}, {PLAYER_FACE_ANIMATION_THREAT, "Threat"}, {PLAYER_FACE_ANIMATION_THREAT_FAIL, "ThreatFail"}, {PLAYER_FACE_ANIMATION_BRIBE, "Bribe"}, {PLAYER_FACE_ANIMATION_BRIBE_FAIL, "BribeFail"}, {PLAYER_FACE_ANIMATION_NPCDONT_TALK, "NPCDontTalk"}, {PLAYER_FACE_ANIMATION_FOUND_ITEM, "FoundItem"}, {PLAYER_FACE_ANIMATION_HIRE_NPC, "HireNPC"}, {PLAYER_FACE_ANIMATION_LOOK_UP, "LookUp"}, {PLAYER_FACE_ANIMATION_LOOK_DOWN, "LookDown"}, {PLAYER_FACE_ANIMATION_YELL, "Yell"}, {PLAYER_FACE_ANIMATION_FALLING, "Falling"}, {PLAYER_FACE_ANIMATION_TAVERN_PACKS_FULL, "TavernPacksFull"}, {PLAYER_FACE_ANIMATION_TAVERN_DRINK, "TavernDrink"}, {PLAYER_FACE_ANIMATION_TAVERN_GOT_DRUNK, "TavernGotDrunk"}, {PLAYER_FACE_ANIMATION_TAVERN_TIP, "TavernTip"}, {PLAYER_FACE_ANIMATION_TRAVEL_HORSE, "TravelHorse"}, {PLAYER_FACE_ANIMATION_TRAVEL_BOAT, "TravelBoat"}, {PLAYER_FACE_ANIMATION_SHOP_IDENTIFY, "ShopIdentify"}, {PLAYER_FACE_ANIMATION_SHOP_REPAIR, "ShopRepair"}, {PLAYER_FACE_ANIMATION_SHOP_ITEM_BOUGHT, "ShopItemBought"}, {PLAYER_FACE_ANIMATION_SHOP_ALREADY_IDENTIFIED, "ShopAlreadyIdentified"}, {PLAYER_FACE_ANIMATION_SHOP_ITEM_SOLD, "ShopItemSold"}, {PLAYER_FACE_ANIMATION_SKILL_LEARNED, "SkillLearned"}, {PLAYER_FACE_ANIMATION_SHOP_WRONG_SHOP, "ShopWrongShop"}, {PLAYER_FACE_ANIMATION_SHOP_RUDE, "ShopRude"}, {PLAYER_FACE_ANIMATION_BANK_DEPOSIT, "BankDeposit"}, {PLAYER_FACE_ANIMATION_TEMPLE_HEAL, "TempleHeal"}, {PLAYER_FACE_ANIMATION_TEMPLE_DONATE, "TempleDonate"}, {PLAYER_FACE_ANIMATION_HELLO_HOUSE, "HelloHouse"}, {PLAYER_FACE_ANIMATION_SKILL_MASTERY_ICREASED, "SkillMasteryIcreased"}, {PLAYER_FACE_ANIMATION_JOINED_GUILD, "JoinedGuild"}, {PLAYER_FACE_ANIMATION_LEVEL_UP, "LevelUp"}, {PLAYER_FACE_ANIMATION_STAT_BONUS_INCREASED, "StatBonusIncreased"}, {PLAYER_FACE_ANIMATION_STAT_BASE_INCREASED, "StatBaseIncreased"}, {PLAYER_FACE_ANIMATION_QUEST_GOT, "QuestGot"}, {PLAYER_FACE_ANIMATION_AWARD_GOT, "AwardGot"}, {PLAYER_FACE_ANIMATION_AFRAID_SILENT, "AfraidSilent"}, {PLAYER_FACE_ANIMATION_CHEATED_DEATH, "CheatedDeath"}, {PLAYER_FACE_ANIMATION_IN_PRISON, "InPrison"}, {PLAYER_FACE_ANIMATION_CHOOSE_ME, "ChooseMe"}, {PLAYER_FACE_ANIMATION_AWAKEN, "Awaken"}, {PLAYER_FACE_ANIMATION_ID_MONSTER_WEAK, "IdMonsterWeak"}, {PLAYER_FACE_ANIMATION_ID_MONSTER_BIG, "IdMonsterBig"}, {PLAYER_FACE_ANIMATION_ID_MONSTER_FAIL, "IdMonsterFail"}, {PLAYER_FACE_ANIMATION_LAST_MAN_STANDING, "LastManStanding"}, {PLAYER_FACE_ANIMATION_NOT_ENOUGH_FOOD, "NotEnoughFood"}, {PLAYER_FACE_ANIMATION_DEATH_BLOW, "DeathBlow"} };
}

void makeEnumFaceAnimation_8()
{
    PLAYER_FACE_ANIMATION_KILL_SMALL_ENEMY = 1;
    PLAYER_FACE_ANIMATION_KILL_BIG_ENEMY = 2;
    PLAYER_FACE_ANIMATION_STORE_CLOSED = 3;
    PLAYER_FACE_ANIMATION_DISARM_TRAP = 4;
    PLAYER_FACE_ANIMATION_TRAP_EXPLOADED = 5;
    PLAYER_FACE_ANIMATION_AVOID_DAMAGE = 6;
    PLAYER_FACE_ANIMATION_IDENTIFY_USELESS = 7;
    PLAYER_FACE_ANIMATION_IDENTIFY_GREAT = 8;
    PLAYER_FACE_ANIMATION_IDENTIFY_FAIL = 9;
    PLAYER_FACE_ANIMATION_REPAIR_ITEM = 10;
    PLAYER_FACE_ANIMATION_REPAIR_FAIL = 11;
    PLAYER_FACE_ANIMATION_SET_QUICK_SPELL = 12;
    PLAYER_FACE_ANIMATION_CANT_REST_HERE = 13;
    PLAYER_FACE_ANIMATION_SKILL_INCREASED = 14;
    PLAYER_FACE_ANIMATION_CANT_CARRY = 15;
    PLAYER_FACE_ANIMATION_MIX_POTION = 16;
    PLAYER_FACE_ANIMATION_POTION_EXPLODE = 17;
    PLAYER_FACE_ANIMATION_DOOR_LOCKED = 18;
    PLAYER_FACE_ANIMATION_WONT_BUDGE = 19;
    PLAYER_FACE_ANIMATION_CANT_LEARN_SPELL = 20;
    PLAYER_FACE_ANIMATION_LEARN_SPELL = 21;
    PLAYER_FACE_ANIMATION_HELLO = 22;
    PLAYER_FACE_ANIMATION_HELLO_NIGHT = 23;
    PLAYER_FACE_ANIMATION_DAMAGED = 24;
    PLAYER_FACE_ANIMATION_WEAK = 25;
    PLAYER_FACE_ANIMATION_AFRAID = 26;
    PLAYER_FACE_ANIMATION_POISONED = 27;
    PLAYER_FACE_ANIMATION_DESEASED = 28;
    PLAYER_FACE_ANIMATION_INSANE = 29;
    PLAYER_FACE_ANIMATION_CURSED = 30;
    PLAYER_FACE_ANIMATION_DRUNK = 31;
    PLAYER_FACE_ANIMATION_UNCONSIOUS = 32;
    PLAYER_FACE_ANIMATION_DEATH = 33;
    PLAYER_FACE_ANIMATION_STONED = 34;
    PLAYER_FACE_ANIMATION_ERADICATED = 35;
    PLAYER_FACE_ANIMATION_DINK_POTION = 36;
    PLAYER_FACE_ANIMATION_READ_SCOLL = 37;
    PLAYER_FACE_ANIMATION_NOT_ENOUGH_GOLD = 38;
    PLAYER_FACE_ANIMATION_CANT_EQUIP = 39;
    PLAYER_FACE_ANIMATION_ITEM_BROKEN_STOLEN = 40;
    PLAYER_FACE_ANIMATION_SPDRAINED = 41;
    PLAYER_FACE_ANIMATION_AGED = 42;
    PLAYER_FACE_ANIMATION_SPELL_FAILED = 43;
    PLAYER_FACE_ANIMATION_DAMAGED_PARTY = 44;
    PLAYER_FACE_ANIMATION_TIRED = 45;
    PLAYER_FACE_ANIMATION_ENTER_DUNGEON = 46;
    PLAYER_FACE_ANIMATION_LEAVE_DUNGEON = 47;
    PLAYER_FACE_ANIMATION_ALMOST_DEAD = 48;
    PLAYER_FACE_ANIMATION_CAST_SPELL = 49;
    PLAYER_FACE_ANIMATION_SHOOT = 50;
    PLAYER_FACE_ANIMATION_ATTACK_HIT = 51;
    PLAYER_FACE_ANIMATION_ATTACK_MISS = 52;
    PLAYER_FACE_ANIMATION_BEG = 53;
    PLAYER_FACE_ANIMATION_BEG_FAIL = 54;
    PLAYER_FACE_ANIMATION_THREAT = 55;
    PLAYER_FACE_ANIMATION_THREAT_FAIL = 56;
    PLAYER_FACE_ANIMATION_BRIBE = 57;
    PLAYER_FACE_ANIMATION_BRIBE_FAIL = 58;
    PLAYER_FACE_ANIMATION_NPCDONT_TALK = 59;
    PLAYER_FACE_ANIMATION_FOUND_ITEM = 60;
    PLAYER_FACE_ANIMATION_HIRE_NPC = 61;
    PLAYER_FACE_ANIMATION_LOOK_UP = 63;
    PLAYER_FACE_ANIMATION_LOOK_DOWN = 64;
    PLAYER_FACE_ANIMATION_YELL = 65;
    PLAYER_FACE_ANIMATION_FALLING = 66;
    PLAYER_FACE_ANIMATION_TAVERN_PACKS_FULL = 67;
    PLAYER_FACE_ANIMATION_TAVERN_DRINK = 68;
    PLAYER_FACE_ANIMATION_TAVERN_GOT_DRUNK = 69;
    PLAYER_FACE_ANIMATION_TAVERN_TIP = 70;
    PLAYER_FACE_ANIMATION_TRAVEL_HORSE = 71;
    PLAYER_FACE_ANIMATION_TRAVEL_BOAT = 72;
    PLAYER_FACE_ANIMATION_SHOP_IDENTIFY = 73;
    PLAYER_FACE_ANIMATION_SHOP_REPAIR = 74;
    PLAYER_FACE_ANIMATION_SHOP_ITEM_BOUGHT = 75;
    PLAYER_FACE_ANIMATION_SHOP_ALREADY_IDENTIFIED = 76;
    PLAYER_FACE_ANIMATION_SHOP_ITEM_SOLD = 77;
    PLAYER_FACE_ANIMATION_SKILL_LEARNED = 78;
    PLAYER_FACE_ANIMATION_SHOP_WRONG_SHOP = 79;
    PLAYER_FACE_ANIMATION_SHOP_RUDE = 80;
    PLAYER_FACE_ANIMATION_BANK_DEPOSIT = 81;
    PLAYER_FACE_ANIMATION_TEMPLE_HEAL = 82;
    PLAYER_FACE_ANIMATION_TEMPLE_DONATE = 83;
    PLAYER_FACE_ANIMATION_HELLO_HOUSE = 84;
    PLAYER_FACE_ANIMATION_SKILL_MASTERY_ICREASED = 85;
    PLAYER_FACE_ANIMATION_JOINED_GUILD = 86;
    PLAYER_FACE_ANIMATION_LEVEL_UP = 87;
    PLAYER_FACE_ANIMATION_STAT_BONUS_INCREASED = 91;
    PLAYER_FACE_ANIMATION_STAT_BASE_INCREASED = 92;
    PLAYER_FACE_ANIMATION_QUEST_GOT = 93;
    PLAYER_FACE_ANIMATION_AWARD_GOT = 96;
    PLAYER_FACE_ANIMATION_AFRAID_SILENT = 98;
    PLAYER_FACE_ANIMATION_CHEATED_DEATH = 99;
    PLAYER_FACE_ANIMATION_IN_PRISON = 100;
    PLAYER_FACE_ANIMATION_CHOOSE_ME = 102;
    PLAYER_FACE_ANIMATION_AWAKEN = 103;
    PLAYER_FACE_ANIMATION_ID_MONSTER_WEAK = 104;
    PLAYER_FACE_ANIMATION_ID_MONSTER_BIG = 105;
    PLAYER_FACE_ANIMATION_ID_MONSTER_FAIL = 106;
    PLAYER_FACE_ANIMATION_LAST_MAN_STANDING = 107;
    PLAYER_FACE_ANIMATION_NOT_ENOUGH_FOOD = 108;
    PLAYER_FACE_ANIMATION_DEATH_BLOW = 109;

    ALL_FACE_ANIMATION = { PLAYER_FACE_ANIMATION_KILL_SMALL_ENEMY, PLAYER_FACE_ANIMATION_KILL_BIG_ENEMY, PLAYER_FACE_ANIMATION_STORE_CLOSED, PLAYER_FACE_ANIMATION_DISARM_TRAP, PLAYER_FACE_ANIMATION_TRAP_EXPLOADED, PLAYER_FACE_ANIMATION_AVOID_DAMAGE, PLAYER_FACE_ANIMATION_IDENTIFY_USELESS, PLAYER_FACE_ANIMATION_IDENTIFY_GREAT, PLAYER_FACE_ANIMATION_IDENTIFY_FAIL, PLAYER_FACE_ANIMATION_REPAIR_ITEM, PLAYER_FACE_ANIMATION_REPAIR_FAIL, PLAYER_FACE_ANIMATION_SET_QUICK_SPELL, PLAYER_FACE_ANIMATION_CANT_REST_HERE, PLAYER_FACE_ANIMATION_SKILL_INCREASED, PLAYER_FACE_ANIMATION_CANT_CARRY, PLAYER_FACE_ANIMATION_MIX_POTION, PLAYER_FACE_ANIMATION_POTION_EXPLODE, PLAYER_FACE_ANIMATION_DOOR_LOCKED, PLAYER_FACE_ANIMATION_WONT_BUDGE, PLAYER_FACE_ANIMATION_CANT_LEARN_SPELL, PLAYER_FACE_ANIMATION_LEARN_SPELL, PLAYER_FACE_ANIMATION_HELLO, PLAYER_FACE_ANIMATION_HELLO_NIGHT, PLAYER_FACE_ANIMATION_DAMAGED, PLAYER_FACE_ANIMATION_WEAK, PLAYER_FACE_ANIMATION_AFRAID, PLAYER_FACE_ANIMATION_POISONED, PLAYER_FACE_ANIMATION_DESEASED, PLAYER_FACE_ANIMATION_INSANE, PLAYER_FACE_ANIMATION_CURSED, PLAYER_FACE_ANIMATION_DRUNK, PLAYER_FACE_ANIMATION_UNCONSIOUS, PLAYER_FACE_ANIMATION_DEATH, PLAYER_FACE_ANIMATION_STONED, PLAYER_FACE_ANIMATION_ERADICATED, PLAYER_FACE_ANIMATION_DINK_POTION, PLAYER_FACE_ANIMATION_READ_SCOLL, PLAYER_FACE_ANIMATION_NOT_ENOUGH_GOLD, PLAYER_FACE_ANIMATION_CANT_EQUIP, PLAYER_FACE_ANIMATION_ITEM_BROKEN_STOLEN, PLAYER_FACE_ANIMATION_SPDRAINED, PLAYER_FACE_ANIMATION_AGED, PLAYER_FACE_ANIMATION_SPELL_FAILED, PLAYER_FACE_ANIMATION_DAMAGED_PARTY, PLAYER_FACE_ANIMATION_TIRED, PLAYER_FACE_ANIMATION_ENTER_DUNGEON, PLAYER_FACE_ANIMATION_LEAVE_DUNGEON, PLAYER_FACE_ANIMATION_ALMOST_DEAD, PLAYER_FACE_ANIMATION_CAST_SPELL, PLAYER_FACE_ANIMATION_SHOOT, PLAYER_FACE_ANIMATION_ATTACK_HIT, PLAYER_FACE_ANIMATION_ATTACK_MISS, PLAYER_FACE_ANIMATION_BEG, PLAYER_FACE_ANIMATION_BEG_FAIL, PLAYER_FACE_ANIMATION_THREAT, PLAYER_FACE_ANIMATION_THREAT_FAIL, PLAYER_FACE_ANIMATION_BRIBE, PLAYER_FACE_ANIMATION_BRIBE_FAIL, PLAYER_FACE_ANIMATION_NPCDONT_TALK, PLAYER_FACE_ANIMATION_FOUND_ITEM, PLAYER_FACE_ANIMATION_HIRE_NPC, PLAYER_FACE_ANIMATION_LOOK_UP, PLAYER_FACE_ANIMATION_LOOK_DOWN, PLAYER_FACE_ANIMATION_YELL, PLAYER_FACE_ANIMATION_FALLING, PLAYER_FACE_ANIMATION_TAVERN_PACKS_FULL, PLAYER_FACE_ANIMATION_TAVERN_DRINK, PLAYER_FACE_ANIMATION_TAVERN_GOT_DRUNK, PLAYER_FACE_ANIMATION_TAVERN_TIP, PLAYER_FACE_ANIMATION_TRAVEL_HORSE, PLAYER_FACE_ANIMATION_TRAVEL_BOAT, PLAYER_FACE_ANIMATION_SHOP_IDENTIFY, PLAYER_FACE_ANIMATION_SHOP_REPAIR, PLAYER_FACE_ANIMATION_SHOP_ITEM_BOUGHT, PLAYER_FACE_ANIMATION_SHOP_ALREADY_IDENTIFIED, PLAYER_FACE_ANIMATION_SHOP_ITEM_SOLD, PLAYER_FACE_ANIMATION_SKILL_LEARNED, PLAYER_FACE_ANIMATION_SHOP_WRONG_SHOP, PLAYER_FACE_ANIMATION_SHOP_RUDE, PLAYER_FACE_ANIMATION_BANK_DEPOSIT, PLAYER_FACE_ANIMATION_TEMPLE_HEAL, PLAYER_FACE_ANIMATION_TEMPLE_DONATE, PLAYER_FACE_ANIMATION_HELLO_HOUSE, PLAYER_FACE_ANIMATION_SKILL_MASTERY_ICREASED, PLAYER_FACE_ANIMATION_JOINED_GUILD, PLAYER_FACE_ANIMATION_LEVEL_UP, PLAYER_FACE_ANIMATION_STAT_BONUS_INCREASED, PLAYER_FACE_ANIMATION_STAT_BASE_INCREASED, PLAYER_FACE_ANIMATION_QUEST_GOT, PLAYER_FACE_ANIMATION_AWARD_GOT, PLAYER_FACE_ANIMATION_AFRAID_SILENT, PLAYER_FACE_ANIMATION_CHEATED_DEATH, PLAYER_FACE_ANIMATION_IN_PRISON, PLAYER_FACE_ANIMATION_CHOOSE_ME, PLAYER_FACE_ANIMATION_AWAKEN, PLAYER_FACE_ANIMATION_ID_MONSTER_WEAK, PLAYER_FACE_ANIMATION_ID_MONSTER_BIG, PLAYER_FACE_ANIMATION_ID_MONSTER_FAIL, PLAYER_FACE_ANIMATION_LAST_MAN_STANDING, PLAYER_FACE_ANIMATION_NOT_ENOUGH_FOOD, PLAYER_FACE_ANIMATION_DEATH_BLOW };

    ENUM_TO_STRING_FACE_ANIMATION = { {PLAYER_FACE_ANIMATION_KILL_SMALL_ENEMY, "KillSmallEnemy"}, {PLAYER_FACE_ANIMATION_KILL_BIG_ENEMY, "KillBigEnemy"}, {PLAYER_FACE_ANIMATION_STORE_CLOSED, "StoreClosed"}, {PLAYER_FACE_ANIMATION_DISARM_TRAP, "DisarmTrap"}, {PLAYER_FACE_ANIMATION_TRAP_EXPLOADED, "TrapExploaded"}, {PLAYER_FACE_ANIMATION_AVOID_DAMAGE, "AvoidDamage"}, {PLAYER_FACE_ANIMATION_IDENTIFY_USELESS, "IdentifyUseless"}, {PLAYER_FACE_ANIMATION_IDENTIFY_GREAT, "IdentifyGreat"}, {PLAYER_FACE_ANIMATION_IDENTIFY_FAIL, "IdentifyFail"}, {PLAYER_FACE_ANIMATION_REPAIR_ITEM, "RepairItem"}, {PLAYER_FACE_ANIMATION_REPAIR_FAIL, "RepairFail"}, {PLAYER_FACE_ANIMATION_SET_QUICK_SPELL, "SetQuickSpell"}, {PLAYER_FACE_ANIMATION_CANT_REST_HERE, "CantRestHere"}, {PLAYER_FACE_ANIMATION_SKILL_INCREASED, "SkillIncreased"}, {PLAYER_FACE_ANIMATION_CANT_CARRY, "CantCarry"}, {PLAYER_FACE_ANIMATION_MIX_POTION, "MixPotion"}, {PLAYER_FACE_ANIMATION_POTION_EXPLODE, "PotionExplode"}, {PLAYER_FACE_ANIMATION_DOOR_LOCKED, "DoorLocked"}, {PLAYER_FACE_ANIMATION_WONT_BUDGE, "WontBudge"}, {PLAYER_FACE_ANIMATION_CANT_LEARN_SPELL, "CantLearnSpell"}, {PLAYER_FACE_ANIMATION_LEARN_SPELL, "LearnSpell"}, {PLAYER_FACE_ANIMATION_HELLO, "Hello"}, {PLAYER_FACE_ANIMATION_HELLO_NIGHT, "HelloNight"}, {PLAYER_FACE_ANIMATION_DAMAGED, "Damaged"}, {PLAYER_FACE_ANIMATION_WEAK, "Weak"}, {PLAYER_FACE_ANIMATION_AFRAID, "Afraid"}, {PLAYER_FACE_ANIMATION_POISONED, "Poisoned"}, {PLAYER_FACE_ANIMATION_DESEASED, "Deseased"}, {PLAYER_FACE_ANIMATION_INSANE, "Insane"}, {PLAYER_FACE_ANIMATION_CURSED, "Cursed"}, {PLAYER_FACE_ANIMATION_DRUNK, "Drunk"}, {PLAYER_FACE_ANIMATION_UNCONSIOUS, "Unconsious"}, {PLAYER_FACE_ANIMATION_DEATH, "Death"}, {PLAYER_FACE_ANIMATION_STONED, "Stoned"}, {PLAYER_FACE_ANIMATION_ERADICATED, "Eradicated"}, {PLAYER_FACE_ANIMATION_DINK_POTION, "DinkPotion"}, {PLAYER_FACE_ANIMATION_READ_SCOLL, "ReadScoll"}, {PLAYER_FACE_ANIMATION_NOT_ENOUGH_GOLD, "NotEnoughGold"}, {PLAYER_FACE_ANIMATION_CANT_EQUIP, "CantEquip"}, {PLAYER_FACE_ANIMATION_ITEM_BROKEN_STOLEN, "ItemBrokenStolen"}, {PLAYER_FACE_ANIMATION_SPDRAINED, "SPDrained"}, {PLAYER_FACE_ANIMATION_AGED, "Aged"}, {PLAYER_FACE_ANIMATION_SPELL_FAILED, "SpellFailed"}, {PLAYER_FACE_ANIMATION_DAMAGED_PARTY, "DamagedParty"}, {PLAYER_FACE_ANIMATION_TIRED, "Tired"}, {PLAYER_FACE_ANIMATION_ENTER_DUNGEON, "EnterDungeon"}, {PLAYER_FACE_ANIMATION_LEAVE_DUNGEON, "LeaveDungeon"}, {PLAYER_FACE_ANIMATION_ALMOST_DEAD, "AlmostDead"}, {PLAYER_FACE_ANIMATION_CAST_SPELL, "CastSpell"}, {PLAYER_FACE_ANIMATION_SHOOT, "Shoot"}, {PLAYER_FACE_ANIMATION_ATTACK_HIT, "AttackHit"}, {PLAYER_FACE_ANIMATION_ATTACK_MISS, "AttackMiss"}, {PLAYER_FACE_ANIMATION_BEG, "Beg"}, {PLAYER_FACE_ANIMATION_BEG_FAIL, "BegFail"}, {PLAYER_FACE_ANIMATION_THREAT, "Threat"}, {PLAYER_FACE_ANIMATION_THREAT_FAIL, "ThreatFail"}, {PLAYER_FACE_ANIMATION_BRIBE, "Bribe"}, {PLAYER_FACE_ANIMATION_BRIBE_FAIL, "BribeFail"}, {PLAYER_FACE_ANIMATION_NPCDONT_TALK, "NPCDontTalk"}, {PLAYER_FACE_ANIMATION_FOUND_ITEM, "FoundItem"}, {PLAYER_FACE_ANIMATION_HIRE_NPC, "HireNPC"}, {PLAYER_FACE_ANIMATION_LOOK_UP, "LookUp"}, {PLAYER_FACE_ANIMATION_LOOK_DOWN, "LookDown"}, {PLAYER_FACE_ANIMATION_YELL, "Yell"}, {PLAYER_FACE_ANIMATION_FALLING, "Falling"}, {PLAYER_FACE_ANIMATION_TAVERN_PACKS_FULL, "TavernPacksFull"}, {PLAYER_FACE_ANIMATION_TAVERN_DRINK, "TavernDrink"}, {PLAYER_FACE_ANIMATION_TAVERN_GOT_DRUNK, "TavernGotDrunk"}, {PLAYER_FACE_ANIMATION_TAVERN_TIP, "TavernTip"}, {PLAYER_FACE_ANIMATION_TRAVEL_HORSE, "TravelHorse"}, {PLAYER_FACE_ANIMATION_TRAVEL_BOAT, "TravelBoat"}, {PLAYER_FACE_ANIMATION_SHOP_IDENTIFY, "ShopIdentify"}, {PLAYER_FACE_ANIMATION_SHOP_REPAIR, "ShopRepair"}, {PLAYER_FACE_ANIMATION_SHOP_ITEM_BOUGHT, "ShopItemBought"}, {PLAYER_FACE_ANIMATION_SHOP_ALREADY_IDENTIFIED, "ShopAlreadyIdentified"}, {PLAYER_FACE_ANIMATION_SHOP_ITEM_SOLD, "ShopItemSold"}, {PLAYER_FACE_ANIMATION_SKILL_LEARNED, "SkillLearned"}, {PLAYER_FACE_ANIMATION_SHOP_WRONG_SHOP, "ShopWrongShop"}, {PLAYER_FACE_ANIMATION_SHOP_RUDE, "ShopRude"}, {PLAYER_FACE_ANIMATION_BANK_DEPOSIT, "BankDeposit"}, {PLAYER_FACE_ANIMATION_TEMPLE_HEAL, "TempleHeal"}, {PLAYER_FACE_ANIMATION_TEMPLE_DONATE, "TempleDonate"}, {PLAYER_FACE_ANIMATION_HELLO_HOUSE, "HelloHouse"}, {PLAYER_FACE_ANIMATION_SKILL_MASTERY_ICREASED, "SkillMasteryIcreased"}, {PLAYER_FACE_ANIMATION_JOINED_GUILD, "JoinedGuild"}, {PLAYER_FACE_ANIMATION_LEVEL_UP, "LevelUp"}, {PLAYER_FACE_ANIMATION_STAT_BONUS_INCREASED, "StatBonusIncreased"}, {PLAYER_FACE_ANIMATION_STAT_BASE_INCREASED, "StatBaseIncreased"}, {PLAYER_FACE_ANIMATION_QUEST_GOT, "QuestGot"}, {PLAYER_FACE_ANIMATION_AWARD_GOT, "AwardGot"}, {PLAYER_FACE_ANIMATION_AFRAID_SILENT, "AfraidSilent"}, {PLAYER_FACE_ANIMATION_CHEATED_DEATH, "CheatedDeath"}, {PLAYER_FACE_ANIMATION_IN_PRISON, "InPrison"}, {PLAYER_FACE_ANIMATION_CHOOSE_ME, "ChooseMe"}, {PLAYER_FACE_ANIMATION_AWAKEN, "Awaken"}, {PLAYER_FACE_ANIMATION_ID_MONSTER_WEAK, "IdMonsterWeak"}, {PLAYER_FACE_ANIMATION_ID_MONSTER_BIG, "IdMonsterBig"}, {PLAYER_FACE_ANIMATION_ID_MONSTER_FAIL, "IdMonsterFail"}, {PLAYER_FACE_ANIMATION_LAST_MAN_STANDING, "LastManStanding"}, {PLAYER_FACE_ANIMATION_NOT_ENOUGH_FOOD, "NotEnoughFood"}, {PLAYER_FACE_ANIMATION_DEATH_BLOW, "DeathBlow"} };
}


int64_t
PLAYER_CONDITION_CURSED = INVALID_ID,
PLAYER_CONDITION_WEAK = INVALID_ID,
PLAYER_CONDITION_ASLEEP = INVALID_ID,
PLAYER_CONDITION_AFRAID = INVALID_ID,
PLAYER_CONDITION_DRUNK = INVALID_ID,
PLAYER_CONDITION_INSANE = INVALID_ID,
PLAYER_CONDITION_POISON_1 = INVALID_ID,
PLAYER_CONDITION_DISEASE_1 = INVALID_ID,
PLAYER_CONDITION_POISON_2 = INVALID_ID,
PLAYER_CONDITION_DISEASE_2 = INVALID_ID,
PLAYER_CONDITION_POISON_3 = INVALID_ID,
PLAYER_CONDITION_DISEASE_3 = INVALID_ID,
PLAYER_CONDITION_PARALYZED = INVALID_ID,
PLAYER_CONDITION_UNCONSCIOUS = INVALID_ID,
PLAYER_CONDITION_DEAD = INVALID_ID,
PLAYER_CONDITION_STONED = INVALID_ID,
PLAYER_CONDITION_ERADICATED = INVALID_ID,
PLAYER_CONDITION_GOOD = INVALID_ID,
PLAYER_CONDITION_ZOMBIE = INVALID_ID;

std::vector<int64_t> ALL_CONDITION;
std::map<int64_t, std::string> ENUM_TO_STRING_CONDITION;

void makeEnumCondition_6()
{
    PLAYER_CONDITION_CURSED = 0;
    PLAYER_CONDITION_WEAK = 1;
    PLAYER_CONDITION_ASLEEP = 2;
    PLAYER_CONDITION_AFRAID = 3;
    PLAYER_CONDITION_DRUNK = 4;
    PLAYER_CONDITION_INSANE = 5;
    PLAYER_CONDITION_POISON_1 = 6;
    PLAYER_CONDITION_DISEASE_1 = 7;
    PLAYER_CONDITION_POISON_2 = 8;
    PLAYER_CONDITION_DISEASE_2 = 9;
    PLAYER_CONDITION_POISON_3 = 10;
    PLAYER_CONDITION_DISEASE_3 = 11;
    PLAYER_CONDITION_PARALYZED = 12;
    PLAYER_CONDITION_UNCONSCIOUS = 13;
    PLAYER_CONDITION_DEAD = 14;
    PLAYER_CONDITION_STONED = 15;
    PLAYER_CONDITION_ERADICATED = 16;
    PLAYER_CONDITION_GOOD = 17;

    ALL_CONDITION = { PLAYER_CONDITION_CURSED, PLAYER_CONDITION_WEAK, PLAYER_CONDITION_ASLEEP, PLAYER_CONDITION_AFRAID, PLAYER_CONDITION_DRUNK, PLAYER_CONDITION_INSANE, PLAYER_CONDITION_POISON_1, PLAYER_CONDITION_DISEASE_1, PLAYER_CONDITION_POISON_2, PLAYER_CONDITION_DISEASE_2, PLAYER_CONDITION_POISON_3, PLAYER_CONDITION_DISEASE_3, PLAYER_CONDITION_PARALYZED, PLAYER_CONDITION_UNCONSCIOUS, PLAYER_CONDITION_DEAD, PLAYER_CONDITION_STONED, PLAYER_CONDITION_ERADICATED, PLAYER_CONDITION_GOOD };

    ENUM_TO_STRING_CONDITION = { {PLAYER_CONDITION_CURSED, "Cursed"}, {PLAYER_CONDITION_WEAK, "Weak"}, {PLAYER_CONDITION_ASLEEP, "Asleep"}, {PLAYER_CONDITION_AFRAID, "Afraid"}, {PLAYER_CONDITION_DRUNK, "Drunk"}, {PLAYER_CONDITION_INSANE, "Insane"}, {PLAYER_CONDITION_POISON_1, "Poison1"}, {PLAYER_CONDITION_DISEASE_1, "Disease1"}, {PLAYER_CONDITION_POISON_2, "Poison2"}, {PLAYER_CONDITION_DISEASE_2, "Disease2"}, {PLAYER_CONDITION_POISON_3, "Poison3"}, {PLAYER_CONDITION_DISEASE_3, "Disease3"}, {PLAYER_CONDITION_PARALYZED, "Paralyzed"}, {PLAYER_CONDITION_UNCONSCIOUS, "Unconscious"}, {PLAYER_CONDITION_DEAD, "Dead"}, {PLAYER_CONDITION_STONED, "Stoned"}, {PLAYER_CONDITION_ERADICATED, "Eradicated"}, {PLAYER_CONDITION_GOOD, "Good"} };
}

void makeEnumCondition_7()
{
    PLAYER_CONDITION_CURSED = 0;
    PLAYER_CONDITION_WEAK = 1;
    PLAYER_CONDITION_ASLEEP = 2;
    PLAYER_CONDITION_AFRAID = 3;
    PLAYER_CONDITION_DRUNK = 4;
    PLAYER_CONDITION_INSANE = 5;
    PLAYER_CONDITION_POISON_1 = 6;
    PLAYER_CONDITION_DISEASE_1 = 7;
    PLAYER_CONDITION_POISON_2 = 8;
    PLAYER_CONDITION_DISEASE_2 = 9;
    PLAYER_CONDITION_POISON_3 = 10;
    PLAYER_CONDITION_DISEASE_3 = 11;
    PLAYER_CONDITION_PARALYZED = 12;
    PLAYER_CONDITION_UNCONSCIOUS = 13;
    PLAYER_CONDITION_DEAD = 14;
    PLAYER_CONDITION_STONED = 15;
    PLAYER_CONDITION_ERADICATED = 16;
    PLAYER_CONDITION_ZOMBIE = 17;
    PLAYER_CONDITION_GOOD = 18;

    ALL_CONDITION = { PLAYER_CONDITION_CURSED, PLAYER_CONDITION_WEAK, PLAYER_CONDITION_ASLEEP, PLAYER_CONDITION_AFRAID, PLAYER_CONDITION_DRUNK, PLAYER_CONDITION_INSANE, PLAYER_CONDITION_POISON_1, PLAYER_CONDITION_DISEASE_1, PLAYER_CONDITION_POISON_2, PLAYER_CONDITION_DISEASE_2, PLAYER_CONDITION_POISON_3, PLAYER_CONDITION_DISEASE_3, PLAYER_CONDITION_PARALYZED, PLAYER_CONDITION_UNCONSCIOUS, PLAYER_CONDITION_DEAD, PLAYER_CONDITION_STONED, PLAYER_CONDITION_ERADICATED, PLAYER_CONDITION_ZOMBIE, PLAYER_CONDITION_GOOD };

    ENUM_TO_STRING_CONDITION = { {PLAYER_CONDITION_CURSED, "Cursed"}, {PLAYER_CONDITION_WEAK, "Weak"}, {PLAYER_CONDITION_ASLEEP, "Asleep"}, {PLAYER_CONDITION_AFRAID, "Afraid"}, {PLAYER_CONDITION_DRUNK, "Drunk"}, {PLAYER_CONDITION_INSANE, "Insane"}, {PLAYER_CONDITION_POISON_1, "Poison1"}, {PLAYER_CONDITION_DISEASE_1, "Disease1"}, {PLAYER_CONDITION_POISON_2, "Poison2"}, {PLAYER_CONDITION_DISEASE_2, "Disease2"}, {PLAYER_CONDITION_POISON_3, "Poison3"}, {PLAYER_CONDITION_DISEASE_3, "Disease3"}, {PLAYER_CONDITION_PARALYZED, "Paralyzed"}, {PLAYER_CONDITION_UNCONSCIOUS, "Unconscious"}, {PLAYER_CONDITION_DEAD, "Dead"}, {PLAYER_CONDITION_STONED, "Stoned"}, {PLAYER_CONDITION_ERADICATED, "Eradicated"}, {PLAYER_CONDITION_ZOMBIE, "Zombie"}, {PLAYER_CONDITION_GOOD, "Good"} };
}

void makeEnumCondition_8()
{
    PLAYER_CONDITION_CURSED = 0;
    PLAYER_CONDITION_WEAK = 1;
    PLAYER_CONDITION_ASLEEP = 2;
    PLAYER_CONDITION_AFRAID = 3;
    PLAYER_CONDITION_DRUNK = 4;
    PLAYER_CONDITION_INSANE = 5;
    PLAYER_CONDITION_POISON_1 = 6;
    PLAYER_CONDITION_DISEASE_1 = 7;
    PLAYER_CONDITION_POISON_2 = 8;
    PLAYER_CONDITION_DISEASE_2 = 9;
    PLAYER_CONDITION_POISON_3 = 10;
    PLAYER_CONDITION_DISEASE_3 = 11;
    PLAYER_CONDITION_PARALYZED = 12;
    PLAYER_CONDITION_UNCONSCIOUS = 13;
    PLAYER_CONDITION_DEAD = 14;
    PLAYER_CONDITION_STONED = 15;
    PLAYER_CONDITION_ERADICATED = 16;
    PLAYER_CONDITION_ZOMBIE = 17;
    PLAYER_CONDITION_GOOD = 18;

    ALL_CONDITION = { PLAYER_CONDITION_CURSED, PLAYER_CONDITION_WEAK, PLAYER_CONDITION_ASLEEP, PLAYER_CONDITION_AFRAID, PLAYER_CONDITION_DRUNK, PLAYER_CONDITION_INSANE, PLAYER_CONDITION_POISON_1, PLAYER_CONDITION_DISEASE_1, PLAYER_CONDITION_POISON_2, PLAYER_CONDITION_DISEASE_2, PLAYER_CONDITION_POISON_3, PLAYER_CONDITION_DISEASE_3, PLAYER_CONDITION_PARALYZED, PLAYER_CONDITION_UNCONSCIOUS, PLAYER_CONDITION_DEAD, PLAYER_CONDITION_STONED, PLAYER_CONDITION_ERADICATED, PLAYER_CONDITION_ZOMBIE, PLAYER_CONDITION_GOOD };

    ENUM_TO_STRING_CONDITION = { {PLAYER_CONDITION_CURSED, "Cursed"}, {PLAYER_CONDITION_WEAK, "Weak"}, {PLAYER_CONDITION_ASLEEP, "Asleep"}, {PLAYER_CONDITION_AFRAID, "Afraid"}, {PLAYER_CONDITION_DRUNK, "Drunk"}, {PLAYER_CONDITION_INSANE, "Insane"}, {PLAYER_CONDITION_POISON_1, "Poison1"}, {PLAYER_CONDITION_DISEASE_1, "Disease1"}, {PLAYER_CONDITION_POISON_2, "Poison2"}, {PLAYER_CONDITION_DISEASE_2, "Disease2"}, {PLAYER_CONDITION_POISON_3, "Poison3"}, {PLAYER_CONDITION_DISEASE_3, "Disease3"}, {PLAYER_CONDITION_PARALYZED, "Paralyzed"}, {PLAYER_CONDITION_UNCONSCIOUS, "Unconscious"}, {PLAYER_CONDITION_DEAD, "Dead"}, {PLAYER_CONDITION_STONED, "Stoned"}, {PLAYER_CONDITION_ERADICATED, "Eradicated"}, {PLAYER_CONDITION_ZOMBIE, "Zombie"}, {PLAYER_CONDITION_GOOD, "Good"} };
}


int64_t
CHEST_BIT_TRAPPED = INVALID_ID,
CHEST_BIT_ITEMS_PLACED = INVALID_ID,
CHEST_BIT_IDENTIFIED = INVALID_ID;

std::vector<int64_t> ALL_CHEST_BITS;
std::map<int64_t, std::string> ENUM_TO_STRING_CHEST_BITS;

void makeEnumChestBits_6()
{
    CHEST_BIT_TRAPPED = 1;
    CHEST_BIT_ITEMS_PLACED = 2;
    CHEST_BIT_IDENTIFIED = 4;

    ALL_CHEST_BITS = { CHEST_BIT_TRAPPED, CHEST_BIT_ITEMS_PLACED, CHEST_BIT_IDENTIFIED };

    ENUM_TO_STRING_CHEST_BITS = { {CHEST_BIT_TRAPPED, "Trapped"}, {CHEST_BIT_ITEMS_PLACED, "ItemsPlaced"}, {CHEST_BIT_IDENTIFIED, "Identified"} };
}

void makeEnumChestBits_7()
{
    CHEST_BIT_TRAPPED = 1;
    CHEST_BIT_ITEMS_PLACED = 2;
    CHEST_BIT_IDENTIFIED = 4;

    ALL_CHEST_BITS = { CHEST_BIT_TRAPPED, CHEST_BIT_ITEMS_PLACED, CHEST_BIT_IDENTIFIED };

    ENUM_TO_STRING_CHEST_BITS = { {CHEST_BIT_TRAPPED, "Trapped"}, {CHEST_BIT_ITEMS_PLACED, "ItemsPlaced"}, {CHEST_BIT_IDENTIFIED, "Identified"} };
}

void makeEnumChestBits_8()
{
    CHEST_BIT_TRAPPED = 1;
    CHEST_BIT_ITEMS_PLACED = 2;
    CHEST_BIT_IDENTIFIED = 4;

    ALL_CHEST_BITS = { CHEST_BIT_TRAPPED, CHEST_BIT_ITEMS_PLACED, CHEST_BIT_IDENTIFIED };

    ENUM_TO_STRING_CHEST_BITS = { {CHEST_BIT_TRAPPED, "Trapped"}, {CHEST_BIT_ITEMS_PLACED, "ItemsPlaced"}, {CHEST_BIT_IDENTIFIED, "Identified"} };
}


int64_t
MON_AI_STATE_STAND = INVALID_ID,
MON_AI_STATE_ACTIVE = INVALID_ID,
MON_AI_STATE_MELEE_ATTACK = INVALID_ID,
MON_AI_STATE_RANGED_ATTACK = INVALID_ID,
MON_AI_STATE_DYING = INVALID_ID,
MON_AI_STATE_DEAD = INVALID_ID,
MON_AI_STATE_PURSUE = INVALID_ID,
MON_AI_STATE_FLEE = INVALID_ID,
MON_AI_STATE_STUNNED = INVALID_ID,
MON_AI_STATE_FIDGET = INVALID_ID,
MON_AI_STATE_INTERACT = INVALID_ID,
MON_AI_STATE_REMOVED = INVALID_ID,
MON_AI_STATE_RANGED_ATTACK_2 = INVALID_ID,
MON_AI_STATE_CAST_SPELL = INVALID_ID,
MON_AI_STATE_STONED = INVALID_ID,
MON_AI_STATE_PARALYZED = INVALID_ID,
MON_AI_STATE_RESURRECT = INVALID_ID,
MON_AI_STATE_SUMMONED = INVALID_ID,
MON_AI_STATE_RANGED_ATTACK_4 = INVALID_ID,
MON_AI_STATE_INVISIBLE = INVALID_ID;

std::vector<int64_t> ALL_AISTATE;
std::map<int64_t, std::string> ENUM_TO_STRING_AISTATE;

void makeEnumAIState_6()
{
    MON_AI_STATE_STAND = 0;
    MON_AI_STATE_ACTIVE = 1;
    MON_AI_STATE_MELEE_ATTACK = 2;
    MON_AI_STATE_RANGED_ATTACK = 3;
    MON_AI_STATE_DYING = 4;
    MON_AI_STATE_DEAD = 5;
    MON_AI_STATE_PURSUE = 6;
    MON_AI_STATE_FLEE = 7;
    MON_AI_STATE_STUNNED = 8;
    MON_AI_STATE_FIDGET = 9;
    MON_AI_STATE_INTERACT = 10;
    MON_AI_STATE_REMOVED = 11;
    MON_AI_STATE_RANGED_ATTACK_2 = 12;
    MON_AI_STATE_CAST_SPELL = 13;
    MON_AI_STATE_STONED = 14;
    MON_AI_STATE_PARALYZED = 15;
    MON_AI_STATE_RESURRECT = 16;
    MON_AI_STATE_SUMMONED = 17;
    MON_AI_STATE_RANGED_ATTACK_4 = 18;
    MON_AI_STATE_INVISIBLE = 19;

    ALL_AISTATE = { MON_AI_STATE_STAND, MON_AI_STATE_ACTIVE, MON_AI_STATE_MELEE_ATTACK, MON_AI_STATE_RANGED_ATTACK, MON_AI_STATE_DYING, MON_AI_STATE_DEAD, MON_AI_STATE_PURSUE, MON_AI_STATE_FLEE, MON_AI_STATE_STUNNED, MON_AI_STATE_FIDGET, MON_AI_STATE_INTERACT, MON_AI_STATE_REMOVED, MON_AI_STATE_RANGED_ATTACK_2, MON_AI_STATE_CAST_SPELL, MON_AI_STATE_STONED, MON_AI_STATE_PARALYZED, MON_AI_STATE_RESURRECT, MON_AI_STATE_SUMMONED, MON_AI_STATE_RANGED_ATTACK_4, MON_AI_STATE_INVISIBLE };

    ENUM_TO_STRING_AISTATE = { {MON_AI_STATE_STAND, "Stand"}, {MON_AI_STATE_ACTIVE, "Active"}, {MON_AI_STATE_MELEE_ATTACK, "MeleeAttack"}, {MON_AI_STATE_RANGED_ATTACK, "RangedAttack"}, {MON_AI_STATE_DYING, "Dying"}, {MON_AI_STATE_DEAD, "Dead"}, {MON_AI_STATE_PURSUE, "Pursue"}, {MON_AI_STATE_FLEE, "Flee"}, {MON_AI_STATE_STUNNED, "Stunned"}, {MON_AI_STATE_FIDGET, "Fidget"}, {MON_AI_STATE_INTERACT, "Interact"}, {MON_AI_STATE_REMOVED, "Removed"}, {MON_AI_STATE_RANGED_ATTACK_2, "RangedAttack2"}, {MON_AI_STATE_CAST_SPELL, "CastSpell"}, {MON_AI_STATE_STONED, "Stoned"}, {MON_AI_STATE_PARALYZED, "Paralyzed"}, {MON_AI_STATE_RESURRECT, "Resurrect"}, {MON_AI_STATE_SUMMONED, "Summoned"}, {MON_AI_STATE_RANGED_ATTACK_4, "RangedAttack4"}, {MON_AI_STATE_INVISIBLE, "Invisible"} };
}

void makeEnumAIState_7()
{
    MON_AI_STATE_STAND = 0;
    MON_AI_STATE_ACTIVE = 1;
    MON_AI_STATE_MELEE_ATTACK = 2;
    MON_AI_STATE_RANGED_ATTACK = 3;
    MON_AI_STATE_DYING = 4;
    MON_AI_STATE_DEAD = 5;
    MON_AI_STATE_PURSUE = 6;
    MON_AI_STATE_FLEE = 7;
    MON_AI_STATE_STUNNED = 8;
    MON_AI_STATE_FIDGET = 9;
    MON_AI_STATE_INTERACT = 10;
    MON_AI_STATE_REMOVED = 11;
    MON_AI_STATE_RANGED_ATTACK_2 = 12;
    MON_AI_STATE_CAST_SPELL = 13;
    MON_AI_STATE_STONED = 14;
    MON_AI_STATE_PARALYZED = 15;
    MON_AI_STATE_RESURRECT = 16;
    MON_AI_STATE_SUMMONED = 17;
    MON_AI_STATE_RANGED_ATTACK_4 = 18;
    MON_AI_STATE_INVISIBLE = 19;

    ALL_AISTATE = { MON_AI_STATE_STAND, MON_AI_STATE_ACTIVE, MON_AI_STATE_MELEE_ATTACK, MON_AI_STATE_RANGED_ATTACK, MON_AI_STATE_DYING, MON_AI_STATE_DEAD, MON_AI_STATE_PURSUE, MON_AI_STATE_FLEE, MON_AI_STATE_STUNNED, MON_AI_STATE_FIDGET, MON_AI_STATE_INTERACT, MON_AI_STATE_REMOVED, MON_AI_STATE_RANGED_ATTACK_2, MON_AI_STATE_CAST_SPELL, MON_AI_STATE_STONED, MON_AI_STATE_PARALYZED, MON_AI_STATE_RESURRECT, MON_AI_STATE_SUMMONED, MON_AI_STATE_RANGED_ATTACK_4, MON_AI_STATE_INVISIBLE };

    ENUM_TO_STRING_AISTATE = { {MON_AI_STATE_STAND, "Stand"}, {MON_AI_STATE_ACTIVE, "Active"}, {MON_AI_STATE_MELEE_ATTACK, "MeleeAttack"}, {MON_AI_STATE_RANGED_ATTACK, "RangedAttack"}, {MON_AI_STATE_DYING, "Dying"}, {MON_AI_STATE_DEAD, "Dead"}, {MON_AI_STATE_PURSUE, "Pursue"}, {MON_AI_STATE_FLEE, "Flee"}, {MON_AI_STATE_STUNNED, "Stunned"}, {MON_AI_STATE_FIDGET, "Fidget"}, {MON_AI_STATE_INTERACT, "Interact"}, {MON_AI_STATE_REMOVED, "Removed"}, {MON_AI_STATE_RANGED_ATTACK_2, "RangedAttack2"}, {MON_AI_STATE_CAST_SPELL, "CastSpell"}, {MON_AI_STATE_STONED, "Stoned"}, {MON_AI_STATE_PARALYZED, "Paralyzed"}, {MON_AI_STATE_RESURRECT, "Resurrect"}, {MON_AI_STATE_SUMMONED, "Summoned"}, {MON_AI_STATE_RANGED_ATTACK_4, "RangedAttack4"}, {MON_AI_STATE_INVISIBLE, "Invisible"} };
}

void makeEnumAIState_8()
{
    MON_AI_STATE_STAND = 0;
    MON_AI_STATE_ACTIVE = 1;
    MON_AI_STATE_MELEE_ATTACK = 2;
    MON_AI_STATE_RANGED_ATTACK = 3;
    MON_AI_STATE_DYING = 4;
    MON_AI_STATE_DEAD = 5;
    MON_AI_STATE_PURSUE = 6;
    MON_AI_STATE_FLEE = 7;
    MON_AI_STATE_STUNNED = 8;
    MON_AI_STATE_FIDGET = 9;
    MON_AI_STATE_INTERACT = 10;
    MON_AI_STATE_REMOVED = 11;
    MON_AI_STATE_RANGED_ATTACK_2 = 12;
    MON_AI_STATE_CAST_SPELL = 13;
    MON_AI_STATE_STONED = 14;
    MON_AI_STATE_PARALYZED = 15;
    MON_AI_STATE_RESURRECT = 16;
    MON_AI_STATE_SUMMONED = 17;
    MON_AI_STATE_RANGED_ATTACK_4 = 18;
    MON_AI_STATE_INVISIBLE = 19;

    ALL_AISTATE = { MON_AI_STATE_STAND, MON_AI_STATE_ACTIVE, MON_AI_STATE_MELEE_ATTACK, MON_AI_STATE_RANGED_ATTACK, MON_AI_STATE_DYING, MON_AI_STATE_DEAD, MON_AI_STATE_PURSUE, MON_AI_STATE_FLEE, MON_AI_STATE_STUNNED, MON_AI_STATE_FIDGET, MON_AI_STATE_INTERACT, MON_AI_STATE_REMOVED, MON_AI_STATE_RANGED_ATTACK_2, MON_AI_STATE_CAST_SPELL, MON_AI_STATE_STONED, MON_AI_STATE_PARALYZED, MON_AI_STATE_RESURRECT, MON_AI_STATE_SUMMONED, MON_AI_STATE_RANGED_ATTACK_4, MON_AI_STATE_INVISIBLE };

    ENUM_TO_STRING_AISTATE = { {MON_AI_STATE_STAND, "Stand"}, {MON_AI_STATE_ACTIVE, "Active"}, {MON_AI_STATE_MELEE_ATTACK, "MeleeAttack"}, {MON_AI_STATE_RANGED_ATTACK, "RangedAttack"}, {MON_AI_STATE_DYING, "Dying"}, {MON_AI_STATE_DEAD, "Dead"}, {MON_AI_STATE_PURSUE, "Pursue"}, {MON_AI_STATE_FLEE, "Flee"}, {MON_AI_STATE_STUNNED, "Stunned"}, {MON_AI_STATE_FIDGET, "Fidget"}, {MON_AI_STATE_INTERACT, "Interact"}, {MON_AI_STATE_REMOVED, "Removed"}, {MON_AI_STATE_RANGED_ATTACK_2, "RangedAttack2"}, {MON_AI_STATE_CAST_SPELL, "CastSpell"}, {MON_AI_STATE_STONED, "Stoned"}, {MON_AI_STATE_PARALYZED, "Paralyzed"}, {MON_AI_STATE_RESURRECT, "Resurrect"}, {MON_AI_STATE_SUMMONED, "Summoned"}, {MON_AI_STATE_RANGED_ATTACK_4, "RangedAttack4"}, {MON_AI_STATE_INVISIBLE, "Invisible"} };
}


int64_t
SPELL_TORCH_LIGHT = INVALID_ID,
SPELL_FLAME_ARROW = INVALID_ID,
SPELL_PROTECTION_FROM_FIRE = INVALID_ID,
SPELL_FIRE_BOLT = INVALID_ID,
SPELL_HASTE = INVALID_ID,
SPELL_FIREBALL = INVALID_ID,
SPELL_RING_OF_FIRE = INVALID_ID,
SPELL_FIRE_BLAST = INVALID_ID,
SPELL_METEOR_SHOWER = INVALID_ID,
SPELL_INFERNO = INVALID_ID,
SPELL_INCINERATE = INVALID_ID,
SPELL_WIZARD_EYE = INVALID_ID,
SPELL_STATIC_CHARGE = INVALID_ID,
SPELL_PROTECTION_FROM_ELECTRICITY = INVALID_ID,
SPELL_SPARKS = INVALID_ID,
SPELL_FEATHER_FALL = INVALID_ID,
SPELL_SHIELD = INVALID_ID,
SPELL_LIGHTNING_BOLT = INVALID_ID,
SPELL_JUMP = INVALID_ID,
SPELL_IMPLOSION = INVALID_ID,
SPELL_FLY = INVALID_ID,
SPELL_STARBURST = INVALID_ID,
SPELL_AWAKEN = INVALID_ID,
SPELL_COLD_BEAM = INVALID_ID,
SPELL_PROTECTION_FROM_COLD = INVALID_ID,
SPELL_POISON_SPRAY = INVALID_ID,
SPELL_WATER_WALK = INVALID_ID,
SPELL_ICE_BOLT = INVALID_ID,
SPELL_ENCHANT_ITEM = INVALID_ID,
SPELL_ACID_BURST = INVALID_ID,
SPELL_TOWN_PORTAL = INVALID_ID,
SPELL_ICE_BLAST = INVALID_ID,
SPELL_LLOYDS_BEACON = INVALID_ID,
SPELL_STUN = INVALID_ID,
SPELL_MAGIC_ARROW = INVALID_ID,
SPELL_PROTECTION_FROM_MAGIC = INVALID_ID,
SPELL_DEADLY_SWARM = INVALID_ID,
SPELL_STONE_SKIN = INVALID_ID,
SPELL_BLADES = INVALID_ID,
SPELL_STONE_TO_FLESH = INVALID_ID,
SPELL_ROCK_BLAST = INVALID_ID,
SPELL_TURN_TO_STONE = INVALID_ID,
SPELL_DEATH_BLOSSOM = INVALID_ID,
SPELL_MASS_DISTORTION = INVALID_ID,
SPELL_SPIRIT_ARROW = INVALID_ID,
SPELL_BLESS = INVALID_ID,
SPELL_HEALING_TOUCH = INVALID_ID,
SPELL_LUCKY_DAY = INVALID_ID,
SPELL_REMOVE_CURSE = INVALID_ID,
SPELL_GUARDIAN_ANGEL = INVALID_ID,
SPELL_HEROISM = INVALID_ID,
SPELL_TURN_UNDEAD = INVALID_ID,
SPELL_RAISE_DEAD = INVALID_ID,
SPELL_SHARED_LIFE = INVALID_ID,
SPELL_RESURRECTION = INVALID_ID,
SPELL_MEDITATION = INVALID_ID,
SPELL_REMOVE_FEAR = INVALID_ID,
SPELL_MIND_BLAST = INVALID_ID,
SPELL_PRECISION = INVALID_ID,
SPELL_CURE_PARALYSIS = INVALID_ID,
SPELL_CHARM = INVALID_ID,
SPELL_MASS_FEAR = INVALID_ID,
SPELL_FEEBLEMIND = INVALID_ID,
SPELL_CURE_INSANITY = INVALID_ID,
SPELL_PSYCHIC_SHOCK = INVALID_ID,
SPELL_TELEKINESIS = INVALID_ID,
SPELL_CURE_WEAKNESS = INVALID_ID,
SPELL_FIRST_AID = INVALID_ID,
SPELL_PROTECTION_FROM_POISON = INVALID_ID,
SPELL_HARM = INVALID_ID,
SPELL_CURE_WOUNDS = INVALID_ID,
SPELL_CURE_POISON = INVALID_ID,
SPELL_SPEED = INVALID_ID,
SPELL_CURE_DISEASE = INVALID_ID,
SPELL_POWER = INVALID_ID,
SPELL_FLYING_FIST = INVALID_ID,
SPELL_POWER_CURE = INVALID_ID,
SPELL_CREATE_FOOD = INVALID_ID,
SPELL_GOLDEN_TOUCH = INVALID_ID,
SPELL_DISPEL_MAGIC = INVALID_ID,
SPELL_SLOW = INVALID_ID,
SPELL_DESTROY_UNDEAD = INVALID_ID,
SPELL_DAY_OF_THE_GODS = INVALID_ID,
SPELL_PRISMATIC_LIGHT = INVALID_ID,
SPELL_HOUR_OF_POWER = INVALID_ID,
SPELL_PARALYZE = INVALID_ID,
SPELL_SUN_RAY = INVALID_ID,
SPELL_DIVINE_INTERVENTION = INVALID_ID,
SPELL_REANIMATE = INVALID_ID,
SPELL_TOXIC_CLOUD = INVALID_ID,
SPELL_MASS_CURSE = INVALID_ID,
SPELL_SHRAPMETAL = INVALID_ID,
SPELL_SHRINKING_RAY = INVALID_ID,
SPELL_DAY_OF_PROTECTION = INVALID_ID,
SPELL_FINGER_OF_DEATH = INVALID_ID,
SPELL_MOON_RAY = INVALID_ID,
SPELL_DRAGON_BREATH = INVALID_ID,
SPELL_ARMAGEDDON = INVALID_ID,
SPELL_DARK_CONTAINMENT = INVALID_ID,
SPELL_SHOOT = INVALID_ID,
SPELL_SHOOT_FIRE = INVALID_ID,
SPELL_SHOOT_BLASTER = INVALID_ID,
SPELL_FIRE_RESISTANCE = INVALID_ID,
SPELL_FIRE_AURA = INVALID_ID,
SPELL_FIRE_SPIKE = INVALID_ID,
SPELL_IMMOLATION = INVALID_ID,
SPELL_AIR_RESISTANCE = INVALID_ID,
SPELL_INVISIBILITY = INVALID_ID,
SPELL_WATER_RESISTANCE = INVALID_ID,
SPELL_RECHARGE_ITEM = INVALID_ID,
SPELL_EARTH_RESISTANCE = INVALID_ID,
SPELL_DETECT_LIFE = INVALID_ID,
SPELL_FATE = INVALID_ID,
SPELL_PRESERVATION = INVALID_ID,
SPELL_SPIRIT_LASH = INVALID_ID,
SPELL_MIND_RESISTANCE = INVALID_ID,
SPELL_TELEPATHY = INVALID_ID,
SPELL_BERSERK = INVALID_ID,
SPELL_ENSLAVE = INVALID_ID,
SPELL_HEAL = INVALID_ID,
SPELL_BODY_RESISTANCE = INVALID_ID,
SPELL_REGENERATION = INVALID_ID,
SPELL_HAMMERHANDS = INVALID_ID,
SPELL_LIGHT_BOLT = INVALID_ID,
SPELL_SUMMON_ELEMENTAL = INVALID_ID,
SPELL_SUNRAY = INVALID_ID,
SPELL_VAMPIRIC_WEAPON = INVALID_ID,
SPELL_CONTROL_UNDEAD = INVALID_ID,
SPELL_PAIN_REFLECTION = INVALID_ID,
SPELL_SACRIFICE = INVALID_ID,
SPELL_SOULDRINKER = INVALID_ID,
SPELL_SUMMON_WISP = INVALID_ID,
SPELL_DARK_GRASP = INVALID_ID,
SPELL_GLAMOUR = INVALID_ID,
SPELL_TRAVELERS_BOON = INVALID_ID,
SPELL_BLIND = INVALID_ID,
SPELL_DARKFIRE_BOLT = INVALID_ID,
SPELL_LIFEDRAIN = INVALID_ID,
SPELL_LEVITATE = INVALID_ID,
SPELL_MISTFORM = INVALID_ID,
SPELL_FEAR = INVALID_ID,
SPELL_FLAME_BLAST = INVALID_ID,
SPELL_FLIGHT = INVALID_ID,
SPELL_WING_BUFFET = INVALID_ID,
SPELL_SHOOT_CANNON_BALL = INVALID_ID,
SPELL_SHOOT_DRAGON = INVALID_ID;

std::vector<int64_t> ALL_SPELLS;
std::map<int64_t, std::string> ENUM_TO_STRING_SPELLS;

void makeEnumSpells_6()
{
    SPELL_TORCH_LIGHT = 1;
    SPELL_FLAME_ARROW = 2;
    SPELL_PROTECTION_FROM_FIRE = 3;
    SPELL_FIRE_BOLT = 4;
    SPELL_HASTE = 5;
    SPELL_FIREBALL = 6;
    SPELL_RING_OF_FIRE = 7;
    SPELL_FIRE_BLAST = 8;
    SPELL_METEOR_SHOWER = 9;
    SPELL_INFERNO = 10;
    SPELL_INCINERATE = 11;
    SPELL_WIZARD_EYE = 12;
    SPELL_STATIC_CHARGE = 13;
    SPELL_PROTECTION_FROM_ELECTRICITY = 14;
    SPELL_SPARKS = 15;
    SPELL_FEATHER_FALL = 16;
    SPELL_SHIELD = 17;
    SPELL_LIGHTNING_BOLT = 18;
    SPELL_JUMP = 19;
    SPELL_IMPLOSION = 20;
    SPELL_FLY = 21;
    SPELL_STARBURST = 22;
    SPELL_AWAKEN = 23;
    SPELL_COLD_BEAM = 24;
    SPELL_PROTECTION_FROM_COLD = 25;
    SPELL_POISON_SPRAY = 26;
    SPELL_WATER_WALK = 27;
    SPELL_ICE_BOLT = 28;
    SPELL_ENCHANT_ITEM = 29;
    SPELL_ACID_BURST = 30;
    SPELL_TOWN_PORTAL = 31;
    SPELL_ICE_BLAST = 32;
    SPELL_LLOYDS_BEACON = 33;
    SPELL_STUN = 34;
    SPELL_MAGIC_ARROW = 35;
    SPELL_PROTECTION_FROM_MAGIC = 36;
    SPELL_DEADLY_SWARM = 37;
    SPELL_STONE_SKIN = 38;
    SPELL_BLADES = 39;
    SPELL_STONE_TO_FLESH = 40;
    SPELL_ROCK_BLAST = 41;
    SPELL_TURN_TO_STONE = 42;
    SPELL_DEATH_BLOSSOM = 43;
    SPELL_MASS_DISTORTION = 44;
    SPELL_SPIRIT_ARROW = 45;
    SPELL_BLESS = 46;
    SPELL_HEALING_TOUCH = 47;
    SPELL_LUCKY_DAY = 48;
    SPELL_REMOVE_CURSE = 49;
    SPELL_GUARDIAN_ANGEL = 50;
    SPELL_HEROISM = 51;
    SPELL_TURN_UNDEAD = 52;
    SPELL_RAISE_DEAD = 53;
    SPELL_SHARED_LIFE = 54;
    SPELL_RESURRECTION = 55;
    SPELL_MEDITATION = 56;
    SPELL_REMOVE_FEAR = 57;
    SPELL_MIND_BLAST = 58;
    SPELL_PRECISION = 59;
    SPELL_CURE_PARALYSIS = 60;
    SPELL_CHARM = 61;
    SPELL_MASS_FEAR = 62;
    SPELL_FEEBLEMIND = 63;
    SPELL_CURE_INSANITY = 64;
    SPELL_PSYCHIC_SHOCK = 65;
    SPELL_TELEKINESIS = 66;
    SPELL_CURE_WEAKNESS = 67;
    SPELL_FIRST_AID = 68;
    SPELL_PROTECTION_FROM_POISON = 69;
    SPELL_HARM = 70;
    SPELL_CURE_WOUNDS = 71;
    SPELL_CURE_POISON = 72;
    SPELL_SPEED = 73;
    SPELL_CURE_DISEASE = 74;
    SPELL_POWER = 75;
    SPELL_FLYING_FIST = 76;
    SPELL_POWER_CURE = 77;
    SPELL_CREATE_FOOD = 78;
    SPELL_GOLDEN_TOUCH = 79;
    SPELL_DISPEL_MAGIC = 80;
    SPELL_SLOW = 81;
    SPELL_DESTROY_UNDEAD = 82;
    SPELL_DAY_OF_THE_GODS = 83;
    SPELL_PRISMATIC_LIGHT = 84;
    SPELL_HOUR_OF_POWER = 85;
    SPELL_PARALYZE = 86;
    SPELL_SUN_RAY = 87;
    SPELL_DIVINE_INTERVENTION = 88;
    SPELL_REANIMATE = 89;
    SPELL_TOXIC_CLOUD = 90;
    SPELL_MASS_CURSE = 91;
    SPELL_SHRAPMETAL = 92;
    SPELL_SHRINKING_RAY = 93;
    SPELL_DAY_OF_PROTECTION = 94;
    SPELL_FINGER_OF_DEATH = 95;
    SPELL_MOON_RAY = 96;
    SPELL_DRAGON_BREATH = 97;
    SPELL_ARMAGEDDON = 98;
    SPELL_DARK_CONTAINMENT = 99;
    SPELL_SHOOT = 100;
    SPELL_SHOOT_FIRE = 101;
    SPELL_SHOOT_BLASTER = 102;

    ALL_SPELLS = { SPELL_TORCH_LIGHT, SPELL_FLAME_ARROW, SPELL_PROTECTION_FROM_FIRE, SPELL_FIRE_BOLT, SPELL_HASTE, SPELL_FIREBALL, SPELL_RING_OF_FIRE, SPELL_FIRE_BLAST, SPELL_METEOR_SHOWER, SPELL_INFERNO, SPELL_INCINERATE, SPELL_WIZARD_EYE, SPELL_STATIC_CHARGE, SPELL_PROTECTION_FROM_ELECTRICITY, SPELL_SPARKS, SPELL_FEATHER_FALL, SPELL_SHIELD, SPELL_LIGHTNING_BOLT, SPELL_JUMP, SPELL_IMPLOSION, SPELL_FLY, SPELL_STARBURST, SPELL_AWAKEN, SPELL_COLD_BEAM, SPELL_PROTECTION_FROM_COLD, SPELL_POISON_SPRAY, SPELL_WATER_WALK, SPELL_ICE_BOLT, SPELL_ENCHANT_ITEM, SPELL_ACID_BURST, SPELL_TOWN_PORTAL, SPELL_ICE_BLAST, SPELL_LLOYDS_BEACON, SPELL_STUN, SPELL_MAGIC_ARROW, SPELL_PROTECTION_FROM_MAGIC, SPELL_DEADLY_SWARM, SPELL_STONE_SKIN, SPELL_BLADES, SPELL_STONE_TO_FLESH, SPELL_ROCK_BLAST, SPELL_TURN_TO_STONE, SPELL_DEATH_BLOSSOM, SPELL_MASS_DISTORTION, SPELL_SPIRIT_ARROW, SPELL_BLESS, SPELL_HEALING_TOUCH, SPELL_LUCKY_DAY, SPELL_REMOVE_CURSE, SPELL_GUARDIAN_ANGEL, SPELL_HEROISM, SPELL_TURN_UNDEAD, SPELL_RAISE_DEAD, SPELL_SHARED_LIFE, SPELL_RESURRECTION, SPELL_MEDITATION, SPELL_REMOVE_FEAR, SPELL_MIND_BLAST, SPELL_PRECISION, SPELL_CURE_PARALYSIS, SPELL_CHARM, SPELL_MASS_FEAR, SPELL_FEEBLEMIND, SPELL_CURE_INSANITY, SPELL_PSYCHIC_SHOCK, SPELL_TELEKINESIS, SPELL_CURE_WEAKNESS, SPELL_FIRST_AID, SPELL_PROTECTION_FROM_POISON, SPELL_HARM, SPELL_CURE_WOUNDS, SPELL_CURE_POISON, SPELL_SPEED, SPELL_CURE_DISEASE, SPELL_POWER, SPELL_FLYING_FIST, SPELL_POWER_CURE, SPELL_CREATE_FOOD, SPELL_GOLDEN_TOUCH, SPELL_DISPEL_MAGIC, SPELL_SLOW, SPELL_DESTROY_UNDEAD, SPELL_DAY_OF_THE_GODS, SPELL_PRISMATIC_LIGHT, SPELL_HOUR_OF_POWER, SPELL_PARALYZE, SPELL_SUN_RAY, SPELL_DIVINE_INTERVENTION, SPELL_REANIMATE, SPELL_TOXIC_CLOUD, SPELL_MASS_CURSE, SPELL_SHRAPMETAL, SPELL_SHRINKING_RAY, SPELL_DAY_OF_PROTECTION, SPELL_FINGER_OF_DEATH, SPELL_MOON_RAY, SPELL_DRAGON_BREATH, SPELL_ARMAGEDDON, SPELL_DARK_CONTAINMENT, SPELL_SHOOT, SPELL_SHOOT_FIRE, SPELL_SHOOT_BLASTER };

    ENUM_TO_STRING_SPELLS = { {SPELL_TORCH_LIGHT, "TorchLight"}, {SPELL_FLAME_ARROW, "FlameArrow"}, {SPELL_PROTECTION_FROM_FIRE, "ProtectionFromFire"}, {SPELL_FIRE_BOLT, "FireBolt"}, {SPELL_HASTE, "Haste"}, {SPELL_FIREBALL, "Fireball"}, {SPELL_RING_OF_FIRE, "RingOfFire"}, {SPELL_FIRE_BLAST, "FireBlast"}, {SPELL_METEOR_SHOWER, "MeteorShower"}, {SPELL_INFERNO, "Inferno"}, {SPELL_INCINERATE, "Incinerate"}, {SPELL_WIZARD_EYE, "WizardEye"}, {SPELL_STATIC_CHARGE, "StaticCharge"}, {SPELL_PROTECTION_FROM_ELECTRICITY, "ProtectionFromElectricity"}, {SPELL_SPARKS, "Sparks"}, {SPELL_FEATHER_FALL, "FeatherFall"}, {SPELL_SHIELD, "Shield"}, {SPELL_LIGHTNING_BOLT, "LightningBolt"}, {SPELL_JUMP, "Jump"}, {SPELL_IMPLOSION, "Implosion"}, {SPELL_FLY, "Fly"}, {SPELL_STARBURST, "Starburst"}, {SPELL_AWAKEN, "Awaken"}, {SPELL_COLD_BEAM, "ColdBeam"}, {SPELL_PROTECTION_FROM_COLD, "ProtectionFromCold"}, {SPELL_POISON_SPRAY, "PoisonSpray"}, {SPELL_WATER_WALK, "WaterWalk"}, {SPELL_ICE_BOLT, "IceBolt"}, {SPELL_ENCHANT_ITEM, "EnchantItem"}, {SPELL_ACID_BURST, "AcidBurst"}, {SPELL_TOWN_PORTAL, "TownPortal"}, {SPELL_ICE_BLAST, "IceBlast"}, {SPELL_LLOYDS_BEACON, "LloydsBeacon"}, {SPELL_STUN, "Stun"}, {SPELL_MAGIC_ARROW, "MagicArrow"}, {SPELL_PROTECTION_FROM_MAGIC, "ProtectionFromMagic"}, {SPELL_DEADLY_SWARM, "DeadlySwarm"}, {SPELL_STONE_SKIN, "StoneSkin"}, {SPELL_BLADES, "Blades"}, {SPELL_STONE_TO_FLESH, "StoneToFlesh"}, {SPELL_ROCK_BLAST, "RockBlast"}, {SPELL_TURN_TO_STONE, "TurnToStone"}, {SPELL_DEATH_BLOSSOM, "DeathBlossom"}, {SPELL_MASS_DISTORTION, "MassDistortion"}, {SPELL_SPIRIT_ARROW, "SpiritArrow"}, {SPELL_BLESS, "Bless"}, {SPELL_HEALING_TOUCH, "HealingTouch"}, {SPELL_LUCKY_DAY, "LuckyDay"}, {SPELL_REMOVE_CURSE, "RemoveCurse"}, {SPELL_GUARDIAN_ANGEL, "GuardianAngel"}, {SPELL_HEROISM, "Heroism"}, {SPELL_TURN_UNDEAD, "TurnUndead"}, {SPELL_RAISE_DEAD, "RaiseDead"}, {SPELL_SHARED_LIFE, "SharedLife"}, {SPELL_RESURRECTION, "Resurrection"}, {SPELL_MEDITATION, "Meditation"}, {SPELL_REMOVE_FEAR, "RemoveFear"}, {SPELL_MIND_BLAST, "MindBlast"}, {SPELL_PRECISION, "Precision"}, {SPELL_CURE_PARALYSIS, "CureParalysis"}, {SPELL_CHARM, "Charm"}, {SPELL_MASS_FEAR, "MassFear"}, {SPELL_FEEBLEMIND, "Feeblemind"}, {SPELL_CURE_INSANITY, "CureInsanity"}, {SPELL_PSYCHIC_SHOCK, "PsychicShock"}, {SPELL_TELEKINESIS, "Telekinesis"}, {SPELL_CURE_WEAKNESS, "CureWeakness"}, {SPELL_FIRST_AID, "FirstAid"}, {SPELL_PROTECTION_FROM_POISON, "ProtectionFromPoison"}, {SPELL_HARM, "Harm"}, {SPELL_CURE_WOUNDS, "CureWounds"}, {SPELL_CURE_POISON, "CurePoison"}, {SPELL_SPEED, "Speed"}, {SPELL_CURE_DISEASE, "CureDisease"}, {SPELL_POWER, "Power"}, {SPELL_FLYING_FIST, "FlyingFist"}, {SPELL_POWER_CURE, "PowerCure"}, {SPELL_CREATE_FOOD, "CreateFood"}, {SPELL_GOLDEN_TOUCH, "GoldenTouch"}, {SPELL_DISPEL_MAGIC, "DispelMagic"}, {SPELL_SLOW, "Slow"}, {SPELL_DESTROY_UNDEAD, "DestroyUndead"}, {SPELL_DAY_OF_THE_GODS, "DayOfTheGods"}, {SPELL_PRISMATIC_LIGHT, "PrismaticLight"}, {SPELL_HOUR_OF_POWER, "HourOfPower"}, {SPELL_PARALYZE, "Paralyze"}, {SPELL_SUN_RAY, "SunRay"}, {SPELL_DIVINE_INTERVENTION, "DivineIntervention"}, {SPELL_REANIMATE, "Reanimate"}, {SPELL_TOXIC_CLOUD, "ToxicCloud"}, {SPELL_MASS_CURSE, "MassCurse"}, {SPELL_SHRAPMETAL, "Shrapmetal"}, {SPELL_SHRINKING_RAY, "ShrinkingRay"}, {SPELL_DAY_OF_PROTECTION, "DayOfProtection"}, {SPELL_FINGER_OF_DEATH, "FingerOfDeath"}, {SPELL_MOON_RAY, "MoonRay"}, {SPELL_DRAGON_BREATH, "DragonBreath"}, {SPELL_ARMAGEDDON, "Armageddon"}, {SPELL_DARK_CONTAINMENT, "DarkContainment"}, {SPELL_SHOOT, "Shoot"}, {SPELL_SHOOT_FIRE, "ShootFire"}, {SPELL_SHOOT_BLASTER, "ShootBlaster"} };
}

void makeEnumSpells_7()
{
    SPELL_TORCH_LIGHT = 1;
    SPELL_FIRE_BOLT = 2;
    SPELL_FIRE_RESISTANCE = 3;
    SPELL_FIRE_AURA = 4;
    SPELL_HASTE = 5;
    SPELL_FIREBALL = 6;
    SPELL_FIRE_SPIKE = 7;
    SPELL_IMMOLATION = 8;
    SPELL_METEOR_SHOWER = 9;
    SPELL_INFERNO = 10;
    SPELL_INCINERATE = 11;
    SPELL_WIZARD_EYE = 12;
    SPELL_FEATHER_FALL = 13;
    SPELL_AIR_RESISTANCE = 14;
    SPELL_SPARKS = 15;
    SPELL_JUMP = 16;
    SPELL_SHIELD = 17;
    SPELL_LIGHTNING_BOLT = 18;
    SPELL_INVISIBILITY = 19;
    SPELL_IMPLOSION = 20;
    SPELL_FLY = 21;
    SPELL_STARBURST = 22;
    SPELL_AWAKEN = 23;
    SPELL_POISON_SPRAY = 24;
    SPELL_WATER_RESISTANCE = 25;
    SPELL_ICE_BOLT = 26;
    SPELL_WATER_WALK = 27;
    SPELL_RECHARGE_ITEM = 28;
    SPELL_ACID_BURST = 29;
    SPELL_ENCHANT_ITEM = 30;
    SPELL_TOWN_PORTAL = 31;
    SPELL_ICE_BLAST = 32;
    SPELL_LLOYDS_BEACON = 33;
    SPELL_STUN = 34;
    SPELL_SLOW = 35;
    SPELL_EARTH_RESISTANCE = 36;
    SPELL_DEADLY_SWARM = 37;
    SPELL_STONE_SKIN = 38;
    SPELL_BLADES = 39;
    SPELL_STONE_TO_FLESH = 40;
    SPELL_ROCK_BLAST = 41;
    SPELL_TELEKINESIS = 42;
    SPELL_DEATH_BLOSSOM = 43;
    SPELL_MASS_DISTORTION = 44;
    SPELL_DETECT_LIFE = 45;
    SPELL_BLESS = 46;
    SPELL_FATE = 47;
    SPELL_TURN_UNDEAD = 48;
    SPELL_REMOVE_CURSE = 49;
    SPELL_PRESERVATION = 50;
    SPELL_HEROISM = 51;
    SPELL_SPIRIT_LASH = 52;
    SPELL_RAISE_DEAD = 53;
    SPELL_SHARED_LIFE = 54;
    SPELL_RESURRECTION = 55;
    SPELL_REMOVE_FEAR = 56;
    SPELL_MIND_BLAST = 57;
    SPELL_MIND_RESISTANCE = 58;
    SPELL_TELEPATHY = 59;
    SPELL_CHARM = 60;
    SPELL_CURE_PARALYSIS = 61;
    SPELL_BERSERK = 62;
    SPELL_MASS_FEAR = 63;
    SPELL_CURE_INSANITY = 64;
    SPELL_PSYCHIC_SHOCK = 65;
    SPELL_ENSLAVE = 66;
    SPELL_CURE_WEAKNESS = 67;
    SPELL_HEAL = 68;
    SPELL_BODY_RESISTANCE = 69;
    SPELL_HARM = 70;
    SPELL_REGENERATION = 71;
    SPELL_CURE_POISON = 72;
    SPELL_HAMMERHANDS = 73;
    SPELL_CURE_DISEASE = 74;
    SPELL_PROTECTION_FROM_MAGIC = 75;
    SPELL_FLYING_FIST = 76;
    SPELL_POWER_CURE = 77;
    SPELL_LIGHT_BOLT = 78;
    SPELL_DESTROY_UNDEAD = 79;
    SPELL_DISPEL_MAGIC = 80;
    SPELL_PARALYZE = 81;
    SPELL_SUMMON_ELEMENTAL = 82;
    SPELL_DAY_OF_THE_GODS = 83;
    SPELL_PRISMATIC_LIGHT = 84;
    SPELL_DAY_OF_PROTECTION = 85;
    SPELL_HOUR_OF_POWER = 86;
    SPELL_SUNRAY = 87;
    SPELL_DIVINE_INTERVENTION = 88;
    SPELL_REANIMATE = 89;
    SPELL_TOXIC_CLOUD = 90;
    SPELL_VAMPIRIC_WEAPON = 91;
    SPELL_SHRINKING_RAY = 92;
    SPELL_SHRAPMETAL = 93;
    SPELL_CONTROL_UNDEAD = 94;
    SPELL_PAIN_REFLECTION = 95;
    SPELL_SACRIFICE = 96;
    SPELL_DRAGON_BREATH = 97;
    SPELL_ARMAGEDDON = 98;
    SPELL_SOULDRINKER = 99;
    SPELL_SHOOT = 100;
    SPELL_SHOOT_FIRE = 101;
    SPELL_SHOOT_BLASTER = 102;

    ALL_SPELLS = { SPELL_TORCH_LIGHT, SPELL_FIRE_BOLT, SPELL_FIRE_RESISTANCE, SPELL_FIRE_AURA, SPELL_HASTE, SPELL_FIREBALL, SPELL_FIRE_SPIKE, SPELL_IMMOLATION, SPELL_METEOR_SHOWER, SPELL_INFERNO, SPELL_INCINERATE, SPELL_WIZARD_EYE, SPELL_FEATHER_FALL, SPELL_AIR_RESISTANCE, SPELL_SPARKS, SPELL_JUMP, SPELL_SHIELD, SPELL_LIGHTNING_BOLT, SPELL_INVISIBILITY, SPELL_IMPLOSION, SPELL_FLY, SPELL_STARBURST, SPELL_AWAKEN, SPELL_POISON_SPRAY, SPELL_WATER_RESISTANCE, SPELL_ICE_BOLT, SPELL_WATER_WALK, SPELL_RECHARGE_ITEM, SPELL_ACID_BURST, SPELL_ENCHANT_ITEM, SPELL_TOWN_PORTAL, SPELL_ICE_BLAST, SPELL_LLOYDS_BEACON, SPELL_STUN, SPELL_SLOW, SPELL_EARTH_RESISTANCE, SPELL_DEADLY_SWARM, SPELL_STONE_SKIN, SPELL_BLADES, SPELL_STONE_TO_FLESH, SPELL_ROCK_BLAST, SPELL_TELEKINESIS, SPELL_DEATH_BLOSSOM, SPELL_MASS_DISTORTION, SPELL_DETECT_LIFE, SPELL_BLESS, SPELL_FATE, SPELL_TURN_UNDEAD, SPELL_REMOVE_CURSE, SPELL_PRESERVATION, SPELL_HEROISM, SPELL_SPIRIT_LASH, SPELL_RAISE_DEAD, SPELL_SHARED_LIFE, SPELL_RESURRECTION, SPELL_REMOVE_FEAR, SPELL_MIND_BLAST, SPELL_MIND_RESISTANCE, SPELL_TELEPATHY, SPELL_CHARM, SPELL_CURE_PARALYSIS, SPELL_BERSERK, SPELL_MASS_FEAR, SPELL_CURE_INSANITY, SPELL_PSYCHIC_SHOCK, SPELL_ENSLAVE, SPELL_CURE_WEAKNESS, SPELL_HEAL, SPELL_BODY_RESISTANCE, SPELL_HARM, SPELL_REGENERATION, SPELL_CURE_POISON, SPELL_HAMMERHANDS, SPELL_CURE_DISEASE, SPELL_PROTECTION_FROM_MAGIC, SPELL_FLYING_FIST, SPELL_POWER_CURE, SPELL_LIGHT_BOLT, SPELL_DESTROY_UNDEAD, SPELL_DISPEL_MAGIC, SPELL_PARALYZE, SPELL_SUMMON_ELEMENTAL, SPELL_DAY_OF_THE_GODS, SPELL_PRISMATIC_LIGHT, SPELL_DAY_OF_PROTECTION, SPELL_HOUR_OF_POWER, SPELL_SUNRAY, SPELL_DIVINE_INTERVENTION, SPELL_REANIMATE, SPELL_TOXIC_CLOUD, SPELL_VAMPIRIC_WEAPON, SPELL_SHRINKING_RAY, SPELL_SHRAPMETAL, SPELL_CONTROL_UNDEAD, SPELL_PAIN_REFLECTION, SPELL_SACRIFICE, SPELL_DRAGON_BREATH, SPELL_ARMAGEDDON, SPELL_SOULDRINKER, SPELL_SHOOT, SPELL_SHOOT_FIRE, SPELL_SHOOT_BLASTER };

    ENUM_TO_STRING_SPELLS = { {SPELL_TORCH_LIGHT, "TorchLight"}, {SPELL_FIRE_BOLT, "FireBolt"}, {SPELL_FIRE_RESISTANCE, "FireResistance"}, {SPELL_FIRE_AURA, "FireAura"}, {SPELL_HASTE, "Haste"}, {SPELL_FIREBALL, "Fireball"}, {SPELL_FIRE_SPIKE, "FireSpike"}, {SPELL_IMMOLATION, "Immolation"}, {SPELL_METEOR_SHOWER, "MeteorShower"}, {SPELL_INFERNO, "Inferno"}, {SPELL_INCINERATE, "Incinerate"}, {SPELL_WIZARD_EYE, "WizardEye"}, {SPELL_FEATHER_FALL, "FeatherFall"}, {SPELL_AIR_RESISTANCE, "AirResistance"}, {SPELL_SPARKS, "Sparks"}, {SPELL_JUMP, "Jump"}, {SPELL_SHIELD, "Shield"}, {SPELL_LIGHTNING_BOLT, "LightningBolt"}, {SPELL_INVISIBILITY, "Invisibility"}, {SPELL_IMPLOSION, "Implosion"}, {SPELL_FLY, "Fly"}, {SPELL_STARBURST, "Starburst"}, {SPELL_AWAKEN, "Awaken"}, {SPELL_POISON_SPRAY, "PoisonSpray"}, {SPELL_WATER_RESISTANCE, "WaterResistance"}, {SPELL_ICE_BOLT, "IceBolt"}, {SPELL_WATER_WALK, "WaterWalk"}, {SPELL_RECHARGE_ITEM, "RechargeItem"}, {SPELL_ACID_BURST, "AcidBurst"}, {SPELL_ENCHANT_ITEM, "EnchantItem"}, {SPELL_TOWN_PORTAL, "TownPortal"}, {SPELL_ICE_BLAST, "IceBlast"}, {SPELL_LLOYDS_BEACON, "LloydsBeacon"}, {SPELL_STUN, "Stun"}, {SPELL_SLOW, "Slow"}, {SPELL_EARTH_RESISTANCE, "EarthResistance"}, {SPELL_DEADLY_SWARM, "DeadlySwarm"}, {SPELL_STONE_SKIN, "StoneSkin"}, {SPELL_BLADES, "Blades"}, {SPELL_STONE_TO_FLESH, "StoneToFlesh"}, {SPELL_ROCK_BLAST, "RockBlast"}, {SPELL_TELEKINESIS, "Telekinesis"}, {SPELL_DEATH_BLOSSOM, "DeathBlossom"}, {SPELL_MASS_DISTORTION, "MassDistortion"}, {SPELL_DETECT_LIFE, "DetectLife"}, {SPELL_BLESS, "Bless"}, {SPELL_FATE, "Fate"}, {SPELL_TURN_UNDEAD, "TurnUndead"}, {SPELL_REMOVE_CURSE, "RemoveCurse"}, {SPELL_PRESERVATION, "Preservation"}, {SPELL_HEROISM, "Heroism"}, {SPELL_SPIRIT_LASH, "SpiritLash"}, {SPELL_RAISE_DEAD, "RaiseDead"}, {SPELL_SHARED_LIFE, "SharedLife"}, {SPELL_RESURRECTION, "Resurrection"}, {SPELL_REMOVE_FEAR, "RemoveFear"}, {SPELL_MIND_BLAST, "MindBlast"}, {SPELL_MIND_RESISTANCE, "MindResistance"}, {SPELL_TELEPATHY, "Telepathy"}, {SPELL_CHARM, "Charm"}, {SPELL_CURE_PARALYSIS, "CureParalysis"}, {SPELL_BERSERK, "Berserk"}, {SPELL_MASS_FEAR, "MassFear"}, {SPELL_CURE_INSANITY, "CureInsanity"}, {SPELL_PSYCHIC_SHOCK, "PsychicShock"}, {SPELL_ENSLAVE, "Enslave"}, {SPELL_CURE_WEAKNESS, "CureWeakness"}, {SPELL_HEAL, "Heal"}, {SPELL_BODY_RESISTANCE, "BodyResistance"}, {SPELL_HARM, "Harm"}, {SPELL_REGENERATION, "Regeneration"}, {SPELL_CURE_POISON, "CurePoison"}, {SPELL_HAMMERHANDS, "Hammerhands"}, {SPELL_CURE_DISEASE, "CureDisease"}, {SPELL_PROTECTION_FROM_MAGIC, "ProtectionFromMagic"}, {SPELL_FLYING_FIST, "FlyingFist"}, {SPELL_POWER_CURE, "PowerCure"}, {SPELL_LIGHT_BOLT, "LightBolt"}, {SPELL_DESTROY_UNDEAD, "DestroyUndead"}, {SPELL_DISPEL_MAGIC, "DispelMagic"}, {SPELL_PARALYZE, "Paralyze"}, {SPELL_SUMMON_ELEMENTAL, "SummonElemental"}, {SPELL_DAY_OF_THE_GODS, "DayOfTheGods"}, {SPELL_PRISMATIC_LIGHT, "PrismaticLight"}, {SPELL_DAY_OF_PROTECTION, "DayOfProtection"}, {SPELL_HOUR_OF_POWER, "HourOfPower"}, {SPELL_SUNRAY, "Sunray"}, {SPELL_DIVINE_INTERVENTION, "DivineIntervention"}, {SPELL_REANIMATE, "Reanimate"}, {SPELL_TOXIC_CLOUD, "ToxicCloud"}, {SPELL_VAMPIRIC_WEAPON, "VampiricWeapon"}, {SPELL_SHRINKING_RAY, "ShrinkingRay"}, {SPELL_SHRAPMETAL, "Shrapmetal"}, {SPELL_CONTROL_UNDEAD, "ControlUndead"}, {SPELL_PAIN_REFLECTION, "PainReflection"}, {SPELL_SACRIFICE, "Sacrifice"}, {SPELL_DRAGON_BREATH, "DragonBreath"}, {SPELL_ARMAGEDDON, "Armageddon"}, {SPELL_SOULDRINKER, "Souldrinker"}, {SPELL_SHOOT, "Shoot"}, {SPELL_SHOOT_FIRE, "ShootFire"}, {SPELL_SHOOT_BLASTER, "ShootBlaster"} };
}

void makeEnumSpells_8()
{
    SPELL_TORCH_LIGHT = 1;
    SPELL_FIRE_BOLT = 2;
    SPELL_FIRE_RESISTANCE = 3;
    SPELL_FIRE_AURA = 4;
    SPELL_HASTE = 5;
    SPELL_FIREBALL = 6;
    SPELL_FIRE_SPIKE = 7;
    SPELL_IMMOLATION = 8;
    SPELL_METEOR_SHOWER = 9;
    SPELL_INFERNO = 10;
    SPELL_INCINERATE = 11;
    SPELL_WIZARD_EYE = 12;
    SPELL_FEATHER_FALL = 13;
    SPELL_AIR_RESISTANCE = 14;
    SPELL_SPARKS = 15;
    SPELL_JUMP = 16;
    SPELL_SHIELD = 17;
    SPELL_LIGHTNING_BOLT = 18;
    SPELL_INVISIBILITY = 19;
    SPELL_IMPLOSION = 20;
    SPELL_FLY = 21;
    SPELL_STARBURST = 22;
    SPELL_AWAKEN = 23;
    SPELL_POISON_SPRAY = 24;
    SPELL_WATER_RESISTANCE = 25;
    SPELL_ICE_BOLT = 26;
    SPELL_WATER_WALK = 27;
    SPELL_RECHARGE_ITEM = 28;
    SPELL_ACID_BURST = 29;
    SPELL_ENCHANT_ITEM = 30;
    SPELL_TOWN_PORTAL = 31;
    SPELL_ICE_BLAST = 32;
    SPELL_LLOYDS_BEACON = 33;
    SPELL_STUN = 34;
    SPELL_SLOW = 35;
    SPELL_EARTH_RESISTANCE = 36;
    SPELL_DEADLY_SWARM = 37;
    SPELL_STONE_SKIN = 38;
    SPELL_BLADES = 39;
    SPELL_STONE_TO_FLESH = 40;
    SPELL_ROCK_BLAST = 41;
    SPELL_TELEKINESIS = 42;
    SPELL_DEATH_BLOSSOM = 43;
    SPELL_MASS_DISTORTION = 44;
    SPELL_DETECT_LIFE = 45;
    SPELL_BLESS = 46;
    SPELL_FATE = 47;
    SPELL_TURN_UNDEAD = 48;
    SPELL_REMOVE_CURSE = 49;
    SPELL_PRESERVATION = 50;
    SPELL_HEROISM = 51;
    SPELL_SPIRIT_LASH = 52;
    SPELL_RAISE_DEAD = 53;
    SPELL_SHARED_LIFE = 54;
    SPELL_RESURRECTION = 55;
    SPELL_TELEPATHY = 56;
    SPELL_REMOVE_FEAR = 57;
    SPELL_MIND_RESISTANCE = 58;
    SPELL_MIND_BLAST = 59;
    SPELL_CURE_PARALYSIS = 61;
    SPELL_BERSERK = 62;
    SPELL_MASS_FEAR = 63;
    SPELL_CURE_INSANITY = 64;
    SPELL_PSYCHIC_SHOCK = 65;
    SPELL_ENSLAVE = 66;
    SPELL_CURE_WEAKNESS = 67;
    SPELL_HEAL = 68;
    SPELL_BODY_RESISTANCE = 69;
    SPELL_HARM = 70;
    SPELL_REGENERATION = 71;
    SPELL_CURE_POISON = 72;
    SPELL_HAMMERHANDS = 73;
    SPELL_CURE_DISEASE = 74;
    SPELL_PROTECTION_FROM_MAGIC = 75;
    SPELL_FLYING_FIST = 76;
    SPELL_POWER_CURE = 77;
    SPELL_LIGHT_BOLT = 78;
    SPELL_DESTROY_UNDEAD = 79;
    SPELL_DISPEL_MAGIC = 80;
    SPELL_PARALYZE = 81;
    SPELL_SUMMON_WISP = 82;
    SPELL_DAY_OF_THE_GODS = 83;
    SPELL_PRISMATIC_LIGHT = 84;
    SPELL_DAY_OF_PROTECTION = 85;
    SPELL_HOUR_OF_POWER = 86;
    SPELL_SUNRAY = 87;
    SPELL_DIVINE_INTERVENTION = 88;
    SPELL_REANIMATE = 89;
    SPELL_TOXIC_CLOUD = 90;
    SPELL_VAMPIRIC_WEAPON = 91;
    SPELL_SHRINKING_RAY = 92;
    SPELL_SHRAPMETAL = 93;
    SPELL_CONTROL_UNDEAD = 94;
    SPELL_PAIN_REFLECTION = 95;
    SPELL_DARK_GRASP = 96;
    SPELL_DRAGON_BREATH = 97;
    SPELL_ARMAGEDDON = 98;
    SPELL_SOULDRINKER = 99;
    SPELL_GLAMOUR = 100;
    SPELL_TRAVELERS_BOON = 101;
    SPELL_BLIND = 102;
    SPELL_DARKFIRE_BOLT = 103;
    SPELL_LIFEDRAIN = 111;
    SPELL_LEVITATE = 112;
    SPELL_CHARM = 113;
    SPELL_MISTFORM = 114;
    SPELL_FEAR = 122;
    SPELL_FLAME_BLAST = 123;
    SPELL_FLIGHT = 124;
    SPELL_WING_BUFFET = 125;
    SPELL_SHOOT = 133;
    SPELL_SHOOT_FIRE = 134;
    SPELL_SHOOT_BLASTER = 135;
    SPELL_SHOOT_CANNON_BALL = 136;
    SPELL_SHOOT_DRAGON = 137;

    ALL_SPELLS = { SPELL_TORCH_LIGHT, SPELL_FIRE_BOLT, SPELL_FIRE_RESISTANCE, SPELL_FIRE_AURA, SPELL_HASTE, SPELL_FIREBALL, SPELL_FIRE_SPIKE, SPELL_IMMOLATION, SPELL_METEOR_SHOWER, SPELL_INFERNO, SPELL_INCINERATE, SPELL_WIZARD_EYE, SPELL_FEATHER_FALL, SPELL_AIR_RESISTANCE, SPELL_SPARKS, SPELL_JUMP, SPELL_SHIELD, SPELL_LIGHTNING_BOLT, SPELL_INVISIBILITY, SPELL_IMPLOSION, SPELL_FLY, SPELL_STARBURST, SPELL_AWAKEN, SPELL_POISON_SPRAY, SPELL_WATER_RESISTANCE, SPELL_ICE_BOLT, SPELL_WATER_WALK, SPELL_RECHARGE_ITEM, SPELL_ACID_BURST, SPELL_ENCHANT_ITEM, SPELL_TOWN_PORTAL, SPELL_ICE_BLAST, SPELL_LLOYDS_BEACON, SPELL_STUN, SPELL_SLOW, SPELL_EARTH_RESISTANCE, SPELL_DEADLY_SWARM, SPELL_STONE_SKIN, SPELL_BLADES, SPELL_STONE_TO_FLESH, SPELL_ROCK_BLAST, SPELL_TELEKINESIS, SPELL_DEATH_BLOSSOM, SPELL_MASS_DISTORTION, SPELL_DETECT_LIFE, SPELL_BLESS, SPELL_FATE, SPELL_TURN_UNDEAD, SPELL_REMOVE_CURSE, SPELL_PRESERVATION, SPELL_HEROISM, SPELL_SPIRIT_LASH, SPELL_RAISE_DEAD, SPELL_SHARED_LIFE, SPELL_RESURRECTION, SPELL_TELEPATHY, SPELL_REMOVE_FEAR, SPELL_MIND_RESISTANCE, SPELL_MIND_BLAST, SPELL_CURE_PARALYSIS, SPELL_BERSERK, SPELL_MASS_FEAR, SPELL_CURE_INSANITY, SPELL_PSYCHIC_SHOCK, SPELL_ENSLAVE, SPELL_CURE_WEAKNESS, SPELL_HEAL, SPELL_BODY_RESISTANCE, SPELL_HARM, SPELL_REGENERATION, SPELL_CURE_POISON, SPELL_HAMMERHANDS, SPELL_CURE_DISEASE, SPELL_PROTECTION_FROM_MAGIC, SPELL_FLYING_FIST, SPELL_POWER_CURE, SPELL_LIGHT_BOLT, SPELL_DESTROY_UNDEAD, SPELL_DISPEL_MAGIC, SPELL_PARALYZE, SPELL_SUMMON_WISP, SPELL_DAY_OF_THE_GODS, SPELL_PRISMATIC_LIGHT, SPELL_DAY_OF_PROTECTION, SPELL_HOUR_OF_POWER, SPELL_SUNRAY, SPELL_DIVINE_INTERVENTION, SPELL_REANIMATE, SPELL_TOXIC_CLOUD, SPELL_VAMPIRIC_WEAPON, SPELL_SHRINKING_RAY, SPELL_SHRAPMETAL, SPELL_CONTROL_UNDEAD, SPELL_PAIN_REFLECTION, SPELL_DARK_GRASP, SPELL_DRAGON_BREATH, SPELL_ARMAGEDDON, SPELL_SOULDRINKER, SPELL_GLAMOUR, SPELL_TRAVELERS_BOON, SPELL_BLIND, SPELL_DARKFIRE_BOLT, SPELL_LIFEDRAIN, SPELL_LEVITATE, SPELL_CHARM, SPELL_MISTFORM, SPELL_FEAR, SPELL_FLAME_BLAST, SPELL_FLIGHT, SPELL_WING_BUFFET, SPELL_SHOOT, SPELL_SHOOT_FIRE, SPELL_SHOOT_BLASTER, SPELL_SHOOT_CANNON_BALL, SPELL_SHOOT_DRAGON };

    ENUM_TO_STRING_SPELLS = { {SPELL_TORCH_LIGHT, "TorchLight"}, {SPELL_FIRE_BOLT, "FireBolt"}, {SPELL_FIRE_RESISTANCE, "FireResistance"}, {SPELL_FIRE_AURA, "FireAura"}, {SPELL_HASTE, "Haste"}, {SPELL_FIREBALL, "Fireball"}, {SPELL_FIRE_SPIKE, "FireSpike"}, {SPELL_IMMOLATION, "Immolation"}, {SPELL_METEOR_SHOWER, "MeteorShower"}, {SPELL_INFERNO, "Inferno"}, {SPELL_INCINERATE, "Incinerate"}, {SPELL_WIZARD_EYE, "WizardEye"}, {SPELL_FEATHER_FALL, "FeatherFall"}, {SPELL_AIR_RESISTANCE, "AirResistance"}, {SPELL_SPARKS, "Sparks"}, {SPELL_JUMP, "Jump"}, {SPELL_SHIELD, "Shield"}, {SPELL_LIGHTNING_BOLT, "LightningBolt"}, {SPELL_INVISIBILITY, "Invisibility"}, {SPELL_IMPLOSION, "Implosion"}, {SPELL_FLY, "Fly"}, {SPELL_STARBURST, "Starburst"}, {SPELL_AWAKEN, "Awaken"}, {SPELL_POISON_SPRAY, "PoisonSpray"}, {SPELL_WATER_RESISTANCE, "WaterResistance"}, {SPELL_ICE_BOLT, "IceBolt"}, {SPELL_WATER_WALK, "WaterWalk"}, {SPELL_RECHARGE_ITEM, "RechargeItem"}, {SPELL_ACID_BURST, "AcidBurst"}, {SPELL_ENCHANT_ITEM, "EnchantItem"}, {SPELL_TOWN_PORTAL, "TownPortal"}, {SPELL_ICE_BLAST, "IceBlast"}, {SPELL_LLOYDS_BEACON, "LloydsBeacon"}, {SPELL_STUN, "Stun"}, {SPELL_SLOW, "Slow"}, {SPELL_EARTH_RESISTANCE, "EarthResistance"}, {SPELL_DEADLY_SWARM, "DeadlySwarm"}, {SPELL_STONE_SKIN, "StoneSkin"}, {SPELL_BLADES, "Blades"}, {SPELL_STONE_TO_FLESH, "StoneToFlesh"}, {SPELL_ROCK_BLAST, "RockBlast"}, {SPELL_TELEKINESIS, "Telekinesis"}, {SPELL_DEATH_BLOSSOM, "DeathBlossom"}, {SPELL_MASS_DISTORTION, "MassDistortion"}, {SPELL_DETECT_LIFE, "DetectLife"}, {SPELL_BLESS, "Bless"}, {SPELL_FATE, "Fate"}, {SPELL_TURN_UNDEAD, "TurnUndead"}, {SPELL_REMOVE_CURSE, "RemoveCurse"}, {SPELL_PRESERVATION, "Preservation"}, {SPELL_HEROISM, "Heroism"}, {SPELL_SPIRIT_LASH, "SpiritLash"}, {SPELL_RAISE_DEAD, "RaiseDead"}, {SPELL_SHARED_LIFE, "SharedLife"}, {SPELL_RESURRECTION, "Resurrection"}, {SPELL_TELEPATHY, "Telepathy"}, {SPELL_REMOVE_FEAR, "RemoveFear"}, {SPELL_MIND_RESISTANCE, "MindResistance"}, {SPELL_MIND_BLAST, "MindBlast"}, {SPELL_CURE_PARALYSIS, "CureParalysis"}, {SPELL_BERSERK, "Berserk"}, {SPELL_MASS_FEAR, "MassFear"}, {SPELL_CURE_INSANITY, "CureInsanity"}, {SPELL_PSYCHIC_SHOCK, "PsychicShock"}, {SPELL_ENSLAVE, "Enslave"}, {SPELL_CURE_WEAKNESS, "CureWeakness"}, {SPELL_HEAL, "Heal"}, {SPELL_BODY_RESISTANCE, "BodyResistance"}, {SPELL_HARM, "Harm"}, {SPELL_REGENERATION, "Regeneration"}, {SPELL_CURE_POISON, "CurePoison"}, {SPELL_HAMMERHANDS, "Hammerhands"}, {SPELL_CURE_DISEASE, "CureDisease"}, {SPELL_PROTECTION_FROM_MAGIC, "ProtectionFromMagic"}, {SPELL_FLYING_FIST, "FlyingFist"}, {SPELL_POWER_CURE, "PowerCure"}, {SPELL_LIGHT_BOLT, "LightBolt"}, {SPELL_DESTROY_UNDEAD, "DestroyUndead"}, {SPELL_DISPEL_MAGIC, "DispelMagic"}, {SPELL_PARALYZE, "Paralyze"}, {SPELL_SUMMON_WISP, "SummonWisp"}, {SPELL_DAY_OF_THE_GODS, "DayOfTheGods"}, {SPELL_PRISMATIC_LIGHT, "PrismaticLight"}, {SPELL_DAY_OF_PROTECTION, "DayOfProtection"}, {SPELL_HOUR_OF_POWER, "HourOfPower"}, {SPELL_SUNRAY, "Sunray"}, {SPELL_DIVINE_INTERVENTION, "DivineIntervention"}, {SPELL_REANIMATE, "Reanimate"}, {SPELL_TOXIC_CLOUD, "ToxicCloud"}, {SPELL_VAMPIRIC_WEAPON, "VampiricWeapon"}, {SPELL_SHRINKING_RAY, "ShrinkingRay"}, {SPELL_SHRAPMETAL, "Shrapmetal"}, {SPELL_CONTROL_UNDEAD, "ControlUndead"}, {SPELL_PAIN_REFLECTION, "PainReflection"}, {SPELL_DARK_GRASP, "DarkGrasp"}, {SPELL_DRAGON_BREATH, "DragonBreath"}, {SPELL_ARMAGEDDON, "Armageddon"}, {SPELL_SOULDRINKER, "Souldrinker"}, {SPELL_GLAMOUR, "Glamour"}, {SPELL_TRAVELERS_BOON, "TravelersBoon"}, {SPELL_BLIND, "Blind"}, {SPELL_DARKFIRE_BOLT, "DarkfireBolt"}, {SPELL_LIFEDRAIN, "Lifedrain"}, {SPELL_LEVITATE, "Levitate"}, {SPELL_CHARM, "Charm"}, {SPELL_MISTFORM, "Mistform"}, {SPELL_FEAR, "Fear"}, {SPELL_FLAME_BLAST, "FlameBlast"}, {SPELL_FLIGHT, "Flight"}, {SPELL_WING_BUFFET, "WingBuffet"}, {SPELL_SHOOT, "Shoot"}, {SPELL_SHOOT_FIRE, "ShootFire"}, {SPELL_SHOOT_BLASTER, "ShootBlaster"}, {SPELL_SHOOT_CANNON_BALL, "ShootCannonBall"}, {SPELL_SHOOT_DRAGON, "ShootDragon"} };
}