// Hint files help the Visual Studio IDE interpret Visual C++ identifiers
// such as names of functions and macros.
// For more information see https://go.microsoft.com/fwlink/?linkid=865984
#define DLL_EXPORT __declspec(dllexport)
#define DLL_EXPORT __declspec(dllimport)
// Hint files help the Visual Studio IDE interpret Visual C++ identifiers
// such as names of functions and macros.
// For more information see https://go.microsoft.com/fwlink/?linkid=865984
#define _EXPORT_STD
// Hint files help the Visual Studio IDE interpret Visual C++ identifiers
// such as names of functions and macros.
// For more information see https://go.microsoft.com/fwlink/?linkid=865984
#define _NODISCARD [[nodiscard]]
#define GEN_DEF_1(name) GEN_DEF_2(name, name)
#define GEN_DEF_2(name, codeName) using Any##name##Variant = std::variant<mm6::codeName*, mm7::codeName*, mm8::codeName*>;\
template<typename T>\
concept Any##name##Struct = SAME(T, mm6::codeName) || SAME(T, mm7::codeName) || SAME(T, mm8::codeName)

// "macro overloading" on number of arguments
#define GET_MACRO(_1, _2, name, ...) name
#define GEN_DEF(...) GET_MACRO(__VA_ARGS__, GEN_DEF_2, GEN_DEF_1)(__VA_ARGS__)#define RTTR_REG
#define RTTR_REGISTRATION static void rttr_auto_register_reflection_function_(); namespace {\
    struct rttr__auto__register__ {\
        rttr__auto__register__() {\
            rttr_auto_register_reflection_function_();\
        }\
    };\
} static const rttr__auto__register__ auto_register__473; static void rttr_auto_register_reflection_function_()